<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jerry&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhusas.github.io/"/>
  <updated>2018-09-07T09:38:24.014Z</updated>
  <id>https://zhusas.github.io/</id>
  
  <author>
    <name>Jerry Zhu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker Swarm中的Redis负载均衡</title>
    <link href="https://zhusas.github.io/2018/09/05/redis-LB-swarm/"/>
    <id>https://zhusas.github.io/2018/09/05/redis-LB-swarm/</id>
    <published>2018-09-05T07:00:00.000Z</published>
    <updated>2018-09-07T09:38:24.014Z</updated>
    
    <content type="html"><![CDATA[<h1 id="come-soon"><a href="#come-soon" class="headerlink" title="come soon"></a>come soon</h1><p><img src="/2018/09/05/redis-LB-swarm/redisDockerswarm.jpeg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;come-soon&quot;&gt;&lt;a href=&quot;#come-soon&quot; class=&quot;headerlink&quot; title=&quot;come soon&quot;&gt;&lt;/a&gt;come soon&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2018/09/05/redis-LB-swarm/redis
      
    
    </summary>
    
    
      <category term="docker swarm" scheme="https://zhusas.github.io/tags/docker-swarm/"/>
    
      <category term="redis" scheme="https://zhusas.github.io/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>memcached在docker swarm中的负载均衡</title>
    <link href="https://zhusas.github.io/2018/09/05/memecached-LB-swarm/"/>
    <id>https://zhusas.github.io/2018/09/05/memecached-LB-swarm/</id>
    <published>2018-09-05T06:52:00.000Z</published>
    <updated>2018-09-07T09:23:16.372Z</updated>
    
    <content type="html"><![CDATA[<p>话说上次在docker swarm里面实现了MongoDB复制集之后，可以愉快地重启运行复制集节点的机器了，存储的资料也不担心硬盘挂掉而丢失， 真是快哉~</p><p>所以，再接再厉，把Redis和Memcached也迁移到docker swarm跑起来。</p><p>先来说说memcached的业务场景及特性，知己知彼，百战百胜嘛</p><p><img src="/2018/09/05/memecached-LB-swarm/memcached_banner.jpg" alt="">   <a id="more"></a></p><p><strong>memcached场景之一</strong></p><p>用户要是忘记了密码，或者新注册用户等，总之在需要接收手机短信验证码的时候，得先输入正确的验证码，应用在生成图形验证码的时候，会往memecached里面写入验证码的哈希值，跟用户输入转换的哈希值作比较。</p><p>所以，这是一个对可用性有要求的场景，辣么，memcached必须不能单实例跑了（你看上图是一群）。</p><p><strong>memcached特性</strong></p><ol><li>在Memcached中可以保存的item数据量是没有限制的，只要内存足够；</li><li>Memcached单进程最大使用内存为2GB，要使用更多内存，可以分别在不同端口启动多个Memcached进程；</li><li>Memcached是一种无阻塞的socket通信方式的服务，基于libevent库，由于无阻塞通信，对内存读写速度非常之快；</li><li>Memcached分为服务器和客户端，可以配置多个服务器和客户端，应用于分布式的服务非常广泛；</li><li>Memcached作为小规模的数据分布式平台是非常高效的；</li></ol><p><strong>memcached存在的问题</strong></p><p>本身没有内置分布式功能，无法实现使用多台memcachd服务器来存储不同的数据，最大程度的使用相同的资源。服务器之间没有任何通信，并且不进行任何数据复制备份，所以当任何服务器节点出现故障时，会出现单点故障，如果需要实现高可用，就需要通过其他方式。</p><p>那么有问题，就会有解决方案，来张图：</p><p><img src="/2018/09/05/memecached-LB-swarm/ingress-lb.png" alt=""></p><p>这次要用到跨主机通讯，当您需要在不同Docker主机上运行的容器进行通信时，或者当多个应用程序使用swarm服务协同工作时，<strong>Overlay networks</strong>是最佳选择。</p><p>haproxy之上是应用，不考虑会话保持之类，纯粹在应用和memcached之间充当一个tcp负载均衡。</p><p>这里使用默认的overlay网络</p><p><img src="/2018/09/05/memecached-LB-swarm/ingress_overlay.png" alt=""></p><p><strong>为什么要加HAproxy？</strong><br>虽然docker的overlay网络能实现内部的负载均衡，但是万一swarm内运行服务的某节点挂了，IP都不通，那如何是好啊，该加还是得加。</p><p>那HAproxy挂了呢，挂了就上keepalived，利用vrrp协议，避免单点，这里不铺开。</p><p><strong>先建立memcached的service</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker service create --name memcached --replicas=3 -p 11211:11211 memcached</span><br></pre></td></tr></table></figure><p>名为memcached且开放了11211端口的service，三个swarm节点上都有容器实例。</p><p><strong>启动并配置HAproxy</strong></p><p>配置文件相关配置段如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">frontend haproxy_memcached</span><br><span class="line">bind *:8090</span><br><span class="line">mode tcp</span><br><span class="line">log global</span><br><span class="line">default_backend memcached_server</span><br><span class="line"></span><br><span class="line">backend memcached_server</span><br><span class="line">mode tcp</span><br><span class="line">balance source</span><br><span class="line">server memcached1 172.16.10.1:11211 check</span><br><span class="line">server memcached2 172.16.10.2:11211 check</span><br><span class="line">server memcached3 172.16.10.3:11211 check</span><br></pre></td></tr></table></figure><p>balance source<br>haroxy 将用户IP经过hash计算后 指定到固定的真实服务器上（类似于nginx 的IP hash 指令）</p><p>172.16.10.1~3<br>运行memcached service的docker swarm节点IP</p><p>容器服务还有自动重新启动策略，重启策略控制Docker守护程序在退出后是否重新启动容器。Docker支持以下重启策略：none、on-failure、any，  默认为any。</p><p>OK，打完收工。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;话说上次在docker swarm里面实现了MongoDB复制集之后，可以愉快地重启运行复制集节点的机器了，存储的资料也不担心硬盘挂掉而丢失， 真是快哉~&lt;/p&gt;
&lt;p&gt;所以，再接再厉，把Redis和Memcached也迁移到docker swarm跑起来。&lt;/p&gt;
&lt;p&gt;先来说说memcached的业务场景及特性，知己知彼，百战百胜嘛&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2018/09/05/memecached-LB-swarm/memcached_banner.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="memcached" scheme="https://zhusas.github.io/tags/memcached/"/>
    
      <category term="docker swarm" scheme="https://zhusas.github.io/tags/docker-swarm/"/>
    
      <category term="HAproxy" scheme="https://zhusas.github.io/tags/HAproxy/"/>
    
  </entry>
  
  <entry>
    <title>HAproxy解决nginx-gridfs在MongoDB副本集选举后的读取问题</title>
    <link href="https://zhusas.github.io/2018/08/08/haproxy-replica-set/"/>
    <id>https://zhusas.github.io/2018/08/08/haproxy-replica-set/</id>
    <published>2018-08-08T05:47:00.000Z</published>
    <updated>2018-08-08T05:48:42.606Z</updated>
    
    <content type="html"><![CDATA[<p>接上回，自从搭建起副本集之后，很嗨，再也不担心单机挂了之后数据丢失了。应用往MongoDB副本集写也做了相应配置。</p><p>在做nginx读取MongoDB副本集数据测试中，发现了新问题  <a id="more"></a></p><p>按照<a href="https://github.com/mdirolf/nginx-gridfs中连接副本集的配置例子，如下：" target="_blank" rel="noopener">https://github.com/mdirolf/nginx-gridfs中连接副本集的配置例子，如下：</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">location /gridfs/ &#123;</span><br><span class="line">    gridfs my_app field=filename type=string;</span><br><span class="line">    mongo &quot;foo&quot;</span><br><span class="line">          10.7.2.27:27017</span><br><span class="line">          10.7.2.28:27017;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>在主节点关闭后，其设置的第二个节点是不起作用的（我设置了五个，均不起作用，nginx读取MongoDB节点中的文件报错）</strong></p><p>由此可见nginx-gridfs插件这里是有问题的，但是我们的web服务器已经在使用了这个插件，不能轻易更换，只能另寻他法。</p><p><strong>经过测试，发现副本集在原主节点挂掉后，余下节点（包括新选举的主节点和从节点）都可以使用直连模式来读取文件。</strong></p><p>于是一个大胆的想法浮现了，何不在nginx和副本集之间加个负载均衡器？ <strong>嗯，我选了HAproxy。</strong></p><p>HAproxy的介绍百度一大堆，我就不重复了，直接上配置文件（部分以变量代替）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">global</span><br><span class="line">    maxconn 50000 <span class="comment">#默认最大连接数,需考虑ulimit-n限制</span></span><br><span class="line">    <span class="built_in">log</span> 127.0.0.1 local0</span><br><span class="line"></span><br><span class="line">defaults</span><br><span class="line">    mode tcp <span class="comment">#四层反向代理，不受套接字文件数量限制</span></span><br><span class="line">    timeout connect 20s <span class="comment">#haproxy将客户端请求转发至后端服务器所等待的超时时长</span></span><br><span class="line">    timeout client 30s <span class="comment">#客户端非活动状态的超时时长</span></span><br><span class="line">    timeout server 30s <span class="comment">#客户端与服务器端建立连接后，等待服务器端的超时时长</span></span><br><span class="line">    timeout check 10s <span class="comment">#健康状态监测时的超时时间，过短会误判，过长资源消耗\</span></span><br><span class="line">    timeout http-keep-alive 60s  <span class="comment">#长连接超时</span></span><br><span class="line">    <span class="comment">#option redispatch #当使用了cookie时，haproxy将会将其请求的后端服务器的serverID插入到cookie中，以保证会话的SESSION持久性</span></span><br><span class="line">    <span class="comment">#retries 3 #后端服务器的失败重连次数，链接失败次数超过此处值会将对应后端服务器标记不可用</span></span><br><span class="line"></span><br><span class="line">frontend mongo-in</span><br><span class="line">        <span class="built_in">bind</span> *:29000</span><br><span class="line">        <span class="built_in">log</span> global <span class="comment">#使用全局日志配置</span></span><br><span class="line">        <span class="comment">#option tcplog</span></span><br><span class="line">        <span class="comment">#option dontlognull </span></span><br><span class="line">        default_backend mongo  <span class="comment">#定义默认转发的后端服务器</span></span><br><span class="line"></span><br><span class="line">backend mongo <span class="comment">#定义后端服务群default_servers</span></span><br><span class="line">    balance roundrobin <span class="comment">#分发策略</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#check启用健康监测，监测MongoDB的服务端口，每个2秒监测一次，失败3次标记为不可用，成功2次恢复为可用</span></span><br><span class="line">    server mongo_rs1 <span class="variable">$MONGODB_RS1_IP</span>:<span class="variable">$MONGODB_PORT</span> check port <span class="variable">$MONGODB_PORT</span> inter 2s rise 2 fall 3  </span><br><span class="line">    server mongo_rs2 <span class="variable">$MONGODB_RS2_IP</span>:<span class="variable">$MONGODB_PORT</span> check port <span class="variable">$MONGODB_PORT</span> inter 2s rise 2 fall 3</span><br><span class="line">    server mongo_rs3 <span class="variable">$MONGODB_RS3_IP</span>:<span class="variable">$MONGODB_PORT</span> check port <span class="variable">$MONGODB_PORT</span> inter 2s rise 2 fall 3</span><br><span class="line">    server mongo_rs4 <span class="variable">$MONGODB_RS4_IP</span>:<span class="variable">$MONGODB_PORT</span> check port <span class="variable">$MONGODB_PORT</span> inter 2s rise 2 fall 3</span><br><span class="line">    server mongo_rs5 <span class="variable">$MONGODB_RS5_IP</span>:<span class="variable">$MONGODB_PORT</span> check port <span class="variable">$MONGODB_PORT</span> inter 2s rise 2 fall 3</span><br></pre></td></tr></table></figure><p>上了之后，问题解决，哈哈哈哈哈。。。。。。。。。。。。。。。。。</p><p><strong>总结</strong></p><hr><ol><li>如果用HAproxy转发HTTP连接，须考虑Linux的open files限制，如果是tcp的代理，可以忽略，其在内核就完成转发了。</li><li>多看官方文档。</li><li>任何解决方案都要考虑业务场景的真实需求。</li><li>这里因为对从节点的数据实时性要求不是即时同步，首要需求是数据的多份拷贝的完整性和服务的高可用。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;接上回，自从搭建起副本集之后，很嗨，再也不担心单机挂了之后数据丢失了。应用往MongoDB副本集写也做了相应配置。&lt;/p&gt;
&lt;p&gt;在做nginx读取MongoDB副本集数据测试中，发现了新问题&lt;/p&gt;
    
    </summary>
    
    
      <category term="haproxy" scheme="https://zhusas.github.io/tags/haproxy/"/>
    
      <category term="replica set" scheme="https://zhusas.github.io/tags/replica-set/"/>
    
      <category term="mongodb" scheme="https://zhusas.github.io/tags/mongodb/"/>
    
      <category term="nginx" scheme="https://zhusas.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Ansible和Docker Swarm还有MongoDB Replica Set</title>
    <link href="https://zhusas.github.io/2018/08/07/nsible%E5%92%8CDocker-Swarm%E8%BF%98%E6%9C%89MongoDB-Replica-Set/"/>
    <id>https://zhusas.github.io/2018/08/07/nsible和Docker-Swarm还有MongoDB-Replica-Set/</id>
    <published>2018-08-07T06:34:00.000Z</published>
    <updated>2018-09-07T02:51:39.984Z</updated>
    
    <content type="html"><![CDATA[<p><strong>工作需要，Let’s do it.</strong></p><p><img src="/2018/08/07/nsible和Docker-Swarm还有MongoDB-Replica-Set/mongo.swarm.png" alt=""></p><h3 id="策略"><a href="#策略" class="headerlink" title="策略"></a><strong>策略</strong></h3><ul><li>事先确定Replica Set的成员数量，因为这跟能Replica Set中能容忍挂掉的成员数量有直接关系</li><li>Replica Set中的voting成员数量要提前确定，MongoDB的Replica Set最大可以拥有50个成员，其中包括最多7个voting成员</li><li>部署奇数成员数的Replica Set</li><li>操作系统采用Ubuntu16.04.4 LTS 64bit</li><li>原计划五台机器单机跑docker实例，也可以创建replica set ，但是日后还有其他测试要用到swarm环境，所以干脆一步到位，五台机器全部作为swarm node <a id="more"></a></li></ul><p><strong>IP规划</strong></p><table><thead><tr><th style="text-align:center">Replica Set 角色</th><th style="text-align:center">swarm角色</th><th style="text-align:center">物理机器名</th><th style="text-align:center">IP</th><th style="text-align:center">CPU</th><th style="text-align:center">内存</th></tr></thead><tbody><tr><td style="text-align:center">主节点</td><td style="text-align:center">管理节点</td><td style="text-align:center">docker-swarm01</td><td style="text-align:center">192.168.0.233</td><td style="text-align:center">i5-4590</td><td style="text-align:center">8G</td></tr><tr><td style="text-align:center">从节点</td><td style="text-align:center">工作节点</td><td style="text-align:center">docker-swarm02</td><td style="text-align:center">192.168.0.232</td><td style="text-align:center">Celeron G1840</td><td style="text-align:center">8G</td></tr><tr><td style="text-align:center">从节点</td><td style="text-align:center">工作节点</td><td style="text-align:center">docker-swarm03</td><td style="text-align:center">192.168.0.242</td><td style="text-align:center">i7-4790</td><td style="text-align:center">16G</td></tr><tr><td style="text-align:center">从节点</td><td style="text-align:center">工作节点</td><td style="text-align:center">docker-swarm04</td><td style="text-align:center">192.168.0.241</td><td style="text-align:center">i7-6700</td><td style="text-align:center">8G</td></tr><tr><td style="text-align:center">从节点</td><td style="text-align:center">工作节点</td><td style="text-align:center">docker-swarm05</td><td style="text-align:center">192.168.0.230</td><td style="text-align:center">i5-4590</td><td style="text-align:center">8G</td></tr></tbody></table><p>按照表格规划好的，修改各机器的IP和机器名</p><p>这里我们使用五台机器搭建swarm集群，root账号操作，顺序如下：</p><ol><li>准备工作，免密登录，初始化设置等。</li><li>替换系统的默认软件源为网易镜像源。</li><li>增加科技大docker安装源，安装好docker-ce最新稳定版本。</li><li>docker hub镜像源替换为国内DaoCloud加速源。（你也可以用已有的docker hub加速器）</li><li>上传MongoDB测试数据（这一步可以提前上传到主节点），这里我上传到了docker-swarm01。</li><li>建立docker swarm，并把各节点加入swarm。</li><li>每个节点建立存放MongoDB的数据volume，并做好命名工作。</li><li>每个节点建立MongoDB Replica Set的节点service，并做好命名工作。</li><li>初始化MongoDB Replica Set。</li><li>还原备份数据到Replica Set中。</li><li>查看数据同步情况，确认同步完毕。</li><li>进行访问测试。</li></ol><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a><strong>准备工作</strong></h3><p>1、配置IP地址，ubuntu16.04的话，修改/etc/network/interfaces文件即可。</p><p>2、配置Ansible与目标机器的ssh免密登录，这里以swarm01为例。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成ssh key</span></span><br><span class="line">ssh-keygen -t rsa -b 8192 -C Ansible-key</span><br><span class="line"><span class="comment"># 拷贝ssh key到远程主机，ssh的时候就不需要输入密码了</span></span><br><span class="line">ssh-copy-id root@192.168.0.233  </span><br><span class="line"><span class="comment"># ssh的时候不会提示是否保存key</span></span><br><span class="line">ssh-keyscan 192.168.0.233 &gt;&gt; ~/.ssh/known_hosts</span><br></pre></td></tr></table></figure><p>3、修改/etc/ansible/hosts和/etc/hosts文件</p><p>不修改/etc/hosts的话，Ansible会报错</p><p>/etc/hosts文件加入以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">192.168.0.233 swarm01</span><br><span class="line">192.168.0.232 swarm02</span><br><span class="line">192.168.0.242 swarm03</span><br><span class="line">192.168.0.241 swarm04</span><br><span class="line">192.168.0.230 swarm05</span><br></pre></td></tr></table></figure><p>/etc/ansible/hosts文件加入以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[swarm]</span></span><br><span class="line"><span class="string">swarm01</span> <span class="string">ansble_ssh_host=192.168.0.233</span> <span class="string">ansible_ssh_port=22</span> <span class="string">ansible_ssh_user="root"</span></span><br><span class="line"><span class="string">swarm02</span> <span class="string">ansble_ssh_host=192.168.0.232</span> <span class="string">ansible_ssh_port=22</span> <span class="string">ansible_ssh_user="root"</span></span><br><span class="line"><span class="string">swarm03</span> <span class="string">ansble_ssh_host=192.168.0.242</span> <span class="string">ansible_ssh_port=22</span> <span class="string">ansible_ssh_user="root"</span></span><br><span class="line"><span class="string">swarm04</span> <span class="string">ansble_ssh_host=192.168.0.241</span> <span class="string">ansible_ssh_port=22</span> <span class="string">ansible_ssh_user="root"</span></span><br><span class="line"><span class="string">swarm05</span> <span class="string">ansble_ssh_host=192.168.0.230</span> <span class="string">ansible_ssh_port=22</span> <span class="string">ansible_ssh_user="root"</span></span><br></pre></td></tr></table></figure><h3 id="替换系统的默认软件源为网易镜像源"><a href="#替换系统的默认软件源为网易镜像源" class="headerlink" title="替换系统的默认软件源为网易镜像源"></a><strong>替换系统的默认软件源为网易镜像源</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#这里采用Ansible的copy模块+修改好的sources.list文件上传到对应位置即可</span></span><br><span class="line">ansible swarm -m copy -a <span class="string">"src=/opt/sources.list dest=/etc/apt/sources.list owner=root group=root mode=0644 backup=yes"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#给swarm各节点系统升级软件包</span></span><br><span class="line">ansible swarm -m apt -a <span class="string">"force_apt_get=yes state=latest upgrade=yes update_cache=yes autoremove=yes"</span></span><br></pre></td></tr></table></figure><h3 id="增加科技大docker安装源，安装好docker-ce最新稳定版本"><a href="#增加科技大docker安装源，安装好docker-ce最新稳定版本" class="headerlink" title="增加科技大docker安装源，安装好docker-ce最新稳定版本"></a>增加科技大docker安装源，安装好docker-ce最新稳定版本</h3><p>一键脚本在此 <a href="https://github.com/zhusas/docker-ce.init.git" target="_blank" rel="noopener">https://github.com/zhusas/docker-ce.init.git</a>  这个脚本也包含了docker hub镜像源替换为国内自定义加速源。</p><p>这是之前写的一个脚本，用ansible的script模块可以使用，其内容也可以写成playbook，这里就直接用脚本操作，日后再完善playbook，放到Github上。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#批量运行脚本</span></span><br><span class="line">ansible swarm -m script -a <span class="string">"/opt/docker-ce.repo.init.sh"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#验证一下安装的docker版本</span></span><br><span class="line">root@Ansible:/opt<span class="comment"># ansible swarm -a "docker -v"</span></span><br><span class="line">swarm01 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">Docker version 18.03.1-ce, build 9ee9f40</span><br><span class="line">swarm03 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">Docker version 18.03.1-ce, build 9ee9f40</span><br><span class="line">swarm05 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">Docker version 18.03.1-ce, build 9ee9f40</span><br><span class="line">swarm02 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">Docker version 18.03.1-ce, build 9ee9f40</span><br><span class="line">swarm04 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">Docker version 18.03.1-ce, build 9ee9f40</span><br></pre></td></tr></table></figure><h3 id="建立docker-swarm，并把各节点加入swarm"><a href="#建立docker-swarm，并把各节点加入swarm" class="headerlink" title="建立docker swarm，并把各节点加入swarm"></a>建立docker swarm，并把各节点加入swarm</h3><p>以下端口必须保持畅通：</p><p>TCP port 2377 ：swarm集群管理信息通讯端口</p><p>TCP and UDP port 7946 ：swarm节点之间的通讯端口</p><p>UDP port 4789 ： overlay网络通讯端口</p><p>如果你建立了一个加密的overlay网络 (–opt encrypted)，你还徐确保 ip protocol 50 (ESP) 能够正常通讯。</p><p>下面开始操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">root@Ansible:/opt<span class="comment"># ansible swarm01 -m shell -a "docker swarm init --advertise-addr 192.168.0.233" </span></span><br><span class="line">swarm01 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">Swarm initialized: current node (wum4rkn8jk4qb97yib9kggirv) is now a manager.</span><br><span class="line"></span><br><span class="line">To add a worker to this swarm, run the following <span class="built_in">command</span>:</span><br><span class="line"></span><br><span class="line">    docker swarm join --token SWMTKN-1-5wooyyq98crvrs0zv49ktg0bguua90k7in2ij1me81ljfgpkqt-7o9simk0nit9avq3637gzh0a5 192.168.0.233:2377</span><br><span class="line"></span><br><span class="line">To add a manager to this swarm, run <span class="string">'docker swarm join-token manager'</span> and follow the instructions.</span><br><span class="line">root@Ansible:/opt<span class="comment"># ansible swarm -m shell -a "docker swarm join --token SWMTKN-1-5wooyyq98crvrs0zv49ktg0bguua90k7in2ij1me81ljfgpkqt-7o9simk0nit9avq3637gzh0a5 192.168.0.233:2377"</span></span><br><span class="line">swarm01 | FAILED | rc=1 &gt;&gt;</span><br><span class="line">Error response from daemon: This node is already part of a swarm. Use <span class="string">"docker swarm leave"</span> to leave this swarm and join another one.non-zero <span class="built_in">return</span> code</span><br><span class="line">swarm03 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">This node joined a swarm as a worker.</span><br><span class="line">swarm04 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">This node joined a swarm as a worker.</span><br><span class="line">swarm05 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">This node joined a swarm as a worker.</span><br><span class="line">swarm02 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">This node joined a swarm as a worker.</span><br><span class="line">root@Ansible:/opt<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>可以看到，建立了swarm管理节点之后，运行docker swarm join命令，swarm01会报“Error response from daemon: This node is already part of a swarm. Use “docker swarm leave” to leave this swarm and join another one.non-zero return code”，意思是提醒你这已经是swarm的一部分了，不过没关系，哈哈。swarm02~05已经顺利加入。</p><p>我们用命令看看 </p><p><img src="/2018/08/07/nsible和Docker-Swarm还有MongoDB-Replica-Set/nodels.png" alt=""></p><p>OK了。</p><p>这里提醒一下的是，一般服务器都是网卡，建立swarm时候，最好加上–listen-addr 参数。我这里测试的机器都是单网卡，影响不大。各位切记哦。</p><h3 id="明确一下计划"><a href="#明确一下计划" class="headerlink" title="明确一下计划"></a>明确一下计划</h3><p>基本计划是将MongoDB副本集的每个成员定义为单独的swarm服务，并使用docker service的约束参数来防止swarm的scaling特性将它们从数据卷移开，因为数据卷存放在每个节点上，没法跟着容器漂移到其他节点， 这保留了Docker提供的所有操作优势，同时消除了scaling故障恢复功能（会影响MongoDB副本集的可用性）。通过命令将MongoDB服务固定到与其数据卷相同的swarm节点，在每个节点上设置标签。 稍后在创建服务时，将在约束中使用这些标签。</p><h3 id="给swarm各节点加标签"><a href="#给swarm各节点加标签" class="headerlink" title="给swarm各节点加标签"></a>给swarm各节点加标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@Ansible:~<span class="comment"># ansible swarm01 -m shell -a "docker node update --label-add mongo.rs=1 docker-swarm01"</span></span><br><span class="line">swarm01 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">docker-swarm01</span><br><span class="line">root@Ansible:~<span class="comment"># ansible swarm01 -m shell -a "docker node update --label-add mongo.rs=2 docker-swarm02"</span></span><br><span class="line">swarm01 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">docker-swarm02</span><br><span class="line">root@Ansible:~<span class="comment"># ansible swarm01 -m shell -a "docker node update --label-add mongo.rs=3 docker-swarm03"</span></span><br><span class="line">swarm01 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">docker-swarm03</span><br><span class="line">root@Ansible:~<span class="comment"># ansible swarm01 -m shell -a "docker node update --label-add mongo.rs=4 docker-swarm04"</span></span><br><span class="line">swarm01 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">docker-swarm04</span><br><span class="line">root@Ansible:~<span class="comment"># ansible swarm01 -m shell -a "docker node update --label-add mongo.rs=5 docker-swarm05"</span></span><br><span class="line">swarm01 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">docker-swarm05</span><br></pre></td></tr></table></figure><p>这步感觉不够优雅，此时playbook的价值就体现出来了。我这是为了展现详细步骤才这样。</p><h3 id="建立MongoDB-replica-set在docker-swarm的overlay专用网络"><a href="#建立MongoDB-replica-set在docker-swarm的overlay专用网络" class="headerlink" title="建立MongoDB replica set在docker swarm的overlay专用网络"></a>建立MongoDB replica set在docker swarm的overlay专用网络</h3><p>swarm跨节点通讯必备</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">root@Ansible:~<span class="comment"># ansible swarm01 -m docker_network -a "name=mongo_network driver=overlay"</span></span><br><span class="line">swarm01 | SUCCESS =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"docker_network"</span>: &#123;</span><br><span class="line">            <span class="string">"Attachable"</span>: <span class="literal">false</span>, </span><br><span class="line">            <span class="string">"ConfigFrom"</span>: &#123;</span><br><span class="line">                <span class="string">"Network"</span>: <span class="string">""</span></span><br><span class="line">            &#125;, </span><br><span class="line">            <span class="string">"ConfigOnly"</span>: <span class="literal">false</span>, </span><br><span class="line">            <span class="string">"Containers"</span>: null, </span><br><span class="line">            <span class="string">"Created"</span>: <span class="string">"2018-07-16T08:29:15.88390955Z"</span>, </span><br><span class="line">            <span class="string">"Driver"</span>: <span class="string">""</span>, </span><br><span class="line">            <span class="string">"EnableIPv6"</span>: <span class="literal">false</span>, </span><br><span class="line">            <span class="string">"IPAM"</span>: &#123;</span><br><span class="line">                <span class="string">"Config"</span>: [], </span><br><span class="line">                <span class="string">"Driver"</span>: <span class="string">"default"</span>, </span><br><span class="line">                <span class="string">"Options"</span>: null</span><br><span class="line">            &#125;, </span><br><span class="line">            <span class="string">"Id"</span>: <span class="string">"ku3waawi7hqrj02zh9sfvgcfk"</span>, </span><br><span class="line">            <span class="string">"Ingress"</span>: <span class="literal">false</span>, </span><br><span class="line">            <span class="string">"Internal"</span>: <span class="literal">false</span>, </span><br><span class="line">            <span class="string">"Labels"</span>: null, </span><br><span class="line">            <span class="string">"Name"</span>: <span class="string">"mongo_network"</span>, </span><br><span class="line">            <span class="string">"Options"</span>: null, </span><br><span class="line">            <span class="string">"Scope"</span>: <span class="string">"swarm"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">root@Ansible:~<span class="comment"># ansible swarm01  -a "docker network ls"</span></span><br><span class="line">swarm01 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">NETWORK ID          NAME                DRIVER              SCOPE</span><br><span class="line">4127d48c4ee3        bridge              bridge              <span class="built_in">local</span></span><br><span class="line">898954254fae        docker_gwbridge     bridge              <span class="built_in">local</span></span><br><span class="line">ce65005a6830        host                host                <span class="built_in">local</span></span><br><span class="line">sqsf18n9lco7        ingress             overlay             swarm</span><br><span class="line">ku3waawi7hqr        mongo_network       overlay             swarm</span><br><span class="line">d7d752f1abcc        none                null                <span class="built_in">local</span></span><br></pre></td></tr></table></figure><h3 id="建立存放MongoDB的数据Volume"><a href="#建立存放MongoDB的数据Volume" class="headerlink" title="建立存放MongoDB的数据Volume"></a>建立存放MongoDB的数据Volume</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@Ansible:~<span class="comment"># ansible swarm01 -m docker_volume -a "name=rsdata1"</span></span><br><span class="line">swarm01 | SUCCESS =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"docker_volume"</span>: &#123;</span><br><span class="line">            <span class="string">"CreatedAt"</span>: <span class="string">"2018-07-16T16:40:16+08:00"</span>, </span><br><span class="line">            <span class="string">"Driver"</span>: <span class="string">"local"</span>, </span><br><span class="line">            <span class="string">"Labels"</span>: null, </span><br><span class="line">            <span class="string">"Mountpoint"</span>: <span class="string">"/var/lib/docker/volumes/rsdata1/_data"</span>, </span><br><span class="line">            <span class="string">"Name"</span>: <span class="string">"rsdata1"</span>, </span><br><span class="line">            <span class="string">"Options"</span>: &#123;&#125;, </span><br><span class="line">            <span class="string">"Scope"</span>: <span class="string">"local"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其他四台以此类推，建立volume。</p><p>建立完毕后，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root@Ansible:/opt<span class="comment"># ansible swarm -a "docker volume ls"</span></span><br><span class="line">swarm03 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">DRIVER              VOLUME NAME</span><br><span class="line"><span class="built_in">local</span>               rsdata3</span><br><span class="line">swarm05 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">DRIVER              VOLUME NAME</span><br><span class="line"><span class="built_in">local</span>               rsdata5</span><br><span class="line">swarm01 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">DRIVER              VOLUME NAME</span><br><span class="line"><span class="built_in">local</span>               rsdata1</span><br><span class="line">swarm04 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">DRIVER              VOLUME NAME</span><br><span class="line"><span class="built_in">local</span>               rsdata4</span><br><span class="line">swarm02 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">DRIVER              VOLUME NAME</span><br><span class="line"><span class="built_in">local</span>               rsdata2</span><br></pre></td></tr></table></figure><h3 id="在swarm01（管理节点）上建立replica-set各个节点服务"><a href="#在swarm01（管理节点）上建立replica-set各个节点服务" class="headerlink" title="在swarm01（管理节点）上建立replica set各个节点服务"></a>在swarm01（管理节点）上建立replica set各个节点服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker service create --replicas 1 --network mongo_network --mount <span class="built_in">type</span>=volume,<span class="built_in">source</span>=rsdata1,target=/data/db --constraint <span class="string">'node.labels.mongo.rs==1'</span> -p 27017:27017 --name mongo_rs1 mongo:3.6 mongod --replSet <span class="string">"whmallRS"</span></span><br><span class="line"></span><br><span class="line">docker service create --replicas 1 --network mongo_network --mount <span class="built_in">type</span>=volume,<span class="built_in">source</span>=rsdata2,target=/data/db --constraint <span class="string">'node.labels.mongo.rs==2'</span> -p 27018:27017 --name mongo_rs2 mongo:3.6 mongod --replSet <span class="string">"whmallRS"</span></span><br><span class="line"></span><br><span class="line">docker service create --replicas 1 --network mongo_network --mount <span class="built_in">type</span>=volume,<span class="built_in">source</span>=rsdata3,target=/data/db --constraint <span class="string">'node.labels.mongo.rs==3'</span> -p 27019:27017 --name mongo_rs3 mongo:3.6 mongod --replSet <span class="string">"whmallRS"</span></span><br><span class="line"></span><br><span class="line">docker service create --replicas 1 --network mongo_network --mount <span class="built_in">type</span>=volume,<span class="built_in">source</span>=rsdata4,target=/data/db --constraint <span class="string">'node.labels.mongo.rs==4'</span> -p 27020:27017 --name mongo_rs4 mongo:3.6 mongod --replSet <span class="string">"whmallRS"</span></span><br><span class="line"></span><br><span class="line">docker service create --replicas 1 --network mongo_network --mount <span class="built_in">type</span>=volume,<span class="built_in">source</span>=rsdata5,target=/data/db --constraint <span class="string">'node.labels.mongo.rs==5'</span> -p 27021:27017 --name mongo_rs5 mongo:3.6 mongod --replSet <span class="string">"whmallRS"</span></span><br></pre></td></tr></table></figure><p>-p &lt;发布端口&gt;:&lt;目标端口&gt;<br>&lt;目标端口&gt;为Docker容器中所监听的端口，&lt;发布端口&gt;为Swarm集群中使得服务可以访问的端口。</p><p>–constraint ‘node.labels.mongo.rs==2’<br>这个参数作用是通过定义约束表达式来限制可以调度任务的节点，因为没做分布式存储，万一docker-swarm02上mongo.rs2这个服务飘到了docker-swarm05上去了，服务读取不到数据，那就懵逼了。<br>必须找行政妹子多搞几台PC做分布式存储，GlusterFS就不错。。。。。 必须的~~</p><p>看看状况</p><p><img src="/2018/08/07/nsible和Docker-Swarm还有MongoDB-Replica-Set/dockerps.png" alt=""></p><h3 id="初始化MongoDB-Replica-Set"><a href="#初始化MongoDB-Replica-Set" class="headerlink" title="初始化MongoDB Replica Set"></a>初始化MongoDB Replica Set</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#初始化命令</span></span><br><span class="line">docker <span class="built_in">exec</span> -it $(docker ps -qf label=com.docker.swarm.service.name=mongo_rs1) mongo --<span class="built_in">eval</span> <span class="string">'rs.initiate( &#123; _id : "whmallRS", members: [&#123; _id: 1, host: "mongo_rs1:27017" &#125;, &#123; _id: 2, host: "mongo_rs2:27017" &#125;, &#123; _id: 3, host: "mongo_rs3:27017" &#125;, &#123; _id: 4, host: "mongo_rs4:27017" &#125;, &#123; _id: 5, host: "mongo_rs5:27017" &#125;], settings: &#123; getLastErrorDefaults: &#123; w: "majority", wtimeout: 30000 &#125;&#125;&#125;)'</span></span><br><span class="line"></span><br><span class="line">MongoDB shell version v3.6.6</span><br><span class="line">connecting to: mongodb://127.0.0.1:27017</span><br><span class="line">MongoDB server version: 3.6.6</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"ok"</span> : 1,</span><br><span class="line"><span class="string">"operationTime"</span> : Timestamp(1531928549, 1),</span><br><span class="line"><span class="string">"<span class="variable">$clusterTime</span>"</span> : &#123;</span><br><span class="line"><span class="string">"clusterTime"</span> : Timestamp(1531928549, 1),</span><br><span class="line"><span class="string">"signature"</span> : &#123;</span><br><span class="line"><span class="string">"hash"</span> : BinData(0,<span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAA="</span>),</span><br><span class="line"><span class="string">"keyId"</span> : NumberLong(0)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看replica set状态</span></span><br><span class="line">docker <span class="built_in">exec</span> -it $(docker ps -qf label=com.docker.swarm.service.name=mongo_rs1) mongo --<span class="built_in">eval</span> <span class="string">'rs.status()'</span></span><br><span class="line"></span><br><span class="line">MongoDB shell version v3.6.6</span><br><span class="line">connecting to: mongodb://127.0.0.1:27017</span><br><span class="line">MongoDB server version: 3.6.6</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"set"</span> : <span class="string">"whmallRS"</span>,</span><br><span class="line"><span class="string">"date"</span> : ISODate(<span class="string">"2018-07-18T15:44:54.605Z"</span>),</span><br><span class="line"><span class="string">"myState"</span> : 1,</span><br><span class="line"><span class="string">"term"</span> : NumberLong(1),</span><br><span class="line"><span class="string">"syncingTo"</span> : <span class="string">""</span>,</span><br><span class="line"><span class="string">"syncSourceHost"</span> : <span class="string">""</span>,</span><br><span class="line"><span class="string">"syncSourceId"</span> : -1,</span><br><span class="line"><span class="string">"heartbeatIntervalMillis"</span> : NumberLong(2000),</span><br><span class="line"><span class="string">"optimes"</span> : &#123;</span><br><span class="line"><span class="string">"lastCommittedOpTime"</span> : &#123;</span><br><span class="line"><span class="string">"ts"</span> : Timestamp(1531928691, 1),</span><br><span class="line"><span class="string">"t"</span> : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"readConcernMajorityOpTime"</span> : &#123;</span><br><span class="line"><span class="string">"ts"</span> : Timestamp(1531928691, 1),</span><br><span class="line"><span class="string">"t"</span> : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"appliedOpTime"</span> : &#123;</span><br><span class="line"><span class="string">"ts"</span> : Timestamp(1531928691, 1),</span><br><span class="line"><span class="string">"t"</span> : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"durableOpTime"</span> : &#123;</span><br><span class="line"><span class="string">"ts"</span> : Timestamp(1531928691, 1),</span><br><span class="line"><span class="string">"t"</span> : NumberLong(1)</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"members"</span> : [</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"_id"</span> : 1,</span><br><span class="line"><span class="string">"name"</span> : <span class="string">"mongo_rs1:27017"</span>,</span><br><span class="line"><span class="string">"health"</span> : 1,</span><br><span class="line"><span class="string">"state"</span> : 1,</span><br><span class="line"><span class="string">"stateStr"</span> : <span class="string">"PRIMARY"</span>,</span><br><span class="line"><span class="string">"uptime"</span> : 1103,</span><br><span class="line"><span class="string">"optime"</span> : &#123;</span><br><span class="line"><span class="string">"ts"</span> : Timestamp(1531928691, 1),</span><br><span class="line"><span class="string">"t"</span> : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"optimeDate"</span> : ISODate(<span class="string">"2018-07-18T15:44:51Z"</span>),</span><br><span class="line"><span class="string">"syncingTo"</span> : <span class="string">""</span>,</span><br><span class="line"><span class="string">"syncSourceHost"</span> : <span class="string">""</span>,</span><br><span class="line"><span class="string">"syncSourceId"</span> : -1,</span><br><span class="line"><span class="string">"infoMessage"</span> : <span class="string">""</span>,</span><br><span class="line"><span class="string">"electionTime"</span> : Timestamp(1531928560, 1),</span><br><span class="line"><span class="string">"electionDate"</span> : ISODate(<span class="string">"2018-07-18T15:42:40Z"</span>),</span><br><span class="line"><span class="string">"configVersion"</span> : 1,</span><br><span class="line"><span class="string">"self"</span> : <span class="literal">true</span>,</span><br><span class="line"><span class="string">"lastHeartbeatMessage"</span> : <span class="string">""</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"_id"</span> : 2,</span><br><span class="line"><span class="string">"name"</span> : <span class="string">"mongo_rs2:27017"</span>,</span><br><span class="line"><span class="string">"health"</span> : 1,</span><br><span class="line"><span class="string">"state"</span> : 2,</span><br><span class="line"><span class="string">"stateStr"</span> : <span class="string">"SECONDARY"</span>,</span><br><span class="line"><span class="string">"uptime"</span> : 145,</span><br><span class="line"><span class="string">"optime"</span> : &#123;</span><br><span class="line"><span class="string">"ts"</span> : Timestamp(1531928691, 1),</span><br><span class="line"><span class="string">"t"</span> : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"optimeDurable"</span> : &#123;</span><br><span class="line"><span class="string">"ts"</span> : Timestamp(1531928691, 1),</span><br><span class="line"><span class="string">"t"</span> : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"optimeDate"</span> : ISODate(<span class="string">"2018-07-18T15:44:51Z"</span>),</span><br><span class="line"><span class="string">"optimeDurableDate"</span> : ISODate(<span class="string">"2018-07-18T15:44:51Z"</span>),</span><br><span class="line"><span class="string">"lastHeartbeat"</span> : ISODate(<span class="string">"2018-07-18T15:44:54.127Z"</span>),</span><br><span class="line"><span class="string">"lastHeartbeatRecv"</span> : ISODate(<span class="string">"2018-07-18T15:44:54.464Z"</span>),</span><br><span class="line"><span class="string">"pingMs"</span> : NumberLong(0),</span><br><span class="line"><span class="string">"lastHeartbeatMessage"</span> : <span class="string">""</span>,</span><br><span class="line"><span class="string">"syncingTo"</span> : <span class="string">"mongo_rs1:27017"</span>,</span><br><span class="line"><span class="string">"syncSourceHost"</span> : <span class="string">"mongo_rs1:27017"</span>,</span><br><span class="line"><span class="string">"syncSourceId"</span> : 1,</span><br><span class="line"><span class="string">"infoMessage"</span> : <span class="string">""</span>,</span><br><span class="line"><span class="string">"configVersion"</span> : 1</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"_id"</span> : 3,</span><br><span class="line"><span class="string">"name"</span> : <span class="string">"mongo_rs3:27017"</span>,</span><br><span class="line"><span class="string">"health"</span> : 1,</span><br><span class="line"><span class="string">"state"</span> : 2,</span><br><span class="line"><span class="string">"stateStr"</span> : <span class="string">"SECONDARY"</span>,</span><br><span class="line"><span class="string">"uptime"</span> : 145,</span><br><span class="line"><span class="string">"optime"</span> : &#123;</span><br><span class="line"><span class="string">"ts"</span> : Timestamp(1531928691, 1),</span><br><span class="line"><span class="string">"t"</span> : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"optimeDurable"</span> : &#123;</span><br><span class="line"><span class="string">"ts"</span> : Timestamp(1531928691, 1),</span><br><span class="line"><span class="string">"t"</span> : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"optimeDate"</span> : ISODate(<span class="string">"2018-07-18T15:44:51Z"</span>),</span><br><span class="line"><span class="string">"optimeDurableDate"</span> : ISODate(<span class="string">"2018-07-18T15:44:51Z"</span>),</span><br><span class="line"><span class="string">"lastHeartbeat"</span> : ISODate(<span class="string">"2018-07-18T15:44:54.117Z"</span>),</span><br><span class="line"><span class="string">"lastHeartbeatRecv"</span> : ISODate(<span class="string">"2018-07-18T15:44:54.276Z"</span>),</span><br><span class="line"><span class="string">"pingMs"</span> : NumberLong(0),</span><br><span class="line"><span class="string">"lastHeartbeatMessage"</span> : <span class="string">""</span>,</span><br><span class="line"><span class="string">"syncingTo"</span> : <span class="string">"mongo_rs1:27017"</span>,</span><br><span class="line"><span class="string">"syncSourceHost"</span> : <span class="string">"mongo_rs1:27017"</span>,</span><br><span class="line"><span class="string">"syncSourceId"</span> : 1,</span><br><span class="line"><span class="string">"infoMessage"</span> : <span class="string">""</span>,</span><br><span class="line"><span class="string">"configVersion"</span> : 1</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"_id"</span> : 4,</span><br><span class="line"><span class="string">"name"</span> : <span class="string">"mongo_rs4:27017"</span>,</span><br><span class="line"><span class="string">"health"</span> : 1,</span><br><span class="line"><span class="string">"state"</span> : 2,</span><br><span class="line"><span class="string">"stateStr"</span> : <span class="string">"SECONDARY"</span>,</span><br><span class="line"><span class="string">"uptime"</span> : 145,</span><br><span class="line"><span class="string">"optime"</span> : &#123;</span><br><span class="line"><span class="string">"ts"</span> : Timestamp(1531928691, 1),</span><br><span class="line"><span class="string">"t"</span> : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"optimeDurable"</span> : &#123;</span><br><span class="line"><span class="string">"ts"</span> : Timestamp(1531928691, 1),</span><br><span class="line"><span class="string">"t"</span> : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"optimeDate"</span> : ISODate(<span class="string">"2018-07-18T15:44:51Z"</span>),</span><br><span class="line"><span class="string">"optimeDurableDate"</span> : ISODate(<span class="string">"2018-07-18T15:44:51Z"</span>),</span><br><span class="line"><span class="string">"lastHeartbeat"</span> : ISODate(<span class="string">"2018-07-18T15:44:54.186Z"</span>),</span><br><span class="line"><span class="string">"lastHeartbeatRecv"</span> : ISODate(<span class="string">"2018-07-18T15:44:54.583Z"</span>),</span><br><span class="line"><span class="string">"pingMs"</span> : NumberLong(1),</span><br><span class="line"><span class="string">"lastHeartbeatMessage"</span> : <span class="string">""</span>,</span><br><span class="line"><span class="string">"syncingTo"</span> : <span class="string">"mongo_rs1:27017"</span>,</span><br><span class="line"><span class="string">"syncSourceHost"</span> : <span class="string">"mongo_rs1:27017"</span>,</span><br><span class="line"><span class="string">"syncSourceId"</span> : 1,</span><br><span class="line"><span class="string">"infoMessage"</span> : <span class="string">""</span>,</span><br><span class="line"><span class="string">"configVersion"</span> : 1</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"_id"</span> : 5,</span><br><span class="line"><span class="string">"name"</span> : <span class="string">"mongo_rs5:27017"</span>,</span><br><span class="line"><span class="string">"health"</span> : 1,</span><br><span class="line"><span class="string">"state"</span> : 2,</span><br><span class="line"><span class="string">"stateStr"</span> : <span class="string">"SECONDARY"</span>,</span><br><span class="line"><span class="string">"uptime"</span> : 145,</span><br><span class="line"><span class="string">"optime"</span> : &#123;</span><br><span class="line"><span class="string">"ts"</span> : Timestamp(1531928691, 1),</span><br><span class="line"><span class="string">"t"</span> : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"optimeDurable"</span> : &#123;</span><br><span class="line"><span class="string">"ts"</span> : Timestamp(1531928691, 1),</span><br><span class="line"><span class="string">"t"</span> : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"optimeDate"</span> : ISODate(<span class="string">"2018-07-18T15:44:51Z"</span>),</span><br><span class="line"><span class="string">"optimeDurableDate"</span> : ISODate(<span class="string">"2018-07-18T15:44:51Z"</span>),</span><br><span class="line"><span class="string">"lastHeartbeat"</span> : ISODate(<span class="string">"2018-07-18T15:44:54.119Z"</span>),</span><br><span class="line"><span class="string">"lastHeartbeatRecv"</span> : ISODate(<span class="string">"2018-07-18T15:44:54.401Z"</span>),</span><br><span class="line"><span class="string">"pingMs"</span> : NumberLong(0),</span><br><span class="line"><span class="string">"lastHeartbeatMessage"</span> : <span class="string">""</span>,</span><br><span class="line"><span class="string">"syncingTo"</span> : <span class="string">"mongo_rs1:27017"</span>,</span><br><span class="line"><span class="string">"syncSourceHost"</span> : <span class="string">"mongo_rs1:27017"</span>,</span><br><span class="line"><span class="string">"syncSourceId"</span> : 1,</span><br><span class="line"><span class="string">"infoMessage"</span> : <span class="string">""</span>,</span><br><span class="line"><span class="string">"configVersion"</span> : 1</span><br><span class="line">&#125;</span><br><span class="line">],</span><br><span class="line"><span class="string">"ok"</span> : 1,</span><br><span class="line"><span class="string">"operationTime"</span> : Timestamp(1531928691, 1),</span><br><span class="line"><span class="string">"<span class="variable">$clusterTime</span>"</span> : &#123;</span><br><span class="line"><span class="string">"clusterTime"</span> : Timestamp(1531928691, 1),</span><br><span class="line"><span class="string">"signature"</span> : &#123;</span><br><span class="line"><span class="string">"hash"</span> : BinData(0,<span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAA="</span>),</span><br><span class="line"><span class="string">"keyId"</span> : NumberLong(0)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>这一个基于docker swarm的MongoDB Replica Set就成了。</strong></p><p>以上适合新建MongoDB副本集的情况，要是原来就是单实例，数据也备份了，要升级为副本集怎么办啊，那就继续往下看吧。</p><h3 id="还原备份数据到Replica-Set中"><a href="#还原备份数据到Replica-Set中" class="headerlink" title="还原备份数据到Replica Set中"></a>还原备份数据到Replica Set中</h3><p>备份数据先准备好，解压到volume在宿主机上的路径</p><p><strong>启动一个单节点的副本集</strong></p><p>先删除原来的所有服务，回到docker swarm刚搭建完毕的时候</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除服务</span></span><br><span class="line">docker service rm mongo_rs1 mongo_rs2 mongo_rs3 mongo_rs4 mongo_rs5</span><br><span class="line"></span><br><span class="line"><span class="comment">#确认swarm的节点状态</span></span><br><span class="line"></span><br><span class="line">docker node ls</span><br><span class="line"></span><br><span class="line">ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSION</span><br><span class="line">wum4rkn8jk4qb97yib9kggirv *   docker-swarm01      Ready               Active              Leader              18.03.1-ce</span><br><span class="line">bimxst6zhx732ckule02fozrb     docker-swarm02      Ready               Active                                  18.03.1-ce</span><br><span class="line">wnb80zj4ltg5fvfpdfel8dmoe     docker-swarm03      Ready               Active                                  18.03.1-ce</span><br><span class="line">8hnm8uht550vuvljwk4zqym8u     docker-swarm04      Ready               Active                                  18.03.1-ce</span><br><span class="line">9i2q8ovsca5lwfzkympnmdcm0     docker-swarm05      Ready               Active                                  18.03.1-ce</span><br></pre></td></tr></table></figure><p>​    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动一个单节点的副本集</span></span><br><span class="line">docker service create --replicas 1 --network mongo_network --mount <span class="built_in">type</span>=volume,src=rsdata1,dst=/data/db --constraint <span class="string">'node.labels.mongo.rs==1'</span> -p 27017:27017 --name mongo_rs1 mongo:3.6 mongod --replSet <span class="string">"whmallRS"</span></span><br><span class="line"></span><br><span class="line">3idwgelktbji869q10z31fi0e</span><br><span class="line">overall progress: 1 out of 1 tasks </span><br><span class="line">1/1: running   [==================================================&gt;] </span><br><span class="line">verify: Service converged </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化副本集</span></span><br><span class="line">docker <span class="built_in">exec</span> -it $(docker ps -qf label=com.docker.swarm.service.name=mongo_rs1) mongo --<span class="built_in">eval</span> <span class="string">'rs.initiate( &#123; _id : "whmallRS", members: [ &#123;  _id : 1, host: "mongo_rs1:27017" &#125; ], settings: &#123; getLastErrorDefaults: &#123; w: "majority", wtimeout: 30000 &#125;&#125;&#125;)'</span></span><br><span class="line"></span><br><span class="line">MongoDB shell version v3.6.6</span><br><span class="line">connecting to: mongodb://127.0.0.1:27017</span><br><span class="line">MongoDB server version: 3.6.6</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"ok"</span> : 1,</span><br><span class="line"><span class="string">"operationTime"</span> : Timestamp(1531987463, 1),</span><br><span class="line"><span class="string">"<span class="variable">$clusterTime</span>"</span> : &#123;</span><br><span class="line"><span class="string">"clusterTime"</span> : Timestamp(1531987463, 1),</span><br><span class="line"><span class="string">"signature"</span> : &#123;</span><br><span class="line"><span class="string">"hash"</span> : BinData(0,<span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAA="</span>),</span><br><span class="line"><span class="string">"keyId"</span> : NumberLong(0)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看副本集状态</span></span><br><span class="line">docker <span class="built_in">exec</span> -it $(docker ps -qf label=com.docker.swarm.service.name=mongo_rs1) mongo --<span class="built_in">eval</span> <span class="string">'rs.status()'</span></span><br><span class="line"></span><br><span class="line">MongoDB shell version v3.6.6</span><br><span class="line">connecting to: mongodb://127.0.0.1:27017</span><br><span class="line">MongoDB server version: 3.6.6</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"set"</span> : <span class="string">"whmallRS"</span>,</span><br><span class="line"><span class="string">"date"</span> : ISODate(<span class="string">"2018-07-19T08:06:30.690Z"</span>),</span><br><span class="line"><span class="string">"myState"</span> : 1,</span><br><span class="line"><span class="string">"term"</span> : NumberLong(1),</span><br><span class="line"><span class="string">"syncingTo"</span> : <span class="string">""</span>,</span><br><span class="line"><span class="string">"syncSourceHost"</span> : <span class="string">""</span>,</span><br><span class="line"><span class="string">"syncSourceId"</span> : -1,</span><br><span class="line"><span class="string">"heartbeatIntervalMillis"</span> : NumberLong(2000),</span><br><span class="line"><span class="string">"optimes"</span> : &#123;</span><br><span class="line"><span class="string">"lastCommittedOpTime"</span> : &#123;</span><br><span class="line"><span class="string">"ts"</span> : Timestamp(1531987585, 1),</span><br><span class="line"><span class="string">"t"</span> : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"readConcernMajorityOpTime"</span> : &#123;</span><br><span class="line"><span class="string">"ts"</span> : Timestamp(1531987585, 1),</span><br><span class="line"><span class="string">"t"</span> : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"appliedOpTime"</span> : &#123;</span><br><span class="line"><span class="string">"ts"</span> : Timestamp(1531987585, 1),</span><br><span class="line"><span class="string">"t"</span> : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"durableOpTime"</span> : &#123;</span><br><span class="line"><span class="string">"ts"</span> : Timestamp(1531987585, 1),</span><br><span class="line"><span class="string">"t"</span> : NumberLong(1)</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"members"</span> : [</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"_id"</span> : 1,</span><br><span class="line"><span class="string">"name"</span> : <span class="string">"mongo_rs1:27017"</span>,</span><br><span class="line"><span class="string">"health"</span> : 1,</span><br><span class="line"><span class="string">"state"</span> : 1,</span><br><span class="line"><span class="string">"stateStr"</span> : <span class="string">"PRIMARY"</span>,</span><br><span class="line"><span class="string">"uptime"</span> : 875,</span><br><span class="line"><span class="string">"optime"</span> : &#123;</span><br><span class="line"><span class="string">"ts"</span> : Timestamp(1531987585, 1),</span><br><span class="line"><span class="string">"t"</span> : NumberLong(1)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"optimeDate"</span> : ISODate(<span class="string">"2018-07-19T08:06:25Z"</span>),</span><br><span class="line"><span class="string">"syncingTo"</span> : <span class="string">""</span>,</span><br><span class="line"><span class="string">"syncSourceHost"</span> : <span class="string">""</span>,</span><br><span class="line"><span class="string">"syncSourceId"</span> : -1,</span><br><span class="line"><span class="string">"infoMessage"</span> : <span class="string">""</span>,</span><br><span class="line"><span class="string">"electionTime"</span> : Timestamp(1531987463, 2),</span><br><span class="line"><span class="string">"electionDate"</span> : ISODate(<span class="string">"2018-07-19T08:04:23Z"</span>),</span><br><span class="line"><span class="string">"configVersion"</span> : 1,</span><br><span class="line"><span class="string">"self"</span> : <span class="literal">true</span>,</span><br><span class="line"><span class="string">"lastHeartbeatMessage"</span> : <span class="string">""</span></span><br><span class="line">&#125;</span><br><span class="line">],</span><br><span class="line"><span class="string">"ok"</span> : 1,</span><br><span class="line"><span class="string">"operationTime"</span> : Timestamp(1531987585, 1),</span><br><span class="line"><span class="string">"<span class="variable">$clusterTime</span>"</span> : &#123;</span><br><span class="line"><span class="string">"clusterTime"</span> : Timestamp(1531987585, 1),</span><br><span class="line"><span class="string">"signature"</span> : &#123;</span><br><span class="line"><span class="string">"hash"</span> : BinData(0,<span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAA="</span>),</span><br><span class="line"><span class="string">"keyId"</span> : NumberLong(0)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看副本集配置</span></span><br><span class="line">docker <span class="built_in">exec</span> -it $(docker ps -qf label=com.docker.swarm.service.name=mongo_rs1) mongo --<span class="built_in">eval</span> <span class="string">'rs.config()'</span></span><br><span class="line"></span><br><span class="line">MongoDB shell version v3.6.6</span><br><span class="line">connecting to: mongodb://127.0.0.1:27017</span><br><span class="line">MongoDB server version: 3.6.6</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"_id"</span> : <span class="string">"whmallRS"</span>,</span><br><span class="line"><span class="string">"version"</span> : 1,</span><br><span class="line"><span class="string">"protocolVersion"</span> : NumberLong(1),</span><br><span class="line"><span class="string">"members"</span> : [</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"_id"</span> : 1,</span><br><span class="line"><span class="string">"host"</span> : <span class="string">"mongo_rs1:27017"</span>,</span><br><span class="line"><span class="string">"arbiterOnly"</span> : <span class="literal">false</span>,</span><br><span class="line"><span class="string">"buildIndexes"</span> : <span class="literal">true</span>,</span><br><span class="line"><span class="string">"hidden"</span> : <span class="literal">false</span>,</span><br><span class="line"><span class="string">"priority"</span> : 1,</span><br><span class="line"><span class="string">"tags"</span> : &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"slaveDelay"</span> : NumberLong(0),</span><br><span class="line"><span class="string">"votes"</span> : 1</span><br><span class="line">&#125;</span><br><span class="line">],</span><br><span class="line"><span class="string">"settings"</span> : &#123;</span><br><span class="line"><span class="string">"chainingAllowed"</span> : <span class="literal">true</span>,</span><br><span class="line"><span class="string">"heartbeatIntervalMillis"</span> : 2000,</span><br><span class="line"><span class="string">"heartbeatTimeoutSecs"</span> : 10,</span><br><span class="line"><span class="string">"electionTimeoutMillis"</span> : 10000,</span><br><span class="line"><span class="string">"catchUpTimeoutMillis"</span> : -1,</span><br><span class="line"><span class="string">"catchUpTakeoverDelayMillis"</span> : 30000,</span><br><span class="line"><span class="string">"getLastErrorModes"</span> : &#123;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"getLastErrorDefaults"</span> : &#123;</span><br><span class="line"><span class="string">"w"</span> : <span class="string">"majority"</span>,</span><br><span class="line"><span class="string">"wtimeout"</span> : 30000</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"replicaSetId"</span> : ObjectId(<span class="string">"5b504606b5471294515460d0"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>OK，现在往副本集里面添加新成员，不过要注意两点：</p><p>1、当新添加的辅助节点的投票和优先级设置大于零时，在其初始同步期间，辅助节点仍然计为投票成员，即使它不能提供读取也不能成为主节点，因为其数据尚未一致。</p><p>2、这可能导致大多数投票成员在线但不能选出主要成员的情况。要避免这种情况，请考虑最初新添加的成员的priority的值为0，同样votes的值也为0。然后，一旦成员转换到SECONDARY状态，使用rs.reconfig（）更新其priority和votes的值。 </p><p>好，余下四个节点，依次建立副本集节点的swarm service</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker service create --replicas 1 --network mongo_network --mount <span class="built_in">type</span>=volume,src=rsdata2,dst=/data/db --constraint <span class="string">'node.labels.mongo.rs==2'</span> -p 27018:27017 --name mongo_rs2 mongo:3.6 mongod --replSet <span class="string">"whmallRS"</span></span><br><span class="line"></span><br><span class="line">docker service create --replicas 1 --network mongo_network --mount <span class="built_in">type</span>=volume,src=rsdata3,dst=/data/db --constraint <span class="string">'node.labels.mongo.rs==3'</span> -p 27019:27017 --name mongo_rs3 mongo:3.6 mongod --replSet <span class="string">"whmallRS"</span></span><br><span class="line"></span><br><span class="line">docker service create --replicas 1 --network mongo_network --mount <span class="built_in">type</span>=volume,src=rsdata4,dst=/data/db --constraint <span class="string">'node.labels.mongo.rs==4'</span> -p 27020:27017 --name mongo_rs4 mongo:3.6 mongod --replSet <span class="string">"whmallRS"</span></span><br><span class="line"></span><br><span class="line">docker service create --replicas 1 --network mongo_network --mount <span class="built_in">type</span>=volume,src=rsdata5,dst=/data/db --constraint <span class="string">'node.labels.mongo.rs==5'</span> -p 27021:27017 --name mongo_rs5 mongo:3.6 mongod --replSet <span class="string">"whmallRS"</span></span><br></pre></td></tr></table></figure><p><strong>添加mongo_rs2节点，数据自动开始同步</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#添加mongo_rs2到副本集中</span></span><br><span class="line">docker <span class="built_in">exec</span> -it $(docker ps -qf label=com.docker.swarm.service.name=mongo_rs1) mongo --<span class="built_in">eval</span> <span class="string">'rs.add( &#123; host: "mongo_rs2:27017", priority: 0, votes: 0 &#125; )'</span></span><br><span class="line"></span><br><span class="line">MongoDB shell version v3.6.6</span><br><span class="line">connecting to: mongodb://127.0.0.1:27017</span><br><span class="line">MongoDB server version: 3.6.6</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"ok"</span> : 1,</span><br><span class="line"><span class="string">"operationTime"</span> : Timestamp(1531990143, 1),</span><br><span class="line"><span class="string">"<span class="variable">$clusterTime</span>"</span> : &#123;</span><br><span class="line"><span class="string">"clusterTime"</span> : Timestamp(1531990143, 1),</span><br><span class="line"><span class="string">"signature"</span> : &#123;</span><br><span class="line"><span class="string">"hash"</span> : BinData(0,<span class="string">"AAAAAAAAAAAAAAAAAAAAAAAAAAA="</span>),</span><br><span class="line"><span class="string">"keyId"</span> : NumberLong(0)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>余下节点按照以上方法依次加入。这要等一段时间，四个节点要同步数据，够呛。</p><h3 id="重新配置副本集成员的权重与投票参数"><a href="#重新配置副本集成员的权重与投票参数" class="headerlink" title="重新配置副本集成员的权重与投票参数"></a>重新配置副本集成员的权重与投票参数</h3><p><strong>这里有几点要注意：</strong><br>1、数据全部同步完毕后，注意这是节点的priority和votes的值都为零，需要做调整，调整过程可能会引起主节点重新选举，所以建议此步骤在维护窗口期进行哦。<br>2、建议在维护窗口期间调整优先级设置。重新配置优先级可以强制当前主服务器降级，从而导致选举。在选举之前，副本集的主节点会关闭所有打开的客户端连接。除非你更改了副本集的默认读策略。<br>3、rs.reconfig（）shell方法可以强制当前主节点降级，从而导致选举。当副本集主节点关闭时，mongod将关闭所有客户端连接。虽然这通常只需要10-20秒，但是建议在计划的维护期间进行这些更改。 避免重新配置包含不同MongoDB版本成员的副本集，因为验证规则可能因MongoDB版本而异。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cfg = rs.conf();</span><br><span class="line">cfg.members[1].priority = 2;</span><br><span class="line">cfg.members[1].votes = 1;</span><br><span class="line">rs.reconfig(cfg);</span><br></pre></td></tr></table></figure><p>第一个语句使用rs.conf（）方法检索包含副本集的当前配置的文档，并将文档设置为本地变量cfg。<br>第二个语句将members [n] .priority值设置为members数组中的第二个文档。有关其他设置，请参阅副本集配置设置。    要访问数组中的成员配置文档，该语句使用数组索引而不是副本集成员的成员[n] ._ id字段。<br>最后一条语句使用修改过的cfg调用rs.reconfig（）方法来初始化此新配置。 </p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li>使用分布式存储文件系统是一个好主意，如ceph、Gluster等。</li><li>overlay网络中要确保运行副本集的跨主机容器能互相ping通，副本集依靠这个来检查节点心跳。</li><li>官方文档是必须看的。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;工作需要，Let’s do it.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2018/08/07/nsible和Docker-Swarm还有MongoDB-Replica-Set/mongo.swarm.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;策略&quot;&gt;&lt;a href=&quot;#策略&quot; class=&quot;headerlink&quot; title=&quot;策略&quot;&gt;&lt;/a&gt;&lt;strong&gt;策略&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;事先确定Replica Set的成员数量，因为这跟能Replica Set中能容忍挂掉的成员数量有直接关系&lt;/li&gt;
&lt;li&gt;Replica Set中的voting成员数量要提前确定，MongoDB的Replica Set最大可以拥有50个成员，其中包括最多7个voting成员&lt;/li&gt;
&lt;li&gt;部署奇数成员数的Replica Set&lt;/li&gt;
&lt;li&gt;操作系统采用Ubuntu16.04.4 LTS 64bit&lt;/li&gt;
&lt;li&gt;原计划五台机器单机跑docker实例，也可以创建replica set ，但是日后还有其他测试要用到swarm环境，所以干脆一步到位，五台机器全部作为swarm node&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="replica set" scheme="https://zhusas.github.io/tags/replica-set/"/>
    
      <category term="mongodb" scheme="https://zhusas.github.io/tags/mongodb/"/>
    
      <category term="ansible" scheme="https://zhusas.github.io/tags/ansible/"/>
    
      <category term="docker" scheme="https://zhusas.github.io/tags/docker/"/>
    
      <category term="swarm" scheme="https://zhusas.github.io/tags/swarm/"/>
    
  </entry>
  
  <entry>
    <title>LVS实战</title>
    <link href="https://zhusas.github.io/2018/08/06/LVS%E5%AE%9E%E6%88%98/"/>
    <id>https://zhusas.github.io/2018/08/06/LVS实战/</id>
    <published>2018-08-06T06:55:00.000Z</published>
    <updated>2018-08-06T06:56:26.869Z</updated>
    
    <content type="html"><![CDATA[<h3 id="LVS基本简介"><a href="#LVS基本简介" class="headerlink" title="LVS基本简介"></a><strong>LVS基本简介</strong></h3><p>LB集群的架构和原理很简单，就是当用户的请求过来时，会直接分发到Director Server上，然后它把用户的请求根据设置好的调度算法，智能均衡地分发到后端真正服务器(real server)上。为了避免不同机器上用户请求得到的数据不一样，需要用到了共享存储，这样保证所有用户请求的数据是一样的。</p><p>LVS是 Linux Virtual Server 的简称，也就是Linux虚拟服务器。这是一个由章文嵩博士发起的一个开源项目，它的官方网站是 <a href="http://www.linuxvirtualserver.org" target="_blank" rel="noopener">http://www.linuxvirtualserver.org</a> 现在 LVS 已经是 Linux 内核标准的一部分。使用 LVS 可以达到的技术目标是：通过 LVS 达到的负载均衡技术和 Linux 操作系统实现一个高性能高可用的 Linux 服务器集群，它具有良好的可靠性、可扩展性和可操作性。从而以低廉的成本实现最优的性能。LVS 是一个实现负载均衡集群的开源软件项目，LVS架构从逻辑上可分为调度层、Server集群层和共享存储。</p><p><img src="https://i.imgur.com/006WF89.jpg" alt=""></p><a id="more"></a><p><strong>工作原理：</strong></p><p><strong>LVS工作于OSI四层,根据请求报文的目标IP和目标PORT将其转发至后端主机集群中的某台服务器（根据调度算法);其原理是通过ipvsadm用户空间的命令行工具定义lvs规则控制工作于内核上的netfilter INPUT钩子之上的程序代码IPVS实现调度算法。</strong></p><hr><p><img src="https://i.imgur.com/30nIuBV.png" alt=""></p><p><strong>1. 首先用户向负载均衡器调度器（Director Server）发起请求，负载均衡器将请求发往至内核空间，交给内核模块进行检测。</strong><br><strong>2. 内核模块中的PREROUTING链首先会收到用户请求，判断目标地址是否是负载均衡器的IP地址，如果是，则将数据包发往INPUT链。</strong><br><strong>3. IPVS模块是工作在INPUT链上的，当用户请求到达INPUT链上时，IPVS会将用户请求和自己已定义好的集群服务作对比，如果用户请求的就是定义的集群服务，那么IPVA会强行修改数据包里的目标IP地址和目标端口，并将新的数据包发往POSTROUTING链。</strong><br><strong>4. POSTROUTING链接收到数据包发现目标IP地址刚好是自己的后端的服务器，那么通过选路，将数据包最终发送给后端的服务器。</strong></p><p><strong>LVS的组成</strong></p><p>LVS 由2部分程序组成，包括 ipvs 和 ipvsadm。</p><ol><li>ipvs(ip virtual server)：一段代码工作在内核空间，叫ipvs，是真正生效实现调度的代码。</li><li>ipvsadm：另外一段是工作在用户空间，叫ipvsadm，负责为ipvs内核框架编写规则，定义谁是集群服务，而谁是后端真实的服务器(Real Server)</li></ol><p><strong>LVS相关术语</strong></p><ol><li>DS：Director Server。指的是前端负载均衡器节点。</li><li>RS：Real Server。后端真实的工作服务器。</li><li>VIP：向外部直接面向用户请求，作为用户请求的目标的IP地址。</li><li>DIP：Director Server IP，主要用于和内部主机通讯的IP地址。</li><li>RIP：Real Server IP，后端服务器的IP地址。</li><li>CIP：Client IP，访问客户端的IP地址。</li></ol><p><strong>LVS的调度算法</strong></p><p>静态方法：仅根据算法本身进行调度</p><ol><li>轮叫调度 rr<br>这种算法是最简单的，就是按依次循环的方式将请求调度到不同的服务器上，该算法最大的特点就是简单。轮询算法假设所有的服务器处理请求的能力都是一样的，调度器会将所有的请求平均分配给每个真实服务器，不管后端 RS 配置和处理能力，非常均衡地分发下去。</li><li>加权轮叫 wrr<br>这种算法比 rr 的算法多了一个权重的概念，可以给 RS 设置权重，权重越高，那么分发的请求数越多，权重的取值范围 0 – 100。主要是对rr算法的一种优化和补充， LVS 会考虑每台服务器的性能，并给每台服务器添加要给权值，如果服务器A的权值为1，服务器B的权值为2，则调度到服务器B的请求会是服务器A的2倍。权值越高的服务器，处理的请求越多。</li><li>源地址散列调度算法 sh<br>与目标地址散列调度算法类似，但它是根据源地址散列算法进行静态分配固定的服务器资源。</li><li>目标地址散列调度算法 dh<br>该算法是根据目标 IP 地址通过散列函数将目标 IP 与服务器建立映射关系，出现服务器不可用或负载过高的情况下，发往该目标 IP 的请求会固定发给该服务器。</li></ol><p>动态方法：根据算法及各RS当前的负载状态进行评估，算法最后体现为overhead的值。</p><ol><li>最少链接 lc<br>这个算法会根据后端 RS 的连接数来决定把请求分发给谁，比如 RS1 连接数比 RS2 连接数少，那么请求就优先发给 RS1 </li><li>加权最少链接 wlc<br>这个算法比 lc 多了一个权重的概念，适用于后端RS性能不一样的时候,最为通用且为默认的动态方法</li><li>基于局部性的最少连接调度算法 lblc<br>这个算法是请求数据包的目标 IP 地址的一种调度算法，该算法先根据请求的目标 IP 地址寻找最近的该目标 IP 地址所有使用的服务器，如果这台服务器依然可用，并且有能力处理该请求，调度器会尽量选择相同的服务器，否则会继续选择其它可行的服务器</li><li>复杂的基于局部性最少的连接算法 lblcr<br>记录的不是要给目标 IP 与一台服务器之间的连接记录，它会维护一个目标 IP 到一组服务器之间的映射关系，防止单点服务器负载过高。</li><li>SED：Shortest Expection Delay<br>权重大的RS如果排在后面的话，请求连接会被排在其前面权重小的机器所处理，导致排在后面权重大的RS闲置。</li><li>NQ: Nerver Queue<br>累死权重大的RS，SED算法的改进。</li></ol><p>好了，说着这么多理论，毛主席说实践是检验理论的唯一标准^_^</p><h3 id="实战-搭建一套LVS-DR模型的高性能集群，并实现以下功能："><a href="#实战-搭建一套LVS-DR模型的高性能集群，并实现以下功能：" class="headerlink" title="实战-搭建一套LVS-DR模型的高性能集群，并实现以下功能："></a>实战-搭建一套LVS-DR模型的高性能集群，并实现以下功能：</h3><p>   (1)、wordpress程序通过nfs共享给各个Realserver；</p><p>   (2)、后端realserver中的nginx和php分离</p><p><strong>软件环境：</strong><br>1、vmware workstation 14 PRO，<br>2、lnmp一键安装脚本<br>3、CentOS7.4+Nginx1.12+WordPress4.9.1+PHP-7.2+MariaDB10.2</p><p><strong>拓扑图</strong><br><img src="https://i.imgur.com/zHaBGbD.png" alt=""></p><p><strong>IP分配</strong></p><p>LVS-DR1<br>DIP:192.168.0.249<br>VIP:192.168.0.228</p><p>NGINX主机1<br>RIP:192.168.0.247<br>VIP:192.168.0.228</p><p>NGINX主机2<br>RIP:192.168.0.246<br>VIP:192.168.0.228</p><p>PHP主机1<br>192.168.0.233</p><p>PHP主机2<br>192.168.0.232</p><p>NFS主机<br>192.168.0.231</p><p>MariaDB主机1<br>192.168.0.251</p><p><strong>配置MariaDB主机1</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">登录MariaDB，建立数据库。</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; create database wordpress;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; grant all on wordpress.* to &apos;wp&apos;@&apos;192.168.%&apos; identified by &apos;123456&apos;;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt;  FLUSH PRIVILEGES;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure><p><strong>安装配置NFS主机</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">安装NFS组件</span></span><br><span class="line">yum install nfs-utils rpcbind</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">设置RPC、NFS开机启动   </span></span><br><span class="line">systemctl enable rpcbind.service</span><br><span class="line">systemctl enable nfs.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">启动nfs</span></span><br><span class="line">systemctl start rpcbind.service</span><br><span class="line">systemctl start nfs.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">建立WordPress在NFS主机上的存放目录</span></span><br><span class="line">mkdir /data</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">下载WordPress</span></span><br><span class="line">cd /data</span><br><span class="line">wget https://wordpress.org/latest.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">解压</span></span><br><span class="line">tar xvf latest.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">配置WordPress</span></span><br><span class="line">cd wordpress</span><br><span class="line">cp wp-config-sample.php wp-config.php</span><br><span class="line">vim wp-config.php</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">修改wp-config.php内容如下</span></span><br><span class="line">// ** MySQL settings - You can get this info from your web host ** //</span><br><span class="line">/** The name of the database for WordPress */</span><br><span class="line">define('DB_NAME', 'wordpress');</span><br><span class="line"></span><br><span class="line">/** MySQL database username */</span><br><span class="line">define('DB_USER', 'wp');</span><br><span class="line"></span><br><span class="line">/** MySQL database password */</span><br><span class="line">define('DB_PASSWORD', '123456');</span><br><span class="line"></span><br><span class="line">/** MySQL hostname */</span><br><span class="line">define('DB_HOST', '192.168.0.251');</span><br><span class="line"></span><br><span class="line">/** Database Charset to use in creating database tables. */</span><br><span class="line">define('DB_CHARSET', 'utf8');</span><br><span class="line"></span><br><span class="line">/** The Database Collate type. Don't change this if in doubt. */</span><br><span class="line">define('DB_COLLATE', '');</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">如下配置nfs</span></span><br><span class="line">[root@NFS ~]# cat /etc/exports</span><br><span class="line">/data/wordpress/ 192.168.0.0/24(rw,sync,no_wdelay,no_root_squash)</span><br><span class="line">之后记得重启一下nfs服务</span><br></pre></td></tr></table></figure><p><strong>来来来，nfs的权限设置科普一下</strong></p><p>rw ：读写；</p><p>ro ：只读；</p><p>sync ：同步模式，内存中数据时时写入磁盘；</p><p>async ：不同步，把内存中数据定期写入磁盘中；</p><p>no_root_squash ：加上这个选项后，root用户就会对共享的目录拥有至高的权限控制，就像是对本机的目录操作一样。不安全，不建议使用；</p><p>root_squash ：和上面的选项对应，root用户对共享目录的权限不高，只有普通用户的权限，即限制了root；</p><p>all_squash ：不管使用NFS的用户是谁，他的身份都会被限定成为一个指定的普通用户身份；</p><p>anonuid/anongid ：要和root_squash 以及 all_squash一同使用，用于指定使用NFS的用户限定后的uid和gid，前提是本机的/etc/passwd中存在这个uid和gid。</p><p><strong>在2台PHP-FPM主机及NGINX主机上挂载NFS主机上的WordPress共享目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@PHP1 opt]<span class="comment"># mkdir -pv /opt/wordpress</span></span><br><span class="line">mkdir: created directory ‘/opt/wordpress’</span><br><span class="line">mount -t nfs 192.168.0.231:/data/wordpress /opt/wordpress</span><br><span class="line"></span><br><span class="line">也可以在主机上/etc/fstab文件中加入如下内容，实现开机自启：</span><br><span class="line">192.168.0.231:/data/wordpress   /opt/wordpress  nfs  defaults 0 0</span><br></pre></td></tr></table></figure><p><strong>在两台NGINX主机上编辑nginx.conf文件，支持PHP-FPM</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">upstream phpserver &#123;</span><br><span class="line">        server 192.168.0.233:9000 weight=1;  <span class="comment">#权重可以根据实际情况调整。</span></span><br><span class="line">        server 192.168.0.232:9000 weight=1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    </span><br><span class="line">location / &#123;</span><br><span class="line">        root   /opt/wordpress;</span><br><span class="line">        index  index.html index.htm index.php;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"> location ~ \.php$ &#123;</span><br><span class="line">        root           /opt/wordpress; <span class="comment">#此路径为php机器上的路径，非nginx机器上的。</span></span><br><span class="line">        fastcgi_pass   phpserver;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME  <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>在两台PHP-FPM主机上编辑PHP-FPM.conf文件</strong></p><p>如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">;;;;;;;;;;;;;;;;;;;;</span><br><span class="line">; Pool Definitions ;</span><br><span class="line">;;;;;;;;;;;;;;;;;;;;</span><br><span class="line"></span><br><span class="line">[www]</span><br><span class="line">listen = 192.168.0.233:9000</span><br><span class="line">listen.backlog = -1</span><br><span class="line">listen.allowed_clients = 192.168.0.247，192.168.0.246</span><br><span class="line">;listen.owner = www</span><br><span class="line">;listen.group = www</span><br><span class="line">;listen.mode = 0666</span><br><span class="line">user = www</span><br><span class="line">group = www</span><br><span class="line"></span><br><span class="line">pm = dynamic</span><br><span class="line">pm.max_children = 33</span><br><span class="line">pm.start_servers = 22</span><br><span class="line">pm.min_spare_servers = 16</span><br><span class="line">pm.max_spare_servers = 33</span><br><span class="line">pm.max_requests = 2048</span><br><span class="line">pm.process_idle_timeout = 10s</span><br><span class="line">request_terminate_timeout = 120</span><br><span class="line">request_slowlog_timeout = 0</span><br><span class="line"></span><br><span class="line">pm.status_path = /php-fpm_status</span><br><span class="line">slowlog = log/slow.log</span><br><span class="line">rlimit_files = 51200</span><br><span class="line">rlimit_core = 0</span><br><span class="line"></span><br><span class="line">catch_workers_output = yes</span><br><span class="line">;env[HOSTNAME] = PHP2</span><br><span class="line">env[PATH] = /usr/local/bin:/usr/bin:/bin</span><br><span class="line">env[TMP] = /tmp</span><br><span class="line">env[TMPDIR] = /tmp</span><br><span class="line">env[TEMP] = /tmp</span><br></pre></td></tr></table></figure><p>php文件存放的地方，要确保php配置文件中配置的user要有读权限，这里用的是www用户。</p><p>好了，现在分别在浏览器里面输入192.168.0.246  192.168.0.247  出来以下画面后，就可以开始配置lvs了</p><p><img src="https://i.imgur.com/lDQjuLl.png" alt=""></p><p><img src="https://i.imgur.com/kLnVjOa.png" alt=""></p><p><strong>好，下面开始配置大名鼎鼎的lvs，上古神器~~</strong></p><p>首先在LVS的机器上，查看是否支持IPVS</p><p>来一段风骚的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -C 10 -i <span class="string">"ipvs"</span> /boot/config-$(uname -r)</span><br></pre></td></tr></table></figure><p>参数简介:<br>-i：ignorecase，忽略字符的大小写；<br>-A #：after, 后#行<br>-B #：before，前#行<br>-C #：context，前后各#行</p><p>可以看到如下图，基本上都是默认支持滴<br><img src="https://i.imgur.com/kvwsmhf.png" alt=""></p><p><strong>配置lvs的Director</strong></p><p>1、先来系统层面的配置</p><pre><code>#先打开系统的路由转发[root@LVS-DR1 ~]# echo 1 &gt; /proc/sys/net/ipv4/ip_forward[root@LVS-DR1 ~]# cat /proc/sys/net/ipv4/ip_forward1</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#系统的路由转发永久生效方法</span></span><br><span class="line">[root@LVS-DR1 ~]<span class="comment">#echo "net.ipv4.ip_forward = 1" &gt;&gt; /etc/sysctl.conf</span></span><br><span class="line">[root@LVS-DR1 ~]<span class="comment">#sysctl -p</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置虚拟网卡</span></span><br><span class="line">[root@LVS-DR1 ~]<span class="comment"># ifconfig ens32:0 192.168.0.228 netmask 255.255.255.0 broadcast 192.168.0.228 up</span></span><br><span class="line">[root@LVS-DR1 ~]<span class="comment"># ifconfig</span></span><br><span class="line">ens32: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.0.249  netmask 255.255.255.0  broadcast 192.168.0.255</span><br><span class="line">        inet6 fe80::20c:29ff:fe13:618e  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 00:0c:29:13:61:8e  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 11013  bytes 726061 (709.0 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 724  bytes 86827 (84.7 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">ens32:0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.0.228  netmask 255.255.255.0  broadcast 192.168.0.228</span><br><span class="line">        ether 00:0c:29:13:61:8e  txqueuelen 1000  (Ethernet)</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1  (Local Loopback)</span><br><span class="line">        RX packets 72  bytes 5720 (5.5 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 72  bytes 5720 (5.5 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><p>2、 定义集群服务及服务上的RS</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@LVS-DR1 ~]<span class="comment"># ipvsadm -A -t 192.168.0.228:80 -s wlc</span></span><br><span class="line">[root@LVS-DR1 ~]<span class="comment"># ipvsadm -a -t 192.168.0.228:80 -r 192.168.0.247:80 -g -w 1</span></span><br><span class="line">[root@LVS-DR1 ~]<span class="comment"># ipvsadm -a -t 192.168.0.228:80 -r 192.168.0.246:80 -g -w 1</span></span><br><span class="line">[root@LVS-DR1 ~]<span class="comment"># ipvsadm -ln</span></span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port Scheduler Flags</span><br><span class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</span><br><span class="line">TCP  192.168.0.228:80 wlc</span><br><span class="line">  -&gt; 192.168.0.246:80             Route   1      0          0         </span><br><span class="line">  -&gt; 192.168.0.247:80             Route   1      0          0</span><br></pre></td></tr></table></figure><p><strong>配置两台RealServer</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/conf/<span class="variable">$interface</span>/arp_ignore</span><br><span class="line"><span class="built_in">echo</span> 2 &gt; /proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line"><span class="built_in">echo</span> 2 &gt; /proc/sys/net/ipv4/conf/<span class="variable">$interface</span>/arp_announce</span><br><span class="line"></span><br><span class="line">ifconfig <span class="variable">$interface_alias</span> <span class="variable">$vip</span> broadcast <span class="variable">$vip</span> netmask 255.255.255.255 up</span><br><span class="line">route add -host <span class="variable">$vip</span> dev <span class="variable">$interface_alias</span></span><br></pre></td></tr></table></figure><p><strong>其实用脚本更科学</strong></p><p>Director脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">定义参数，vip、rip、权重、端口、调度算法，lvs类型等</span></span><br><span class="line">vip=192.168.0.228</span><br><span class="line">rip=('192.168.0.246' '192.168.0.247')</span><br><span class="line">weight=('1' '2')</span><br><span class="line">port=80</span><br><span class="line">scheduler=rr</span><br><span class="line">ipvstype='-g'</span><br><span class="line">interface_alias='ens32:0'</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">start)</span><br><span class="line"><span class="meta">#</span><span class="bash">清空Linux防火墙的规则</span></span><br><span class="line">iptables -F -t filter</span><br><span class="line"><span class="meta">#</span><span class="bash">清空lvs规则</span></span><br><span class="line">ipvsadm -C</span><br><span class="line">ifconfig $interface_alias $vip broadcast $vip netmask 255.255.255.255 up</span><br><span class="line">echo 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class="line">ipvsadm -A -t $vip:$port -s $scheduler</span><br><span class="line">[ $? -eq 0 ] &amp;&amp; echo "ipvs service $vip:$port added."  || exit 2</span><br><span class="line"></span><br><span class="line">for i in `seq 0 $[$&#123;#rip[@]&#125;-1]`; do</span><br><span class="line">    ipvsadm -a -t $vip:$port -r $&#123;rip[$i]&#125; $ipvstype -w $&#123;weight[$i]&#125;</span><br><span class="line">[ $? -eq 0 ] &amp;&amp; echo "RS $&#123;rip[$i]&#125; added."</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">touch /var/lock/subsys/ipvs</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">stop)</span><br><span class="line">echo 0 &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class="line">ipvsadm -C</span><br><span class="line">ifconfig $interface_alias down</span><br><span class="line">rm -f /var/lock/subsys/ipvs</span><br><span class="line">echo "ipvs stopped."</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">status)</span><br><span class="line">if [ -f /var/lock/subsys/ipvs ]; then</span><br><span class="line">echo "ipvs is running."</span><br><span class="line">ipvsadm -L -n</span><br><span class="line">else</span><br><span class="line">echo "ipvs is stopped."</span><br><span class="line">fi</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">*)</span><br><span class="line">echo "Usage: `basename $0` &#123;start|stop|status&#125;"</span><br><span class="line">exit 3</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>RS的脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line">vip=192.168.0.228</span><br><span class="line">interface_alias="lo:0"</span><br><span class="line">interface="lo" </span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">start)</span><br><span class="line">echo 1 &gt; /proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">echo 1 &gt; /proc/sys/net/ipv4/conf/$interface/arp_ignore</span><br><span class="line">echo 2 &gt; /proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line">echo 2 &gt; /proc/sys/net/ipv4/conf/$interface/arp_announce</span><br><span class="line"></span><br><span class="line">ifconfig $interface_alias $vip broadcast $vip netmask 255.255.255.255 up</span><br><span class="line">route add -host $vip dev $interface_alias</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">stop)</span><br><span class="line">echo 0 &gt; /proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">echo 0 &gt; /proc/sys/net/ipv4/conf/$interface/arp_ignore</span><br><span class="line">echo 0 &gt; /proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line">echo 0 &gt; /proc/sys/net/ipv4/conf/$interface/arp_announce</span><br><span class="line">ifconfig $interface_alias down</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">status)</span><br><span class="line">if ifconfig lo:0 |grep $vip &amp;&gt; /dev/null; then</span><br><span class="line">echo "ipvs is running."</span><br><span class="line">else</span><br><span class="line">echo "ipvs is stopped."</span><br><span class="line">fi</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">*)</span><br><span class="line">echo "Usage: `basename $0` &#123;start|stop|status&#125;"</span><br><span class="line">exit 1</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>做完以上工作，lvs就可以正常访问了，可以看到lvs也起作用了，上图。<br><img src="https://i.imgur.com/7dV1R1n.png" alt=""></p><p>好，大功告成。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;LVS基本简介&quot;&gt;&lt;a href=&quot;#LVS基本简介&quot; class=&quot;headerlink&quot; title=&quot;LVS基本简介&quot;&gt;&lt;/a&gt;&lt;strong&gt;LVS基本简介&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;LB集群的架构和原理很简单，就是当用户的请求过来时，会直接分发到Director Server上，然后它把用户的请求根据设置好的调度算法，智能均衡地分发到后端真正服务器(real server)上。为了避免不同机器上用户请求得到的数据不一样，需要用到了共享存储，这样保证所有用户请求的数据是一样的。&lt;/p&gt;
&lt;p&gt;LVS是 Linux Virtual Server 的简称，也就是Linux虚拟服务器。这是一个由章文嵩博士发起的一个开源项目，它的官方网站是 &lt;a href=&quot;http://www.linuxvirtualserver.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.linuxvirtualserver.org&lt;/a&gt; 现在 LVS 已经是 Linux 内核标准的一部分。使用 LVS 可以达到的技术目标是：通过 LVS 达到的负载均衡技术和 Linux 操作系统实现一个高性能高可用的 Linux 服务器集群，它具有良好的可靠性、可扩展性和可操作性。从而以低廉的成本实现最优的性能。LVS 是一个实现负载均衡集群的开源软件项目，LVS架构从逻辑上可分为调度层、Server集群层和共享存储。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/006WF89.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="nginx" scheme="https://zhusas.github.io/tags/nginx/"/>
    
      <category term="lvs" scheme="https://zhusas.github.io/tags/lvs/"/>
    
      <category term="wordpress" scheme="https://zhusas.github.io/tags/wordpress/"/>
    
  </entry>
  
  <entry>
    <title>源码编译LNMP</title>
    <link href="https://zhusas.github.io/2018/08/06/%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91LNMP/"/>
    <id>https://zhusas.github.io/2018/08/06/源码编译LNMP/</id>
    <published>2018-08-06T06:46:00.000Z</published>
    <updated>2018-08-06T06:47:17.548Z</updated>
    
    <content type="html"><![CDATA[<h2 id="源码编译安装LNMP架构环境"><a href="#源码编译安装LNMP架构环境" class="headerlink" title="源码编译安装LNMP架构环境"></a>源码编译安装LNMP架构环境</h2><h3 id="先下载nmp三件套"><a href="#先下载nmp三件套" class="headerlink" title="先下载nmp三件套"></a><strong>先下载nmp三件套</strong></h3><p>wget <a href="http://nginx.org/download/nginx-1.12.0.tar.gz" target="_blank" rel="noopener">http://nginx.org/download/nginx-1.12.0.tar.gz</a></p><p>wget <a href="https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-boost-5.7.18.tar.gz" target="_blank" rel="noopener">https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-boost-5.7.18.tar.gz</a> <a id="more"></a></p><p>wget <a href="http://tw1.php.net/get/php-5.6.30.tar.gz/from/this/mirror" target="_blank" rel="noopener">http://tw1.php.net/get/php-5.6.30.tar.gz/from/this/mirror</a> -O php-5.6.30.tar.gz </p><h3 id="编译安装Nginx"><a href="#编译安装Nginx" class="headerlink" title="编译安装Nginx"></a><strong>编译安装Nginx</strong></h3><p>1、建立Nginx的程序目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 ~]# mkdir -pv /opt/nginx</span><br><span class="line">mkdir: 已创建目录 &quot;/opt/nginx&quot;</span><br><span class="line">[root@CentOS7 ~]#</span><br></pre></td></tr></table></figure><p>2、 安装依赖包 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 opt]# yum -y install openssl-devel pcre-devel zlib-devel</span><br></pre></td></tr></table></figure><p>3、创建nginx用户和组 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 opt]# useradd -U nginx -s /sbin/nologin</span><br></pre></td></tr></table></figure><p>前戏做足，接下来开始编译了，啊啊啊～～～～～</p><p>4、进入到nginx源码目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 opt]# cd nginx-1.12.0/</span><br><span class="line">[root@CentOS7 nginx-1.12.0]#</span><br></pre></td></tr></table></figure><p>输入以下编译命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/opt/nginx \</span><br><span class="line">--with-select_module \</span><br><span class="line">--with-threads \</span><br><span class="line">--with-file-aio \</span><br><span class="line">--with-http_ssl_module \</span><br><span class="line">--with-http_v2_module \</span><br><span class="line">--with-http_realip_module \</span><br><span class="line">--with-http_sub_module \</span><br><span class="line">--with-http_dav_module \</span><br><span class="line">--with-http_flv_module \</span><br><span class="line">--with-http_gunzip_module \</span><br><span class="line">--with-http_gzip_static_module \</span><br><span class="line">--with-http_secure_link_module \</span><br><span class="line">--with-http_degradation_module \</span><br><span class="line">--with-http_slice_module \</span><br><span class="line">--with-http_stub_status_module \</span><br><span class="line">--without-mail_pop3_module \</span><br><span class="line">--without-mail_imap_module \</span><br><span class="line">--without-mail_smtp_module \</span><br><span class="line">--with-stream \</span><br><span class="line">--with-stream_ssl_module \</span><br></pre></td></tr></table></figure><p>敲两下回车</p><p>如下输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line">checking for OS</span><br><span class="line"> + Linux 3.10.0-514.16.1.el7.x86_64 x86_64</span><br><span class="line">checking for C compiler ... found</span><br><span class="line"> + using GNU C compiler</span><br><span class="line"> + gcc version: 4.8.5 20150623 (Red Hat 4.8.5-11) (GCC) </span><br><span class="line">checking for gcc -pipe switch ... found</span><br><span class="line">checking for -Wl,-E switch ... found</span><br><span class="line">checking for gcc builtin atomic operations ... found</span><br><span class="line">checking for C99 variadic macros ... found</span><br><span class="line">checking for gcc variadic macros ... found</span><br><span class="line">checking for gcc builtin 64 bit byteswap ... found</span><br><span class="line">checking for unistd.h ... found</span><br><span class="line">checking for inttypes.h ... found</span><br><span class="line">checking for limits.h ... found</span><br><span class="line">checking for sys/filio.h ... not found</span><br><span class="line">checking for sys/param.h ... found</span><br><span class="line">checking for sys/mount.h ... found</span><br><span class="line">checking for sys/statvfs.h ... found</span><br><span class="line">checking for crypt.h ... found</span><br><span class="line">checking for Linux specific features</span><br><span class="line">checking for epoll ... found</span><br><span class="line">checking for EPOLLRDHUP ... found</span><br><span class="line">checking for EPOLLEXCLUSIVE ... not found</span><br><span class="line">checking for O_PATH ... found</span><br><span class="line">checking for sendfile() ... found</span><br><span class="line">checking for sendfile64() ... found</span><br><span class="line">checking for sys/prctl.h ... found</span><br><span class="line">checking for prctl(PR_SET_DUMPABLE) ... found</span><br><span class="line">checking for sched_setaffinity() ... found</span><br><span class="line">checking for crypt_r() ... found</span><br><span class="line">checking for sys/vfs.h ... found</span><br><span class="line">checking for nobody group ... found</span><br><span class="line">checking for poll() ... found</span><br><span class="line">checking for /dev/poll ... not found</span><br><span class="line">checking for kqueue ... not found</span><br><span class="line">checking for crypt() ... not found</span><br><span class="line">checking for crypt() in libcrypt ... found</span><br><span class="line">checking for F_READAHEAD ... not found</span><br><span class="line">checking for posix_fadvise() ... found</span><br><span class="line">checking for O_DIRECT ... found</span><br><span class="line">checking for F_NOCACHE ... not found</span><br><span class="line">checking for directio() ... not found</span><br><span class="line">checking for statfs() ... found</span><br><span class="line">checking for statvfs() ... found</span><br><span class="line">checking for dlopen() ... not found</span><br><span class="line">checking for dlopen() in libdl ... found</span><br><span class="line">checking for sched_yield() ... found</span><br><span class="line">checking for SO_SETFIB ... not found</span><br><span class="line">checking for SO_REUSEPORT ... found</span><br><span class="line">checking for SO_ACCEPTFILTER ... not found</span><br><span class="line">checking for SO_BINDANY ... not found</span><br><span class="line">checking for IP_BIND_ADDRESS_NO_PORT ... not found</span><br><span class="line">checking for IP_TRANSPARENT ... found</span><br><span class="line">checking for IP_BINDANY ... not found</span><br><span class="line">checking for IP_RECVDSTADDR ... not found</span><br><span class="line">checking for IP_PKTINFO ... found</span><br><span class="line">checking for IPV6_RECVPKTINFO ... found</span><br><span class="line">checking for TCP_DEFER_ACCEPT ... found</span><br><span class="line">checking for TCP_KEEPIDLE ... found</span><br><span class="line">checking for TCP_FASTOPEN ... found</span><br><span class="line">checking for TCP_INFO ... found</span><br><span class="line">checking for accept4() ... found</span><br><span class="line">checking for kqueue AIO support ... not found</span><br><span class="line">checking for Linux AIO support ... found</span><br><span class="line">checking for int size ... 4 bytes</span><br><span class="line">checking for long size ... 8 bytes</span><br><span class="line">checking for long long size ... 8 bytes</span><br><span class="line">checking for void * size ... 8 bytes</span><br><span class="line">checking for uint32_t ... found</span><br><span class="line">checking for uint64_t ... found</span><br><span class="line">checking for sig_atomic_t ... found</span><br><span class="line">checking for sig_atomic_t size ... 4 bytes</span><br><span class="line">checking for socklen_t ... found</span><br><span class="line">checking for in_addr_t ... found</span><br><span class="line">checking for in_port_t ... found</span><br><span class="line">checking for rlim_t ... found</span><br><span class="line">checking for uintptr_t ... uintptr_t found</span><br><span class="line">checking for system byte ordering ... little endian</span><br><span class="line">checking for size_t size ... 8 bytes</span><br><span class="line">checking for off_t size ... 8 bytes</span><br><span class="line">checking for time_t size ... 8 bytes</span><br><span class="line">checking for AF_INET6 ... found</span><br><span class="line">checking for setproctitle() ... not found</span><br><span class="line">checking for pread() ... found</span><br><span class="line">checking for pwrite() ... found</span><br><span class="line">checking for pwritev() ... found</span><br><span class="line">checking for sys_nerr ... found</span><br><span class="line">checking for localtime_r() ... found</span><br><span class="line">checking for posix_memalign() ... found</span><br><span class="line">checking for memalign() ... found</span><br><span class="line">checking for mmap(MAP_ANON|MAP_SHARED) ... found</span><br><span class="line">checking for mmap(&quot;/dev/zero&quot;, MAP_SHARED) ... found</span><br><span class="line">checking for System V shared memory ... found</span><br><span class="line">checking for POSIX semaphores ... not found</span><br><span class="line">checking for POSIX semaphores in libpthread ... found</span><br><span class="line">checking for struct msghdr.msg_control ... found</span><br><span class="line">checking for ioctl(FIONBIO) ... found</span><br><span class="line">checking for struct tm.tm_gmtoff ... found</span><br><span class="line">checking for struct dirent.d_namlen ... not found</span><br><span class="line">checking for struct dirent.d_type ... found</span><br><span class="line">checking for sysconf(_SC_NPROCESSORS_ONLN) ... found</span><br><span class="line">checking for openat(), fstatat() ... found</span><br><span class="line">checking for getaddrinfo() ... found</span><br><span class="line">checking for PCRE library ... found</span><br><span class="line">checking for PCRE JIT support ... found</span><br><span class="line">checking for OpenSSL library ... found</span><br><span class="line">checking for zlib library ... found</span><br><span class="line">creating objs/Makefile</span><br><span class="line"></span><br><span class="line">Configuration summary</span><br><span class="line">  + using threads</span><br><span class="line">  + using system PCRE library</span><br><span class="line">  + using system OpenSSL library</span><br><span class="line">  + using system zlib library</span><br><span class="line"></span><br><span class="line">  nginx path prefix: &quot;/opt/nginx&quot;</span><br><span class="line">  nginx binary file: &quot;/opt/nginx/sbin/nginx&quot;</span><br><span class="line">  nginx modules path: &quot;/opt/nginx/modules&quot;</span><br><span class="line">  nginx configuration prefix: &quot;/opt/nginx/conf&quot;</span><br><span class="line">  nginx configuration file: &quot;/opt/nginx/conf/nginx.conf&quot;</span><br><span class="line">  nginx pid file: &quot;/opt/nginx/logs/nginx.pid&quot;</span><br><span class="line">  nginx error log file: &quot;/opt/nginx/logs/error.log&quot;</span><br><span class="line">  nginx http access log file: &quot;/opt/nginx/logs/access.log&quot;</span><br><span class="line">  nginx http client request body temporary files: &quot;client_body_temp&quot;</span><br><span class="line">  nginx http proxy temporary files: &quot;proxy_temp&quot;</span><br><span class="line">  nginx http fastcgi temporary files: &quot;fastcgi_temp&quot;</span><br><span class="line">  nginx http uwsgi temporary files: &quot;uwsgi_temp&quot;</span><br><span class="line">  nginx http scgi temporary files: &quot;scgi_temp&quot;</span><br><span class="line"></span><br><span class="line">[root@CentOS7 nginx-1.12.0]# make -j4 &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>好，接下来/opt/nginx 目录下已经有文件集目录生成了，运行./sbin/nginx -V看看输出啥，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 sbin]# ./nginx -V</span><br><span class="line">nginx version: nginx/1.12.0</span><br><span class="line">built by gcc 4.8.5 20150623 (Red Hat 4.8.5-11) (GCC) </span><br><span class="line">built with OpenSSL 1.0.1e-fips 11 Feb 2013</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --prefix=/opt/nginx --with-select_module --with-threads --with-file-aio --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_secure_link_module --with-http_degradation_module --with-http_slice_module --with-http_stub_status_module --without-mail_pop3_module --without-mail_imap_module --without-mail_smtp_module --with-stream --with-stream_ssl_module</span><br><span class="line">[root@CentOS7 sbin]#</span><br></pre></td></tr></table></figure><p>嗦嘎，编译成功！</p><p>运行试试，记得配置防火墙规则，如果你要关掉防火墙也可以 </p><p>[root@CentOS7 html]# systemctl stop firewalld.service<br>[root@CentOS7 html]# systemctl disable firewalld.service </p><p>上边两条命令拿去不谢。</p><p>开机ngixn还要启动啊，init脚本得做好咧，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># nginx This shell script takes care of starting and stopping</span><br><span class="line"># nginx</span><br><span class="line">#</span><br><span class="line"># chkconfig: - 13 68</span><br><span class="line"># description: nginx is a web server</span><br><span class="line">### BEGIN INIT INFO</span><br><span class="line"># Provides: $named</span><br><span class="line"># Short-Description: start|stop|status|restart|configtest </span><br><span class="line">### END INIT INFO</span><br><span class="line">#variables</span><br><span class="line">NGINX_BIN=&quot;/opt/nginx/sbin/nginx&quot;</span><br><span class="line">NGINX_CONF=&quot;/opt/nginx/conf/nginx.conf&quot;</span><br><span class="line">NGINX_PID=&quot;/opt/nginx/logs/nginx.pid&quot;</span><br><span class="line">NETSTAT=&quot;/bin/netstat&quot;</span><br><span class="line">alter=$1</span><br><span class="line">prog=nginx</span><br><span class="line">#load system function</span><br><span class="line">. /etc/rc.d/init.d/functions</span><br><span class="line">#function:echo ok or error</span><br><span class="line">function if_no &#123;</span><br><span class="line">if [ $2 == 0 ]; then</span><br><span class="line">echo -n $&quot;$1 $&#123;prog&#125;:&quot; &amp;&amp; success &amp;&amp; echo</span><br><span class="line">else</span><br><span class="line">echo -n $&quot;$1 $&#123;prog&#125;:&quot; &amp;&amp; failure &amp;&amp; echo</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line">#start nginx</span><br><span class="line">function start &#123;</span><br><span class="line">if [ -s $&#123;NGINX_PID&#125; ]; then</span><br><span class="line">echo &quot;nginx already running&quot; </span><br><span class="line">else</span><br><span class="line">if [ `$&#123;NETSTAT&#125; -tnpl | grep nginx | wc -l` -eq 0 ]; then</span><br><span class="line">rm -f $&#123;NGINX_PID&#125; 2&gt;/dev/null</span><br><span class="line">$&#123;NGINX_BIN&#125; -c $&#123;NGINX_CONF&#125; </span><br><span class="line">if_no start $?</span><br><span class="line">else</span><br><span class="line">$&#123;NETSTAT&#125; -tnpl | grep nginx | awk &apos;&#123; print $7&#125;&apos; | cut -d &apos;/&apos; -f 1 &gt; $&#123;NGINX_PID&#125;</span><br><span class="line">if_no start $?</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line">#stop nginx</span><br><span class="line">function stop &#123;</span><br><span class="line">if [ -s $&#123;NGINX_PID&#125; ]; then</span><br><span class="line">cat $&#123;NGINX_PID&#125; | xargs kill -QUIT</span><br><span class="line">if_no stop $?</span><br><span class="line">else</span><br><span class="line">if [ `$&#123;NETSTAT&#125; -tnpl | grep nginx | wc -l` -eq 0 ]; then</span><br><span class="line">rm -f $&#123;NGINX_PID&#125; 2&gt;/dev/null</span><br><span class="line">if_no stop 0</span><br><span class="line">else</span><br><span class="line">rm -f $&#123;NGINX_PID&#125; 2&gt;/dev/null</span><br><span class="line">kill `$&#123;NETSTAT&#125; -tnpl | grep nginx | awk &apos;&#123; print $7&#125;&apos; | cut -d &apos;/&apos; -f 1`</span><br><span class="line">if_no stop $?</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line">function restart &#123;</span><br><span class="line">if [ -s $&#123;NGINX_PID&#125; ]; then</span><br><span class="line">cat $&#123;NGINX_PID&#125; | xargs kill -HUP</span><br><span class="line">if_no restart $?</span><br><span class="line">else</span><br><span class="line">stop</span><br><span class="line">sleep 1</span><br><span class="line">start</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line">function status &#123;</span><br><span class="line">$&#123;NETSTAT&#125; -tnpl | grep nginx | grep LISTEN</span><br><span class="line">[ $? == 0 ] &amp;&amp; echo &quot;nginx is running&quot; || echo &quot;nginx is not running&quot;</span><br><span class="line">&#125;</span><br><span class="line">function configtest &#123;</span><br><span class="line">$&#123;NGINX_BIN&#125; -t</span><br><span class="line">&#125;</span><br><span class="line">case $alter in</span><br><span class="line">start)</span><br><span class="line">start</span><br><span class="line">;;</span><br><span class="line">stop)</span><br><span class="line">stop</span><br><span class="line">;;</span><br><span class="line">restart)</span><br><span class="line">restart</span><br><span class="line">;;</span><br><span class="line">status)</span><br><span class="line">status</span><br><span class="line">;;</span><br><span class="line">configtest)</span><br><span class="line">configtest</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">echo &quot;use:$&#123;NGINX&#125; &#123;start|stop|restart|status|configtest&#125;&quot;</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>脚本根据自己的Nginx安装路径设置好，加上可执行权限，放到/etc/init.d/目录下，之后使用下面两行命令开机启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 init.d]# chkconfig --add nginx </span><br><span class="line">[root@CentOS7 init.d]# chkconfig nginx on</span><br></pre></td></tr></table></figure><p>Nginx的安装配置就到这里啦</p><h3 id="源码编译安装MySQL"><a href="#源码编译安装MySQL" class="headerlink" title="源码编译安装MySQL"></a><strong>源码编译安装MySQL</strong></h3><p><strong>参考资料</strong></p><p>Installing MySQL from Source</p><p><a href="https://dev.mysql.com/doc/refman/5.7/en/source-installation.html" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/5.7/en/source-installation.html</a></p><p>How to Get MySQL</p><p><a href="https://dev.mysql.com/doc/refman/5.7/en/getting-mysql.html" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/5.7/en/getting-mysql.html</a></p><p>Building MySQL Server with CMake</p><p><a href="https://dev.mysql.com/doc/internals/en/cmake.html" target="_blank" rel="noopener">https://dev.mysql.com/doc/internals/en/cmake.html</a></p><p>港真，看官方文档很重要，会给你指点迷津，少走弯路～～～～～</p><p>开始啦，之前已经下载好源码包mysql-boost-5.7.18.tar.gz ，开始脱（jie）衣（ya）服（suo），开搞！啊啊啊～～～</p><p>不过要注意哦，官网文档有这么一段“温馨提示”：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Source Installation System Requirements</span><br><span class="line"></span><br><span class="line">Installation of MySQL from source requires several development tools. Some of these tools are needed no matter whether you use a standard source distribution or a development source tree. Other tool requirements depend on which installation method you use.</span><br><span class="line"></span><br><span class="line">To install MySQL from source, the following system requirements must be satisfied, regardless of installation method:</span><br><span class="line"></span><br><span class="line">    CMake, which is used as the build framework on all platforms. CMake can be downloaded from http://www.cmake.org.</span><br><span class="line"></span><br><span class="line">    A good make program. Although some platforms come with their own make implementations, it is highly recommended that you use GNU make 3.75 or higher. It may already be available on your system as gmake. GNU make is available from http://www.gnu.org/software/make/.</span><br><span class="line"></span><br><span class="line">    A working ANSI C++ compiler. See the description of the FORCE_UNSUPPORTED_COMPILER. option for some guidelines.</span><br><span class="line"></span><br><span class="line">    The Boost C++ libraries are required to build MySQL (but not to use it). Boost 1.59.0 must be installed. To obtain Boost and its installation instructions, visit the official site. After Boost is installed, tell the build system where the Boost files are located by defining the WITH_BOOST option when you invoke CMake. For example:</span><br><span class="line"></span><br><span class="line">    shell&gt; cmake . -DWITH_BOOST=/usr/local/boost_1_59_0</span><br><span class="line"></span><br><span class="line">Adjust the path as necessary to match your installation.</span><br><span class="line"></span><br><span class="line">Sufficient free memory. If you encounter problems such as “internal compiler error” when compiling large source files, it may be that you have too little memory. If compiling on a virtual machine, try increasing the memory allocation.</span><br><span class="line"></span><br><span class="line">Perl is needed if you intend to run test scripts. Most Unix-like systems include Perl. On Windows, you can use a version such as ActiveState Perl.</span><br></pre></td></tr></table></figure><p><strong>为了照顾英文不好的同学，我简单说几句</strong></p><p><strong>1、必须安装cmake，新版的MySQL采用cmak来编译。</strong></p><p><strong>2、linux系统中的make版本最少在3.75及以上</strong></p><p><strong>3、linux必须有C++编译器</strong></p><p><strong>4、必须安装Boost 1.59.0，指定的1.59.0版本，其他的高版本、低版本都不行，就这一个版本</strong></p><p><strong>下载boost1.59</strong></p><p>[root@CentOS7 opt]# yum remove boost-1.53.0-26.el7.x86_64  #删除系统自带的低版本boost<br>[root@CentOS7 opt]# wget <a href="https://dl.bintray.com/boostorg/release/1.59.0/source/boost_1_59_0.tar.gz" target="_blank" rel="noopener">https://dl.bintray.com/boostorg/release/1.59.0/source/boost_1_59_0.tar.gz</a>   #下载新版本的boost</p><p><strong>创建mysql用户、用户组及目录</strong></p><p>[root@CentOS7 /]# mkdir -pv /opt/mysql5.7/{conf,data}<br>mkdir: created directory <code>/opt/mysql5.7&#39;mkdir: created directory</code>/opt/mysql5.7/conf’<br>mkdir: created directory `/opt/mysql5.7/data’</p><p>[root@CentOS7 /]# groupadd -r mysql &amp;&amp; useradd -r -g mysql -s /bin/false -M mysql #增加mysql用户及用户组</p><p><strong>安装依赖包保平安</strong></p><p>yum install zlib-devel ncurses ncurses-devel bison</p><p><strong>进入源码目录编译安装</strong></p><p>[root@CentOS7 opt]# cd mysql-5.7.18/<br>[root@CentOS7 mysql-5.7.18]# </p><p>输入以下编译参数：</p><p>cmake . -DCMAKE_INSTALL_PREFIX=/opt/mysql5.7 -DMYSQL_DATADIR=/opt/mysql5.7/data -DSYSCONFDIR=/opt/mysql5.7/conf -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_ARCHIVE_STORAGE_ENGINE=1 -DWITH_BLACKHOLE_STORAGE_ENGINE=1 -DMYSQL_UNIX_ADDR=/opt/mysql5.7/mysql.sock -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DENABLED_LOCAL_INFILE=1 -DWITH_BOOST=/opt/tools -DENABLE_DOWNLOADS=1 -DDOWNLOAD_BOOST=1 -DWITH_MYISAM_STORAGE_ENGINE=1 -DWITH_INNODB_MEMCACHED=on </p><p>敲回车</p><p>等一会儿，看到最后一句 – Build files have been written to: /opt/mysql-5.7.18 ，哈哈，OK。</p><p>PS：这里有个坑，官方文档说的不是很清楚，boost1.59的压缩包下载下来后，-DWITH_BOOST的设置为压缩包所在的目录就行，也不用解压，例如我的boost1.59的压缩包放在/opt路径下，我这里就设置为-DWITH_BOOST=/opt</p><p>下一步就make -j 8 &amp;&amp; make install</p><p>嘿嘿，我用的是Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz</p><p><strong>无惊无险，编译完成，接下来就是要做初始化啦</strong></p><p>官方MySQL5.7文档里面有这么一段话：</p><p>After installing MySQL, you must initialize the data directory, including the tables in the mysql system database.<br>在安装MySQL,您必须初始化数据目录,包括MySQL系统数据库中的表。</p><p>As of MySQL 5.7.6, use the server to initialize the data directory:<br>自MySQL 5.7.6起，使用MySQL服务器初始化数据目录:</p><p>命令例子<br>shell&gt; bin/mysqld –initialize –user=mysql</p><p>Before MySQL 5.7.6, use mysql_install_db:<br>在MySQL 5.7.6之前,使用mysql_install_db:</p><p>命令例子<br>shell&gt; bin/mysql_install_db –user=mysql</p><p>OK，我这里采用的是mysqld –initialize来做初始化，哈哈哈哈哈哈哈～～～～～～～</p><p>进入MySQL应用目录<br>[root@CentOS7 ~]# cd /opt/mysql5.7/<br>[root@CentOS7 mysql5.7]#</p><p>初始化MySQL</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 mysql5.7]# ./bin/mysqld --initialize --user=mysql --basedir=/opt/mysql5.7 --datadir=/opt/mysql5.7/data</span><br><span class="line">2017-06-12T05:41:26.221750Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).</span><br><span class="line">2017-06-12T05:41:26.350566Z 0 [Warning] InnoDB: New log files created, LSN=45790</span><br><span class="line">2017-06-12T05:41:26.375260Z 0 [Warning] InnoDB: Creating foreign key constraint system tables.</span><br><span class="line">2017-06-12T05:41:26.429865Z 0 [Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: c6bc1e39-4f31-11e7-ac7a-000c29bf2761.</span><br><span class="line">2017-06-12T05:41:26.430714Z 0 [Warning] Gtid table is not ready to be used. Table &apos;mysql.gtid_executed&apos; cannot be opened.</span><br><span class="line">2017-06-12T05:41:26.431659Z 1 [Note] A temporary password is generated for root@localhost: kTsP_fwzx9zY</span><br><span class="line">[root@CentOS7 mysql5.7]# date</span><br><span class="line">2017年 06月 12日 星期一 13:41:36 CST</span><br><span class="line">[root@CentOS7 mysql5.7]#</span><br></pre></td></tr></table></figure><p>会自动完成初始化，并生成一个临时的密码，如上。</p><p>上边有个报警 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use –explicit_defaults_for_timestamp server option (see documentation for more details).</p><p>我是乖乖仔，照做，删除掉data目录下初始化生成的文件，再来一波:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 mysql5.7]# rm -rf data/*</span><br><span class="line">[root@CentOS7 mysql5.7]# ll data/</span><br><span class="line">总用量 0</span><br><span class="line">[root@CentOS7 mysql5.7]#  ./bin/mysqld --initialize --user=mysql --basedir=/opt/mysql5.7 --datadir=/opt/mysql5.7/data --explicit_defaults_for_timestamp</span><br><span class="line">2017-06-12T07:04:15.856329Z 0 [Warning] InnoDB: New log files created, LSN=45790</span><br><span class="line">2017-06-12T07:04:15.877492Z 0 [Warning] InnoDB: Creating foreign key constraint system tables.</span><br><span class="line">2017-06-12T07:04:15.931186Z 0 [Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: 58c9d7b2-4f3d-11e7-a336-000c29bf2761.</span><br><span class="line">2017-06-12T07:04:15.931749Z 0 [Warning] Gtid table is not ready to be used. Table &apos;mysql.gtid_executed&apos; cannot be opened.</span><br><span class="line">2017-06-12T07:04:15.932352Z 1 [Note] A temporary password is generated for root@localhost: l&gt;58J50te/vw</span><br><span class="line">[root@CentOS7 mysql5.7]#</span><br></pre></td></tr></table></figure><p>报警没有了，嘿嘿。</p><p><strong>编辑配置文件，添加以下内容</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">port=3306</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">default-character-set=utf8</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">basedir =/usr/local/mysql</span><br><span class="line">datadir =/mydata/data</span><br><span class="line">port =3306</span><br><span class="line">server_id =1</span><br><span class="line">socket =/tmp/mysql.sock</span><br><span class="line">pid-file=/mydata/data/mysql.pid</span><br><span class="line"></span><br><span class="line">bind-address=localhost</span><br><span class="line">#skip-grant-tables</span><br></pre></td></tr></table></figure><p>拷贝配置文件<br>cp support-files/my-default.cnf /opt/mysql5.7/conf/my.cnf</p><p>拷贝启动脚本<br>cp support-files/mysql.server /etc/init.d/mysqld</p><p>chmod +x /etc/init.d/mysqld</p><p>编辑启动脚本<br>主要编辑basedir和datadir这两项</p><p>chkconfig  –add mysqld<br>chkconfig  mysqld on</p><p>[root@CentOS7 opt]# service mysqld start<br>Starting MySQL.                                            [  确定  ]</p><p>[root@CentOS7 opt]# service mysqld status<br>MySQL running (104746)                                     [  确定  ]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 opt]# netstat -ntlp</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:111             0.0.0.0:*               LISTEN      1/systemd           </span><br><span class="line">tcp        0      0 192.168.122.1:53        0.0.0.0:*               LISTEN      14334/dnsmasq       </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      14074/sshd          </span><br><span class="line">tcp        0      0 127.0.0.1:631           0.0.0.0:*               LISTEN      14071/cupsd         </span><br><span class="line">tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      14300/master        </span><br><span class="line">tcp        0      0 127.0.0.1:6010          0.0.0.0:*               LISTEN      98390/sshd: root@pt </span><br><span class="line">tcp        0      0 127.0.0.1:6011          0.0.0.0:*               LISTEN      103809/sshd: root@p </span><br><span class="line">tcp6       0      0 :::3306                 :::*                    LISTEN      104746/mysqld       </span><br><span class="line">tcp6       0      0 :::111                  :::*                    LISTEN      1/systemd           </span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN      14074/sshd          </span><br><span class="line">tcp6       0      0 ::1:631                 :::*                    LISTEN      14071/cupsd         </span><br><span class="line">tcp6       0      0 ::1:25                  :::*                    LISTEN      14300/master        </span><br><span class="line">tcp6       0      0 ::1:6010                :::*                    LISTEN      98390/sshd: root@pt </span><br><span class="line">tcp6       0      0 ::1:6011                :::*                    LISTEN      103809/sshd: root@p</span><br></pre></td></tr></table></figure><p>爽爽爽～～～～～</p><p><strong>全局变量</strong><br>为了直接使用，加到环境变量里，修改/etc/profile文件，在文件末尾添加：<br>export PATH=/opt/mysql5.7/bin:$PATH</p><p>source /etc/profile</p><p><strong>设置root用户可以远程访问</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 data]#  mysql -u root -p </span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 3</span><br><span class="line">Server version: 5.7.17</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; set password = password(&apos;123456&apos;);</span><br><span class="line"></span><br><span class="line">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;123456&apos; WITH GRANT OPTION;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges; </span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure><p>关闭CentOS7的防火墙，再用第三方数据库管理工具连接测试，OK啦。</p><p>MySQL5.7 编译安装完毕</p><h3 id="源码编译安装PHP5"><a href="#源码编译安装PHP5" class="headerlink" title="源码编译安装PHP5"></a><strong>源码编译安装PHP5</strong></h3><p><strong>安装依赖库保平安</strong></p><p>yum -y install gd zlib zlib-devel openssl openssl-devel libxml2 libxml2-devel libjpeg libjpeg-devel libpng libpng-devel libticonv.x86_64 libticonv-devel.x86_64</p><p>具备第三方源的前提下的平安符<br>yum -y install gd zlib zlib-devel openssl openssl-devel libxml2 libxml2-devel libjpeg libjpeg-devel libpng libpng-devel libticonv.x86_64 libticonv-devel.x86_64 php-mcrypt libmcrypt libmcrypt-devel mhash mhash-devel libevent libevent-devel libxml2 libxml2-devel bzip2-devel libcurl-devel libjpeg-devel libpng-devel freetype-devel</p><p><strong>依赖包的一些点滴</strong></p><p><strong>扩展支持(mcrypt、mhash扩展和libevent)</strong></p><p>如果想让编译的php支持mcrypt、mhash扩展和libevent，需要安装以下包<br>libmcrypt<br>libmcrypt-devel<br>mhash<br>mhash-devel</p><p>说明：<br>mcrypt扩展库可以实现加密解密功能，就是既能将明文加密，也可以密文还原。<br>mhash是基于离散数学原理的不可逆向的php加密方式扩展库，其在默认情况下不开启。<br>mhash的可以用于创建校验数值，消息摘要，消息认证码，以及无需原文的关键信息保存（如密码）等。</p><p>centos源不能安装libmcrypt-devel，由于版权的原因没有自带mcrypt的包，不过我在centos7中安装了epel源，哈哈哈。</p><p>使用yum命令安装</p><pre><code># yum install php-mcrypt libmcrypt libmcrypt-devel mhash mhash-devel</code></pre><p><strong>libevent相关包</strong><br>libevent是一个异步事件通知库文件，其API提供了在某文件描述上发生某事件时或其超时时执行回调函数的机制<br>它主要用来替换事件驱动的网络服务器上的event loop机制。目前来说， libevent支持/dev/poll、kqueue、select、poll、epoll及Solaris的event ports。可以根据需要安装libevent，系统一般会自带libevent，但版本有些低。</p><p> 使用yum命令安装</p><p>yum install libevent libevent-devel</p><p><strong>支持xml的相关包</strong><br>bzip2 是一个基于Burrows-Wheeler 变换的无损压缩软件能够高效的完成文件数据的压缩<br>libcurl主要功能就是用不同的协议连接和沟通不同的服务器，也就是相当封装了的sockPHP<br>libcurl允许你用不同的协议连接和沟通不同的服务器</p><p>yum install libxml2 libxml2-devel bzip2-devel libcurl-devel</p><p><strong>图形相关的rpm包</strong><br>通常对应的错误提示：JIS-mapped Japanese font support in GD</p><p>yum install libjpeg-devel libpng-devel freetype-devel</p><p>来个一条龙<br>yum -y install gd zlib zlib-devel openssl openssl-devel libxml2 libxml2-devel libjpeg libjpeg-devel libpng libpng-devel libticonv.x86_64 libticonv-devel.x86_64 php-mcrypt libmcrypt libmcrypt-devel mhash mhash-devel libevent libevent-devel libxml2 libxml2-devel bzip2-devel libcurl-devel libjpeg-devel libpng-devel freetype-devel</p><p>前戏做足，好戏开始，各位同学往下面看，下面哦。。。。。。</p><p>[root@CentOS7 php-5.6.30]# tar zxvf php-5.6.30.tar.gz    #解压源码包</p><p>[root@CentOS7 tools]# cd php-5.6.30/         #进入PHP源码目录</p><p>[root@CentOS7 php-5.6.30]# </p><p>输下编译命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/opt/php \</span><br><span class="line">--sysconfdir=/opt/php/etc \</span><br><span class="line">--enable-fpm \</span><br><span class="line">--enable-pcntl \</span><br><span class="line">--enable-shmop \</span><br><span class="line">--enable-sysvmsg \</span><br><span class="line">--enable-sysvsem \</span><br><span class="line">--enable-sysvshm \</span><br><span class="line">--enable-sockets \</span><br><span class="line">--enable-shared \</span><br><span class="line">--enable-mbstring \</span><br><span class="line">--enable-xml \</span><br><span class="line">--enable-opcache \</span><br><span class="line">--enable-bcmath \</span><br><span class="line">--enable-soap \</span><br><span class="line">--enable-zip \</span><br><span class="line">--with-mysqli=/opt/mysql5.7/bin/mysql_config \</span><br><span class="line">--with-mysql=/opt/mysql5.7 \</span><br><span class="line">--with-openssl \</span><br><span class="line">--with-freetype-dir \</span><br><span class="line">--with-jpeg-dir \</span><br><span class="line">--with-png-dir \</span><br><span class="line">--with-zlib \</span><br><span class="line">--with-libxml-dir=/usr \</span><br><span class="line">--with-iconv \</span><br><span class="line">--with-mhash \</span><br><span class="line">--with-mcrypt \</span><br><span class="line">--with-config-file-path=/opt/php/etc \</span><br><span class="line">--with-config-file-scan-dir=/opt/php/etc/php.d \</span><br><span class="line">--with-bz2 \</span><br><span class="line">--with-curl \</span><br><span class="line">--with-gettext \</span><br><span class="line">--with-gd \</span><br></pre></td></tr></table></figure><p>–with-mysqli=/opt/mysql5.7/bin/mysql_config 和–with-mysql=/opt/mysql5.7 这两个参数，我指向了自己编译安装的MySQL5.7.17 目录</p><p>最后看到下面这一段话：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">Generating files</span><br><span class="line">configure: creating ./config.status</span><br><span class="line">creating main/internal_functions.c</span><br><span class="line">creating main/internal_functions_cli.c</span><br><span class="line">+--------------------------------------------------------------------+</span><br><span class="line">| License:                                                           |</span><br><span class="line">| This software is subject to the PHP License, available in this     |</span><br><span class="line">| distribution in the file LICENSE.  By continuing this installation |</span><br><span class="line">| process, you are bound by the terms of this license agreement.     |</span><br><span class="line">| If you do not agree with the terms of this license, you must abort |</span><br><span class="line">| the installation process at this point.                            |</span><br><span class="line">+--------------------------------------------------------------------+</span><br><span class="line"></span><br><span class="line">Thank you for using PHP.</span><br><span class="line"></span><br><span class="line">config.status: creating php5.spec</span><br><span class="line">config.status: creating main/build-defs.h</span><br><span class="line">config.status: creating scripts/phpize</span><br><span class="line">config.status: creating scripts/man1/phpize.1</span><br><span class="line">config.status: creating scripts/php-config</span><br><span class="line">config.status: creating scripts/man1/php-config.1</span><br><span class="line">config.status: creating sapi/cli/php.1</span><br><span class="line">config.status: creating sapi/fpm/php-fpm.conf</span><br><span class="line">config.status: creating sapi/fpm/init.d.php-fpm</span><br><span class="line">config.status: creating sapi/fpm/php-fpm.service</span><br><span class="line">config.status: creating sapi/fpm/php-fpm.8</span><br><span class="line">config.status: creating sapi/fpm/status.html</span><br><span class="line">config.status: creating sapi/cgi/php-cgi.1</span><br><span class="line">config.status: creating ext/phar/phar.1</span><br><span class="line">config.status: creating ext/phar/phar.phar.1</span><br><span class="line">config.status: creating main/php_config.h</span><br><span class="line">config.status: main/php_config.h is unchanged</span><br><span class="line">config.status: executing default commands</span><br><span class="line">[root@CentOS7 php-5.6.30]#</span><br></pre></td></tr></table></figure><p>然后就是 make -j 8 &amp;&amp; make install </p><p>就这么完成了编译安装php5.6.30</p><p><strong>为php-fpm提供Sysv init脚本，并将其添加至服务列表</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 ~]# cp /opt/tools/php-5.6.30/sapi/fpm/init.d.php-fpm /etc/rc.d/init.d/php-fpm</span><br><span class="line">[root@CentOS7 ~]# chmod +x /etc/rc.d/init.d/php-fpm</span><br><span class="line">[root@CentOS7 ~]# chkconfig --add php-fpm &amp;&amp; chkconfig php-fpm on</span><br><span class="line">[root@CentOS7 ~]#</span><br></pre></td></tr></table></figure><p><strong>为php-fpm提供配置文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 ~]# cd /opt/php/etc/</span><br><span class="line">[root@CentOS7 etc]# ls</span><br><span class="line">pear.conf  php-fpm.conf.default</span><br><span class="line">[root@CentOS7 etc]# cp php-fpm.conf.default php-fpm.conf</span><br><span class="line">[root@CentOS7 etc]# ll</span><br><span class="line">总用量 52</span><br><span class="line">-rw-r--r-- 1 root root  1167 6月  13 15:51 pear.conf</span><br><span class="line">-rw-r--r-- 1 root root 22752 6月  13 16:05 php-fpm.conf</span><br><span class="line">-rw-r--r-- 1 root root 22752 6月  13 15:51 php-fpm.conf.default</span><br><span class="line">[root@CentOS7 etc]#</span><br></pre></td></tr></table></figure><p><strong>编辑php-fpm的配置文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">配置fpm的相关选项为你所需要的值，并启用pid文件（如下最后一行）：</span><br><span class="line">pm.max_children = 150</span><br><span class="line">pm.start_servers = 8</span><br><span class="line">pm.min_spare_servers = 5</span><br><span class="line">pm.max_spare_servers = 10</span><br><span class="line">pid = run/php-fpm.pid</span><br></pre></td></tr></table></figure><p><strong>接下来就可以启动php-fpm了</strong></p><p>service php-fpm start</p><p>[root@CentOS7 etc]# ps axuf |grep php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 etc]# ps axuf |grep php</span><br><span class="line">root      74719  0.0  0.0 112664   972 pts/1    S+   16:21   0:00          \_ grep --color=auto php</span><br><span class="line">root      74700  0.0  0.1 125980  5032 ?        Ss   16:21   0:00 php-fpm: master process (/opt/php/etc/php-fpm.conf)</span><br><span class="line">nobody    74701  0.0  0.1 128064  5108 ?        S    16:21   0:00  \_ php-fpm: pool www</span><br><span class="line">nobody    74702  0.0  0.1 128064  5108 ?        S    16:21   0:00  \_ php-fpm: pool www</span><br><span class="line">nobody    74703  0.0  0.1 128064  5108 ?        S    16:21   0:00  \_ php-fpm: pool www</span><br><span class="line">nobody    74704  0.0  0.1 128064  5112 ?        S    16:21   0:00  \_ php-fpm: pool www</span><br><span class="line">nobody    74705  0.0  0.1 128064  5112 ?        S    16:21   0:00  \_ php-fpm: pool www</span><br><span class="line">nobody    74706  0.0  0.1 128064  5112 ?        S    16:21   0:00  \_ php-fpm: pool www</span><br><span class="line">nobody    74707  0.0  0.1 128064  5112 ?        S    16:21   0:00  \_ php-fpm: pool www</span><br><span class="line">nobody    74708  0.0  0.1 128064  5112 ?        S    16:21   0:00  \_ php-fpm: pool www</span><br><span class="line">[root@CentOS7 etc]#</span><br></pre></td></tr></table></figure><p><strong>整合nginx和php5</strong></p><p>1、编辑 /opt/nginx/conf/nginx.conf，启用如下选项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line">    root           html;</span><br><span class="line">    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">    fastcgi_index  index.php;</span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class="line">    include        fastcgi_params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、vim /opt/nginx/conf/fastcgi_params，将其内容更改为如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;</span><br><span class="line">fastcgi_param  SERVER_SOFTWARE    nginx;</span><br><span class="line">fastcgi_param  QUERY_STRING       $query_string;</span><br><span class="line">fastcgi_param  REQUEST_METHOD     $request_method;</span><br><span class="line">fastcgi_param  CONTENT_TYPE       $content_type;</span><br><span class="line">fastcgi_param  CONTENT_LENGTH     $content_length;</span><br><span class="line">fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;</span><br><span class="line">fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;</span><br><span class="line">fastcgi_param  REQUEST_URI        $request_uri;</span><br><span class="line">fastcgi_param  DOCUMENT_URI       $document_uri;</span><br><span class="line">fastcgi_param  DOCUMENT_ROOT      $document_root;</span><br><span class="line">fastcgi_param  SERVER_PROTOCOL    $server_protocol;</span><br><span class="line">fastcgi_param  REMOTE_ADDR        $remote_addr;</span><br><span class="line">fastcgi_param  REMOTE_PORT        $remote_port;</span><br><span class="line">fastcgi_param  SERVER_ADDR        $server_addr;</span><br><span class="line">fastcgi_param  SERVER_PORT        $server_port;</span><br><span class="line">fastcgi_param  SERVER_NAME        $server_name;</span><br></pre></td></tr></table></figure><p>并在所支持的主页面格式中添加php格式的主页，类似如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    root   html;</span><br><span class="line">    index  index.php index.html index.htm;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而后重新载入nginx的配置文件：</p><p>service nginx reload</p><p>3、在/opt/nginx/html新建index.php的测试页面，测试php是否能正常工作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>接着就可以通过浏览器访问此测试页面了。</p><p>此处有个坑   浏览器访问，不能解析，显示“ File not found.”</p><p>fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</p><p>这一句有问题， /scripts是一个目录名，也就是你站点的根目录，比如说，你访问/index.php这个文件，其实就是访问操作系统中/scripts/index.php这个文件，这个文件是否存在？/scripts 改成 $document_root 就好了，呵呵。</p><h2 id="一键搭建LNMP源码编译环境"><a href="#一键搭建LNMP源码编译环境" class="headerlink" title="一键搭建LNMP源码编译环境"></a>一键搭建LNMP源码编译环境</h2><p>请移步<br><a href="https://github.com/zhusas/lnmp" target="_blank" rel="noopener">https://github.com/zhusas/lnmp</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;源码编译安装LNMP架构环境&quot;&gt;&lt;a href=&quot;#源码编译安装LNMP架构环境&quot; class=&quot;headerlink&quot; title=&quot;源码编译安装LNMP架构环境&quot;&gt;&lt;/a&gt;源码编译安装LNMP架构环境&lt;/h2&gt;&lt;h3 id=&quot;先下载nmp三件套&quot;&gt;&lt;a href=&quot;#先下载nmp三件套&quot; class=&quot;headerlink&quot; title=&quot;先下载nmp三件套&quot;&gt;&lt;/a&gt;&lt;strong&gt;先下载nmp三件套&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;wget &lt;a href=&quot;http://nginx.org/download/nginx-1.12.0.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://nginx.org/download/nginx-1.12.0.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;wget &lt;a href=&quot;https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-boost-5.7.18.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-boost-5.7.18.tar.gz&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="nginx" scheme="https://zhusas.github.io/tags/nginx/"/>
    
      <category term="php" scheme="https://zhusas.github.io/tags/php/"/>
    
      <category term="lnmp" scheme="https://zhusas.github.io/tags/lnmp/"/>
    
      <category term="MySQL" scheme="https://zhusas.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>sed和awk的详细用法</title>
    <link href="https://zhusas.github.io/2018/08/06/sed%E5%92%8Cawk%E7%9A%84%E8%AF%A6%E7%BB%86%E7%94%A8%E6%B3%95/"/>
    <id>https://zhusas.github.io/2018/08/06/sed和awk的详细用法/</id>
    <published>2018-08-06T06:30:00.000Z</published>
    <updated>2018-08-06T06:31:40.595Z</updated>
    
    <content type="html"><![CDATA[<h3 id="sed用法"><a href="#sed用法" class="headerlink" title="sed用法"></a>sed用法</h3><p>sed(Stream EDitor)是一款流编辑器，用来对文本进行过滤与替换操作。其原理是：通过文件或管道读取文件内容，但是sed默认并不直接修改源文件，而是一次仅读取文件的一行至模式空间(pattern space)根据sed指令进行编辑并输出结果后清除模式空间，即所有的操作都是在模式空间中进行的。</p><p><img src="http://i.imgur.com/Htcg1Zv.png" alt=""></p><a id="more"></a><p><strong>语法格式</strong></p><p>sed [option]… ‘script’ inputfile…</p><p><strong>OPTIONS选项</strong></p><p>-n，–quite，–silent：静默输出，即不输出模式中的内容至输出</p><p>-e script：使用多个脚本指令执行编辑</p><p>-f /PATH/TO/SCRIPT_FILE：从指定的文件中读取编辑脚本</p><p>-r：支持在脚本中使用正则表达式</p><p>-i，–in-place：直接在文件原处执行编辑，即修改源文件</p><p><strong>SCRIPT，地址定界+编辑指令</strong></p><p><strong>地址定界</strong></p><p>(1) 不给地址：对全文进行处理；</p><p>(2) 单地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#：指定的行</span><br><span class="line"></span><br><span class="line">$：文件的最后一行</span><br><span class="line"></span><br><span class="line">/PATTERN/：被模式匹配到的每一行</span><br></pre></td></tr></table></figure><p>(3) 地址范围</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">m,n：指定m行到n行</span><br><span class="line"></span><br><span class="line">#,+n：指定#行到#+n行</span><br><span class="line"></span><br><span class="line">/pat1/,/pat2/：匹配到的pat1到pat2之间的行</span><br><span class="line"></span><br><span class="line">#,/pat/：第#行到匹配到pat</span><br></pre></td></tr></table></figure><p>(4) 步进：~</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1~2：所有奇数行，从一开始，步进2</span><br><span class="line"></span><br><span class="line">2~2：所有偶数行，从二开始，步进2</span><br></pre></td></tr></table></figure><p>注意：如果//中正则表达式为空，则匹配最近一次正则表达式的匹配地址！</p><p><strong>编辑命令</strong></p><p>d：删除</p><p>p：显示模式空间的内容</p><p>a \text：在行后面追加内容，支持使用\n(换行符)实现多行追加</p><p>i \text：在行前面插入内容，支持使用\n(换行符)实现多行追加</p><p>c \text：替换行为单行或多行文本，支持使用\n(换行符)</p><p>w /PATH/TO/SOMEFILE：保存模式空间匹配到的行至指定文件中</p><p>r /PATH/FROM/SOMEFILE：读取指定文件的文本流至模式空间中匹配到的行的行后</p><p>=：为模式空间中的行打印行号</p><p>!：取反条件</p><p>s/pattern/replacement/flags：替换，支持使用其他分隔符，如：s@@@, s###</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">替换标记(flags)：</span><br><span class="line">    #：替换行内匹配到的第#次的内容</span><br><span class="line">    g：行内全局替换</span><br><span class="line">    p：显示替换成功的行</span><br><span class="line">    w /PATH/TO/SOMEFILE：将替换后的结果保存至指定文件</span><br><span class="line">replacement：</span><br><span class="line">    &amp;：用pattern匹配到的内容进行替换</span><br><span class="line">    \n：在pattern中使用\(\)指定时，匹配第n个子串</span><br></pre></td></tr></table></figure><p><strong>【难点】高级编辑命令：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">h：把模式空间中的内容覆盖至保持空间中；</span><br><span class="line">H：把模式空间中的内容追加至保持空间中；</span><br><span class="line">g：把保持空间中的内容覆盖至模式空间中；</span><br><span class="line">G：把保持空间中的内容追加至模式空间中；</span><br><span class="line">x：把模式空间中的内容与保持空间中的内容互换；</span><br><span class="line">n：显示并清空模式空间，然后读取匹配到的行的下一行覆盖至模式空间；</span><br><span class="line">N：追加读取匹配到的行的下一行至模式空间中；</span><br><span class="line">d：删除模式空间中的行；</span><br><span class="line">D：删除多行模式空间中的所有行；</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">sed  -n  &apos;n;p&apos;  FILE：显示偶数行；</span><br><span class="line">sed  &apos;1!G;h;$!d&apos;  FILE：逆序显示文件的内容；</span><br><span class="line">sed  ’$!d&apos;  FILE：取出最后一行；</span><br><span class="line">sed  &apos;$!N;$!D&apos; FILE：取出文件后两行；</span><br><span class="line">sed &apos;/^$/d;G&apos; FILE：删除原有的所有空白行，而后为所有的非空白行后添加一个空白行；</span><br><span class="line">sed  &apos;n;d&apos;  FILE：显示奇数行；</span><br><span class="line">sed &apos;G&apos; FILE：在原有的每行后方添加一个空白行；</span><br></pre></td></tr></table></figure><h2 id="awk用法"><a href="#awk用法" class="headerlink" title="awk用法"></a>awk用法</h2><p>其用法博大精深，且听我细细道来</p><p>首先，grep，sed，awk三者区别，回顾一下：</p><h3 id="grep-egrep-fgrep"><a href="#grep-egrep-fgrep" class="headerlink" title="grep, egrep, fgrep"></a><strong>grep, egrep, fgrep</strong></h3><p>文本过滤工具，只读不写，加上各种正则及关键字，那叫一个爽快。</p><h3 id="sed"><a href="#sed" class="headerlink" title="sed"></a><strong>sed</strong></h3><p>行编辑器，有模式空间及保持空间，实现文本行的编辑及输出。</p><h3 id="awk"><a href="#awk" class="headerlink" title="awk"></a><strong>awk</strong></h3><p>报告生成器，格式化文本输出；功能及其强大，不光可用正则，还可以使用条件判断语句，函数、数组，不愧为上古神器。</p><p>有一点很重要，也很激励人心，就是“结合awk与其他工具诸如grep和sed，将会使shell编程更加容易，也更有逼格。”</p><h3 id="awk命令的使用格式："><a href="#awk命令的使用格式：" class="headerlink" title="awk命令的使用格式："></a><strong>awk命令的使用格式：</strong></h3><p>awk [options] ‘program’ file1,file2,…</p><p>awk [options] ‘PATTERN { action }’ file1,file2,… </p><h3 id="program与PATTERN-action-的关系"><a href="#program与PATTERN-action-的关系" class="headerlink" title="program与PATTERN { action }的关系"></a><strong>program与PATTERN { action }的关系</strong></h3><p>很多同学在刚开始学习awk的时候，这里常常犯迷糊，me too！所以我觉得这个关系先理清楚，对awk往后的学习是有帮助的。</p><p><strong>program包括PATTERN和ACTION，PATTERN和ACTION最少得有一个，语句之间用分号分隔</strong></p><p><strong>【理解关键点】模式( pattern ) 用于匹配输入中的每行文本。对于匹配上的每行文本，awk 都执行对应的 动作( action )。模式和动作之间使用花括号隔开。awk 顺序扫描每一行文本，并使用 记录分隔符（一般是换行符）将读到的每一行作为 记录，使用 域分隔符( 一般是空格符或制表符 ) 将一行文本分割为多个 域， 每个域分别可以使用 $1, $2, … $n 表示。$1 表示第一个域，$2 表示第二个域，$n 表示第 n 个域。 $0 表示整个记录。模式或动作都可以不指定，缺省模式的情况下，将匹配所有行。缺省动作的情况下，将执行动作 {print}，即打印整个记录。</strong></p><h3 id="先来说说ACTION"><a href="#先来说说ACTION" class="headerlink" title="先来说说ACTION"></a><strong>先来说说ACTION</strong></h3><p>其中最常用的ACTION参数之一就是print和printf了，前者实现打印输出，后者实现格式化输出</p><p><strong>print</strong></p><p>语法：</p><p>print item1, item2, …</p><p>要点</p><p>(1) 逗号分隔符；</p><p>(2) 输出的各item可以字符串，也可以是数值；当前记录的字段、变量或awk的表达式；</p><p>(3) 如省略item，相当于print $0,打印整行字符</p><p><strong>printf命令，这个就很有内涵了</strong></p><p>要点：</p><p>(1) FORMAT必须给出;</p><p>(2) 不会自动换行，需要显式给出换行控制符，\n</p><p>(3) FORMAT中需要分别为后面的每个item指定一个格式化符号；</p><p>语法：</p><p>printf 格式符/修饰符, item1, item2, …</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">格式符：</span><br><span class="line">        %c: 显示字符的ASCII码；</span><br><span class="line">        %d, %i: 显示十进制整数；</span><br><span class="line">        %e, %E: 科学计数法数值显示；</span><br><span class="line">        %f：显示为浮点数；</span><br><span class="line">        %g, %G：以科学计数法或浮点形式显示数值；</span><br><span class="line">        %s：显示字符串；</span><br><span class="line">        %u：无符号整数；</span><br><span class="line">        %%: 显示%自身；</span><br><span class="line"></span><br><span class="line">修饰符：</span><br><span class="line">        #[.#]：第一个数字控制显示的宽度；第二个#表示小数点后的精度；</span><br><span class="line">        %3.1f</span><br><span class="line">        -: 左对齐</span><br><span class="line">        +：显示数值的符号</span><br></pre></td></tr></table></figure><p>记住哦，格式符和修饰符可以灵活组合使用</p><h3 id="ACTION还支持以下干货"><a href="#ACTION还支持以下干货" class="headerlink" title="ACTION还支持以下干货"></a>ACTION还支持以下干货</h3><p><strong>(1) Expressions表达式</strong></p><p><strong>(2) Control statements：if, while等；</strong></p><p><strong>(3) Compound statements：组合语句；</strong></p><p><strong>(4) input statements</strong></p><p><strong>(5) output statements（print printf）</strong></p><p><strong>我们来看看控制语句：</strong></p><p>(1)if(condition) {statments} ：单分支if语句</p><p>(2)if(condition) {statments} else {statements} ：双分支if语句</p><p>(3)while(conditon) {statments}</p><p>(4)do {statements} while(condition) ：循环体</p><p>(5)for(expr1;expr2;expr3) {statements}</p><p>(6)break</p><p>(7)continue</p><p>(8)delete array[index]</p><p>(9)delete array</p><p>(10)exit</p><p>支持这么多，已经看傻,下面一个个来看看：</p><p><strong>if-else</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">语法：if(condition) statement [else statement]</span><br><span class="line"></span><br><span class="line">~]# awk -F: &apos;&#123;if($3&gt;=1000) &#123;printf &quot;Common user: %s\n&quot;,$1&#125; else &#123;printf &quot;root or Sysuser: %s\n&quot;,$1&#125;&#125;&apos; /etc/passwd</span><br><span class="line"></span><br><span class="line">~]# awk -F: &apos;&#123;if($NF==&quot;/bin/bash&quot;) print $1&#125;&apos; /etc/passwd</span><br><span class="line"></span><br><span class="line">~]# awk &apos;&#123;if(NF&gt;5) print $0&#125;&apos; /etc/fstab</span><br><span class="line"></span><br><span class="line">~]# df -h | awk -F[%] &apos;/^\/dev/&#123;print $1&#125;&apos; | awk &apos;&#123;if($NF&gt;=20) print $1&#125;&apos;</span><br><span class="line"></span><br><span class="line">使用场景：对awk取得的整行或某个字段做条件判断；</span><br></pre></td></tr></table></figure><p><strong>while循环</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">语法：while(condition) statement</span><br><span class="line">条件“真”，进入循环；条件“假”，退出循环；</span><br><span class="line"></span><br><span class="line">~]# awk &apos;/^[[:space:]]*linux16/&#123;i=1;while(i&lt;=NF) &#123;print $i,length($i); i++&#125;&#125;&apos; /etc/grub2.cfg</span><br><span class="line"></span><br><span class="line">~]# awk &apos;/^[[:space:]]*linux16/&#123;i=1;while(i&lt;=NF) &#123;if(length($i)&gt;=7) &#123;print $i,length($i)&#125;; i++&#125;&#125;&apos; /etc/grub2.cfg</span><br><span class="line"></span><br><span class="line">   使用场景：对一行内的多个字段逐一类似处理时使用；对数组中的各元素逐一处理时使用；</span><br></pre></td></tr></table></figure><p><strong>do-while循环</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">语法：do statement while(condition)</span><br><span class="line">意义：至少执行一次循环体</span><br></pre></td></tr></table></figure><p><strong>for循环</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">语法：for(expr1;expr2;expr3) statement</span><br><span class="line"></span><br><span class="line">for(variable assignment;condition;iteration process) &#123;for-body&#125;</span><br><span class="line"></span><br><span class="line">~]# awk &apos;/^[[:space:]]*linux16/&#123;for(i=1;i&lt;=NF;i++) &#123;print $i,length($i)&#125;&#125;&apos; /etc/grub2.cfg</span><br><span class="line"></span><br><span class="line">特殊用法：</span><br><span class="line">能够遍历数组中的元素；</span><br><span class="line">语法：for(var in array) &#123;for-body&#125;</span><br></pre></td></tr></table></figure><p><strong>switch语句</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">语法：switch(expression) &#123;case VALUE1 or /REGEXP/: statement; case VALUE2 or /REGEXP2/: statement; ...; default: statement&#125;</span><br></pre></td></tr></table></figure><p><strong>next</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">提前结束对本行的处理而直接进入下一行；</span><br><span class="line"></span><br><span class="line">~]# awk -F: &apos;&#123;if($3%2!=0) next; print $1,$3&#125;&apos; /etc/passwd</span><br></pre></td></tr></table></figure><p><strong>数组array</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">   关联数组：array[index-expression]</span><br><span class="line"></span><br><span class="line">index-expression:</span><br><span class="line">(1) 可使用任意字符串；字符串要使用双引号；</span><br><span class="line">(2) 如果某数组元素事先不存在，在引用时，awk会自动创建此元素，并将其值初始化为“空串”；</span><br><span class="line"></span><br><span class="line">若要判断数组中是否存在某元素，要使用&quot;index in array&quot;格式进行；</span><br><span class="line">weekdays[mon]=&quot;Monday&quot;</span><br><span class="line"></span><br><span class="line">若要遍历数组中的每个元素，要使用for循环；</span><br><span class="line">for(var in array) &#123;for-body&#125;</span><br></pre></td></tr></table></figure><p><strong>函数</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">内置函数</span><br><span class="line">数值处理：</span><br><span class="line">rand()：返回0和1之间一个随机数；</span><br><span class="line"></span><br><span class="line">    字符串处理：</span><br><span class="line">length([s])：返回指定字符串的长度；</span><br><span class="line">sub(r,s,[t])：以r表示的模式来查找t所表示的字符中的匹配的内容，并将其第一次出现替换为s所表示的内容；</span><br><span class="line">gsub(r,s,[t])：以r表示的模式来查找t所表示的字符中的匹配的内容，并将其所有出现均替换为s所表示的内容；</span><br><span class="line">split(s,a[,r])：以r为分隔符切割字符s，并将切割后的结果保存至a所表示的数组中；</span><br></pre></td></tr></table></figure><p>好，上边ACTION啰嗦完了，哈哈哈哈哈，下面就要高潮咧O(∩_∩)O哈哈~</p><h3 id="PATTERN"><a href="#PATTERN" class="headerlink" title="PATTERN"></a>PATTERN</h3><p>PATTERN有什么，有很多，超乎你的想象，它支持</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">(1) empty：空模式，匹配每一行；</span><br><span class="line"></span><br><span class="line">(2) /regular expression/：仅处理能够被此处的模式匹配到的行；</span><br><span class="line"></span><br><span class="line">(3) relational expression: 关系表达式；【结果有“真”有“假”；结果为“真”才会被处理】；</span><br><span class="line"></span><br><span class="line">【真：结果为非0值，非空字符串】这个跟bash的命令返回值不一样；</span><br><span class="line"></span><br><span class="line">(4) line ranges：行范围，</span><br><span class="line">startline,endline：/pat1/,/pat2/</span><br><span class="line"></span><br><span class="line">例子：[root@CentOS7 ~]# awk -F: &apos;/^h/,/^u/&#123;print $1&#125;&apos; /etc/passwd</span><br><span class="line"></span><br><span class="line">注意： 不支持直接给出数字的格式</span><br><span class="line"></span><br><span class="line">可以使用如下方式：</span><br><span class="line">~]# awk -F: &apos;(NR&gt;=2&amp;&amp;NR&lt;=10)&#123;print $1&#125;&apos; /etc/passwd</span><br><span class="line"></span><br><span class="line">(5) BEGIN/END模式</span><br><span class="line">BEGIN&#123;&#125;: 仅在开始处理文件中的文本之前执行一次；</span><br><span class="line">END&#123;&#125;：仅在文本处理完成之后执行一次；</span><br></pre></td></tr></table></figure><h3 id="选项-options"><a href="#选项-options" class="headerlink" title="选项[options]"></a>选项[options]</h3><p>​<br>-F：指明输入时用到的字段分隔符；</p><p>-v var=value: 自定义变量；</p><p>awk的options主要用来定义各种变量和使用各种內建变量。</p><p><strong>内建变量</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">FS：input field seperator，默认为空白字符；</span><br><span class="line">OFS：output field seperator，默认为空白字符；</span><br><span class="line">RS：input record seperator，输入时的换行符；</span><br><span class="line">ORS：output record seperator，输出时的换行符；</span><br><span class="line"></span><br><span class="line">NF：number of field，字段数量</span><br><span class="line">&#123;print NF&#125;, &#123;print $NF&#125; 它们之间是有区别的，NF是有多少个字段数量，而$NF表示最后一个字段的内容</span><br><span class="line">NR：number of record, 行数；</span><br><span class="line">FNR：各文件分别计数；行数；</span><br><span class="line"></span><br><span class="line">$0：代表一行，读一行进行切片</span><br><span class="line"></span><br><span class="line">FILENAME：当前文件名；</span><br><span class="line"></span><br><span class="line">ARGC：命令行参数的个数；</span><br><span class="line">ARGV：数组，保存的是命令行所给定的各参数；</span><br><span class="line"></span><br><span class="line">PS：在awk中要做变量替换，是不能用引号引起来的</span><br></pre></td></tr></table></figure><p><strong>自定义变量</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(1) -v var=value  #变量名区分字符大小写哦；</span><br><span class="line"></span><br><span class="line">(2) 在program中直接定义</span><br></pre></td></tr></table></figure><p>好了，awk就介绍到这里，下面来写例子</p><p><strong>例子1：显示/etc/passwd的账户</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#cat /etc/passwd |awk  -F &apos;:&apos;  &apos;&#123;print $1&#125;&apos;  </span><br><span class="line">root</span><br><span class="line">daemon</span><br><span class="line">bin</span><br><span class="line">sys</span><br></pre></td></tr></table></figure><p>上边这种是awk+action的示例，每行都会执行action{print $1}。</p><p>-F指定域分隔符为’:’。</p><p><strong>例子2：搜索/etc/passwd有root关键字的所有行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk -F: <span class="string">'/root/'</span> /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br></pre></td></tr></table></figure><p>上边这种是pattern的使用示例，匹配了pattern(这里是root)的行才会执行action(没有指定action，默认输出每行的内容)。</p><p>搜索支持正则，例如找root开头的: awk -F: ‘/^root/‘ /etc/passwd</p><p><strong>例子3：搜索/etc/passwd有root关键字的所有行，并显示对应的shell</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk -F: <span class="string">'/root/&#123;print $7&#125;'</span> /etc/passwd             </span><br><span class="line">/bin/bash</span><br></pre></td></tr></table></figure><p> 上边这里指定了匹配了pattern(这里是root)的行才会执行action{print $7}</p><p><strong>例子4：删除/boot/grub/grub.conf文件中所有行的行首的空白字符</strong></p><p>sed ‘s/^[[:space:]]+//‘ /boot/grub/grub.conf</p><p>这里的sed使用了查找替换，思路就是先查找文件中所有行的行首的空白字符，用正则的行首锚定空字符，之后查找替换为空，即删除。</p><p><strong>例子5：删除/etc/fstab文件中所有以#开头，后跟至少一个空白字符的行的行首的#和空白字符</strong></p><p>sed  ‘s/^#[[:space:]]*//‘  /etc/fstab</p><p>同样是查找替换的套路，参照例子4</p><p><strong>例子6：把/etc/fstab文件的奇数行另存为/tmp/fstab.3</strong></p><p>sed  ‘1~2!d’ /etc/fstab &gt; /tmp/fstab.3</p><p>sed ‘1~2w /tmp/fstab.3’ /etc/fstab</p><p>这里用到了sed地址定界中的步进+编辑命令，两种不同的编辑命令实现，真是飞刀又见飞刀，套路又见套路，套路就是熟悉其语法，命令，灵活组合使用。</p><p><strong>例子7：echo一个文件路径给sed命令，取出其基名；进一步地，取出其路径名</strong></p><p><strong>路径名</strong></p><p>echo “/tmp/test/fstab” | sed ‘s#[^/]+\?$##’</p><p>上边sed的#为分隔符，[^/]指匹配指定范围外的任意单个字符，</p><p>+：匹配其前面的字符1次或多次：即其前面的字符要出现至少1次；</p><p>\?：匹配其前面的字符0次或1次；即其前面的字符是可有可无的；</p><p>$：行尾锚定；用于模式的最右侧</p><p><strong>基名</strong></p><p>echo “/tmp/test/fstab” | sed ‘s#(\/.*\/)##’</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">上边的sed分隔符为#，用到了sed的查找替换、正则表达式及其分组，形式为\(正则表达式\)</span><br><span class="line"></span><br><span class="line">正则为\/.*\/，其中\为转移符，正则抽取出来就是/.*/  意思就是匹配到/开头的以/结尾期间的任意单个字符任意次。</span><br><span class="line"></span><br><span class="line">各位应该明白了吧。</span><br></pre></td></tr></table></figure><p><strong>例子8：统计指定文件中所有行中每个单词出现的次数</strong></p><p>awk ‘{for(i=1;i&lt;=NF;i++){count[$i]++}}END{for(i in count) {print i,count[i]}}’ /etc/fstab</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 ~]<span class="comment"># awk '&#123;for(i=1;i&lt;=NF;i++)&#123;count[$i]++&#125;&#125;END&#123;for(i in count) &#123;print i,count[i]&#125;&#125;' /etc/fstab</span></span><br><span class="line">swap 2</span><br><span class="line">fstab(5), 1</span><br><span class="line">filesystems, 1</span><br><span class="line">on 1</span><br><span class="line">/etc/fstab 1</span><br><span class="line">/boot 1</span><br><span class="line">more 1</span><br><span class="line">mount(8) 1</span><br><span class="line">pages 1</span><br><span class="line"><span class="string">'/dev/disk'</span> 1</span><br><span class="line">/dev/mapper/cl_centos7-swap 1</span><br><span class="line">blkid(8) 1</span><br><span class="line">See 1</span><br><span class="line">/dev/mapper/cl_centos7-root 1</span><br><span class="line"><span class="keyword">for</span> 1</span><br><span class="line">and/or 1</span><br><span class="line">anaconda 1</span><br><span class="line">/ 1</span><br><span class="line">findfs(8), 1</span><br><span class="line">under 1</span><br><span class="line">17:33:09 1</span><br><span class="line">Created 1</span><br><span class="line">UUID=fe2021fb-ac21-474d-8256-f72b87fc915a 1</span><br><span class="line">0 6</span><br><span class="line">info 1</span><br><span class="line">Accessible 1</span><br><span class="line">22 1</span><br><span class="line"><span class="comment"># 7</span></span><br><span class="line">defaults 3</span><br><span class="line">xfs 2</span><br><span class="line">man 1</span><br><span class="line">are 1</span><br><span class="line">reference, 1</span><br><span class="line">Mar 1</span><br><span class="line">by 2</span><br><span class="line">maintained 1</span><br><span class="line">2017 1</span><br><span class="line">Wed 1</span><br><span class="line">[root@CentOS7 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>7、统计当前系统上所有tcp连接的各种状态的个数；</p><p>netstat -n | awk ‘/^tcp/ {++state[$NF]} END {for(key in state) print key,”t”,state[key]}’</p><p>例子</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@xxx:~<span class="comment"># netstat -n | awk '/^tcp/ &#123;++state[$NF]&#125; END &#123;for(key in state) print key,"t",state[key]&#125;'</span></span><br><span class="line">FIN_WAIT2 t 71</span><br><span class="line">CLOSE_WAIT t 1</span><br><span class="line">TIME_WAIT t 2049</span><br><span class="line">ESTABLISHED t 1392</span><br><span class="line">LAST_ACK t 3</span><br><span class="line">FIN_WAIT1 t 4</span><br></pre></td></tr></table></figure><p>8、统计指定的web访问日志中各ip的资源访问次数：</p><p>awk ‘{ip[$1]++}END{for(i in ip) print i,ip[i]}’ /opt/nginx/logs/access.log</p><p>9、写一个脚本：定义一个数组，数组元素为/var/log目录下所有以.log结尾的文件的名字；显示每个文件的行数；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 ~]<span class="comment">#  cat week15_title9.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">files=/var/<span class="built_in">log</span>/*.<span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$files</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    wc -l <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>输出如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 ~]<span class="comment"># ./week15_title9.sh </span></span><br><span class="line">248 /var/<span class="built_in">log</span>/boot.log</span><br><span class="line">9 /var/<span class="built_in">log</span>/openlmi-install.log</span><br><span class="line">177 /var/<span class="built_in">log</span>/vmware-install.log</span><br><span class="line">326 /var/<span class="built_in">log</span>/vmware-vmsvc.log</span><br><span class="line">85 /var/<span class="built_in">log</span>/vmware-vmusr.log</span><br><span class="line">10 /var/<span class="built_in">log</span>/wpa_supplicant.log</span><br><span class="line">436 /var/<span class="built_in">log</span>/Xorg.0.log</span><br><span class="line">320 /var/<span class="built_in">log</span>/Xorg.9.log</span><br><span class="line">328 /var/<span class="built_in">log</span>/yum.log</span><br><span class="line">[root@CentOS7 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>10、写一个脚本，能从所有同学中随机挑选一个同学回答问题；进一步地：可接受一个参数，做为要挑选的同学的个数；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 ~]<span class="comment"># cat week15_title10.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> ];<span class="keyword">then</span>  <span class="comment">#判断有无脚本参数传入，如有则执行，没有就执行else的语句</span></span><br><span class="line">    <span class="keyword">for</span>((i=1;i&lt;=<span class="variable">$1</span>;i++));<span class="keyword">do</span></span><br><span class="line">        a=$[<span class="variable">$RANDOM</span>%11] <span class="comment">#定义一个0~10的随机数</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$a</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    a=$[<span class="variable">$RANDOM</span>%11]</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$a</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>11、授权centos用户可以运行fdisk命令完成磁盘管理，以及使用mkfs或mke2fs实现文件系统管理；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">visudo</span><br><span class="line">centos  ALL=(root)      NOPASSWD:/sbin/fdisk,/sbin/mke2fs,/sbin/mkfs</span><br></pre></td></tr></table></figure><p>12、授权gentoo用户可以运行逻辑卷管理的相关命令；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">visudo</span><br><span class="line">gentoo  ALL=(root)      lvm</span><br></pre></td></tr></table></figure><p>13、基于pam_time.so模块，限制用户通过sshd服务远程登录只能在工作时间进行；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config </span><br><span class="line">UsePAM yes  <span class="comment">#开启Pam模块认证</span></span><br></pre></td></tr></table></figure><p>​    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/lib64/security/pam_time.so <span class="comment">#确保pam_time.so存在 </span></span><br><span class="line"></span><br><span class="line">vim /etc/pam.d/sshd</span><br><span class="line">增加  account    required     pam_time.so</span><br><span class="line"></span><br><span class="line">vim /etc/security/time.conf</span><br><span class="line">添加 *;*;*;MoTuWeThFr0900-1800</span><br></pre></td></tr></table></figure><p>14、基于pam_listfile.so模块，定义仅某些用户，或某些组内的用户可登录系统；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vim /etc/sshd_userlist</span></span><br><span class="line">root</span><br><span class="line">centos</span><br><span class="line">gentoo</span><br><span class="line"></span><br><span class="line">chmod 600 /etc/sshd_userlist</span><br><span class="line">chown root /etc/sshd_userlist</span><br><span class="line">vim /etc/pam.d/sshd </span><br><span class="line"><span class="comment">#auth       required     pam_listfile.so item=user sense=allow file=/etc/sshd_userlist onerr=succeed</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;sed用法&quot;&gt;&lt;a href=&quot;#sed用法&quot; class=&quot;headerlink&quot; title=&quot;sed用法&quot;&gt;&lt;/a&gt;sed用法&lt;/h3&gt;&lt;p&gt;sed(Stream EDitor)是一款流编辑器，用来对文本进行过滤与替换操作。其原理是：通过文件或管道读取文件内容，但是sed默认并不直接修改源文件，而是一次仅读取文件的一行至模式空间(pattern space)根据sed指令进行编辑并输出结果后清除模式空间，即所有的操作都是在模式空间中进行的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/Htcg1Zv.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="awk" scheme="https://zhusas.github.io/tags/awk/"/>
    
      <category term="sed" scheme="https://zhusas.github.io/tags/sed/"/>
    
  </entry>
  
  <entry>
    <title>Linux防火墙的随笔</title>
    <link href="https://zhusas.github.io/2018/08/06/Linux%E9%98%B2%E7%81%AB%E5%A2%99%E7%9A%84%E9%9A%8F%E7%AC%94/"/>
    <id>https://zhusas.github.io/2018/08/06/Linux防火墙的随笔/</id>
    <published>2018-08-06T06:25:00.000Z</published>
    <updated>2018-08-06T06:26:07.472Z</updated>
    
    <content type="html"><![CDATA[<p><strong>基本语法：iptables [-t 表][操作命令] [链][规则匹配器][-j 目标动作]</strong></p><p><img src="http://i.imgur.com/Qvy6WLS.png" alt=""></p><a id="more"></a><p>系统的INPUT和OUTPUT默认策略为DROP；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -P INPUT DROP</span><br><span class="line">iptables -P OUTPUT DROP</span><br></pre></td></tr></table></figure><p>1、限制本地主机的web服务器在周一不允许访问；新请求的速率不能超过100个每秒；web服务器包含了admin字符串的页面不允许访问；web服务器仅允许响应报文离开本机；</p><p>本地主机的web服务器在周一不允许访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 80 -m time ! --weekdays Mon -j ACCEPT</span><br></pre></td></tr></table></figure><p>新请求速率不能超过100个每秒</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 80 -m <span class="built_in">limit</span> --<span class="built_in">limit</span> 100/s</span><br></pre></td></tr></table></figure><p>web包含admin字符串的页面不允许访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 80 -m string --algo bm --string <span class="string">'admin'</span> -j REJECT</span><br></pre></td></tr></table></figure><p>web服务器仅允许响应报文离开主机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A OUTPUT -p tcp --sport 80 -m state --state ESTABLISHED -j ACCEPT</span><br></pre></td></tr></table></figure><p>2、在工作时间，即周一到周五的8:30-18:00，开放本机的ftp服务给172.16.0.0网络中的主机访问；数据下载请求的次数每分钟不得超过5个；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 21 -s 172.16.0.0 -m time ! --weekdays 6,7  -m time --timestart 8:30 --timestop 18:00 -m <span class="built_in">limit</span> --<span class="built_in">limit</span> 5/m</span><br></pre></td></tr></table></figure><p>3、开放本机的ssh服务给172.16.x.1-172.16.x.100中的主机，x为你的座位号，新请求建立的速率一分钟不得超过2个；仅允许响应报文通过其服务端口离开本机；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 22 -m iprange --src-range 172.16.0.1-172.16.0.100 -m <span class="built_in">limit</span> --<span class="built_in">limit</span> 2/m</span><br><span class="line"></span><br><span class="line">iptables -A OUTPUT -p tcp --sport 22 -m iprange --dst-range 172.16.0.1-172.16.0.100 -m state --state ESTABLISHED -j ACCEPT</span><br></pre></td></tr></table></figure><p>4、拒绝TCP标志位全部为1及全部为0的报文访问本机；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --tcp-flags ALL ALL -j DROP</span><br></pre></td></tr></table></figure><p>5、允许本机ping别的主机；但不开放别的主机ping本机；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT  -p icmp --icmp-type 0 -j ACCEPT</span><br><span class="line"></span><br><span class="line">iptables -A OUTPUT  -p icmp --icmp-type 8 -j ACCEPT</span><br></pre></td></tr></table></figure><p>iptables -N clean_in</p><p>创建一条自定义链clean_in</p><p>iptables -A clean_in -d 255.255.255.255 -p icmp -j DROP</p><p>丢弃同网络的的icmp协议包</p><p>iptables -A clean_in -d 172.16.255.255 -p icmp -j DROP</p><p>丢弃来源172.16网络的icmp协议包</p><p>iptables -A clean_in -p tcp ! –syn -m state –state NEW -j DROP</p><p>丢弃syn状态不为1且为NEW 的连接</p><p>iptables -A clean_in -p tcp –tcp-flags ALL ALL -j DROP</p><p>丢弃所有tcp标志位为1的数据包</p><p>iptables -A clean_in -p tcp –tcp-flags ALL NONE -j DROP</p><p> 在clean_in链中添加一条规则，丢弃tcp报文中tcp标志位都为0的</p><p>iptables -A clean_in -d 172.16.100.7 -j RETURN</p><p>在clean_in链中添加一条规则，遇到目的端为172.16.100.7的主机，返回调用位置</p><p>iptables -A INPUT -d 172.16.100.7 -j clean_in</p><p> 在clean_in链中添加一条规则，遇到目的端为172.16.100.7的主机，调用clean_in</p><p>iptables -A INPUT  -i lo -j ACCEPT</p><p>允许回环接口进</p><p>iptables -A OUTPUT -o lo -j ACCEPT</p><p>允许回环接口出</p><p>iptables -A INPUT  -i eth0 -m multiport -p tcp –dports 53,113,135,137,139,445 -j DROP</p><p>丢弃通过eth0网卡访问53,113,135,137,139,445端口的tcp报文</p><p>iptables -A INPUT  -i eth0 -m multiport -p udp –dports 53,113,135,137,139,445 -j DROP</p><p>丢弃通过eth0网卡访问53,113,135,137,139,445端口的udp报文</p><p>iptables -A INPUT  -i eth0 -p udp –dport 1026 -j DROP</p><p>丢弃通过eth0网卡访问1026端口的udp报文</p><p>iptables -A INPUT  -i eth0 -m multiport -p tcp –dports 1433,4899 -j DROP</p><p>丢弃通过eth0网卡访问1433,4899端口的tcp报文</p><p>iptables -A INPUT  -p icmp -m limit –limit 10/second -j ACCEPT</p><p>接收icmp报文限速每秒10次</p><p>通过tcp_wrapper控制vsftpd仅允许172.16.0.0/255.255.0.0网络中的主机访问，但172.16.100.3除外；对所被被拒绝的访问尝试都记录在/var/log/tcp_wrapper.log日志文件中；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/host.allow</span><br><span class="line">     vsftpd:172.16. EXCEPT 172.16.100.3</span><br><span class="line">     </span><br><span class="line">vim /etc/host.deny</span><br><span class="line">     vsftdp:ALL :spawn /bin/echo $(date) login attemp from %c to %s,%d &gt;&gt; /bar/log/tcp_wrapper.log</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;基本语法：iptables [-t 表][操作命令] [链][规则匹配器][-j 目标动作]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/Qvy6WLS.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>vsftp文件共享服务</title>
    <link href="https://zhusas.github.io/2018/08/06/vsftp%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E6%9C%8D%E5%8A%A1/"/>
    <id>https://zhusas.github.io/2018/08/06/vsftp文件共享服务/</id>
    <published>2018-08-06T06:15:00.000Z</published>
    <updated>2018-08-06T06:17:59.749Z</updated>
    
    <content type="html"><![CDATA[<p>1)基于虚拟用户的访问形式</p><p>2)匿名用户只允许下载，不允许上传</p><p>3)禁锢所有的用户于其家目录当中</p><p>4)限制最大并发连接数为200</p><p>5)匿名用户的最大传输速率512KB/s</p><p>6)虚拟用户的账号存储在mysql数据库当中</p><p>7)数据库通过NFS进行共享</p><p><strong>先科(zhuang)普(bi)</strong></p><p>我们登录FTP有三种方式，匿名登录、本地用户登录和虚拟用户登录。 <a id="more"></a></p><p>匿名登录：在登录FTP时使用默认的用户名，一般是ftp或anonymous。</p><p>本地用户登录：使用系统用户登录，在/etc/passwd中。</p><p>虚拟用户登录：这是FTP专有用户，有两种方式实现虚拟用户，本地数据文件和数据库服务器。</p><p>FTP虚拟用户是FTP服务器的专有用户，使用虚拟用户登录FTP，只能访问FTP服务器提供的资源，大大增强了系统的安全。</p><p><img src="http://i.imgur.com/pNs4Zu2.jpg" alt=""></p><p><strong>测试环境</strong></p><p>NFS&amp;MySQL服务器          192.168.0.248</p><p>vsftp 服务器 192.168.0.235</p><p><strong>一、通过NFS服务器共享数据库</strong></p><p>1、在192.168.0.248服务器上启动nfs服务，设置共享目录为/nfs_data</p><p>[root@CentOS6 ~]# mkdir -pv  /nfs_data<br>mkdir: created directory `/nfs_data’</p><p>2、安装组件</p><p>yum install rpcbind nfs-server  nfs-lock nfs-idmap</p><p>3、启动nfs服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 ~]# systemctl start nfs-server.service</span><br><span class="line">[root@CentOS7 ~]# systemctl status nfs-server.service </span><br><span class="line">● nfs-server.service - NFS server and services</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/nfs-server.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (exited) since 五 2017-03-24 16:38:33 CST; 1 day 7h ago</span><br><span class="line"> Main PID: 37384 (code=exited, status=0/SUCCESS)</span><br><span class="line">   CGroup: /system.slice/nfs-server.service</span><br><span class="line"></span><br><span class="line">3月 24 16:38:33 CentOS7 systemd[1]: Starting NFS server and services...</span><br><span class="line">3月 24 16:38:33 CentOS7 systemd[1]: Started NFS server and services.</span><br><span class="line">[root@CentOS7 ~]#</span><br></pre></td></tr></table></figure><p>4、编辑 vim  /etc/exports</p><p> 添加一下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/nfs_data 192.168.0.0/24(rw,no_root_squash,sync)</span><br></pre></td></tr></table></figure><p> exportfs -r 一下使其生效</p><p>注：配置文件说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">/nfs_data为共享目录</span><br><span class="line"></span><br><span class="line">192.168.0.0/24  可以为一个网段，一个IP，也可以是域名，域名支持通配符 如: *.qq.com</span><br><span class="line"></span><br><span class="line">rw：read-write，可读写；</span><br><span class="line"></span><br><span class="line">ro：read-only，只读；</span><br><span class="line"></span><br><span class="line">sync：文件同时写入硬盘和内存；</span><br><span class="line"></span><br><span class="line">async：文件暂存于内存，而不是直接写入内存；</span><br><span class="line"></span><br><span class="line">no_root_squash：NFS客户端连接服务端时如果使用的是:root的话，那么对服务端分享的目录来说，也拥有root权限。显然开启这项是不安全的。</span><br><span class="line"></span><br><span class="line">root_squash：NFS客户端连接服务端时如果使用的是root的话，那么对服务端分享的目录来说，拥有匿名用户权限，通常他将使用nobody或nfsnobody身份；</span><br><span class="line"></span><br><span class="line">all_squash：不论NFS客户端连接服务端时使用什么用户，对服务端分享的目录来说都是拥有匿名用户权限；</span><br></pre></td></tr></table></figure><p><strong>二、vsftp mysql 服务器挂载nfs</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 ~]# showmount -e 192.168.0.235</span><br><span class="line">Export list for 192.168.0.235:</span><br><span class="line">/nfs_data 192.168.0.0/24</span><br><span class="line"></span><br><span class="line">[root@CentOS6 ~]# mount -t nfs 192.168.0.235:/nfs_data /nfs_data</span><br><span class="line"></span><br><span class="line">[root@CentOS6 ~]# df -h</span><br><span class="line">Filesystem            Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/vg_centos6-lv_root</span><br><span class="line">                       18G  3.3G   13G  21% /</span><br><span class="line">tmpfs                 3.9G     0  3.9G   0% /dev/shm</span><br><span class="line">/dev/sda1             477M   69M  383M  16% /boot</span><br><span class="line">192.168.0.235:/nfs_data</span><br><span class="line">                       17G  6.9G   11G  41% /nfs_data</span><br></pre></td></tr></table></figure><p>客户端在挂载的时候遇到的一个问题如下，可能是网络不太稳定，NFS默认是用UDP协议，换成TCP协议即可</p><p>mount -t nfs 192.168.0.235:/nfs_data /nfs_data -o proto=tcp -o nolock</p><p>在客户端写入一个有内容的文件测试，嘿嘿，服务端马上看到了，欧耶<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**vsftp mysql 服务器 192.168.0.235安装MySQL/MariaDB**</span><br><span class="line"></span><br><span class="line">这里我就直接yum安装MariaDB了</span><br><span class="line"></span><br><span class="line">yum install mariadb-server.x86_64 mariadb-devel.x86_64 openssl-devel.x86_64</span><br><span class="line">systemctl start mariadb.service </span><br><span class="line">systemctl enable mariadb.service </span><br><span class="line"></span><br><span class="line">**安装PAM-MySQL，要跟vsftp安装在同一台机器上**</span><br><span class="line"></span><br><span class="line">下载源码包，加压</span><br><span class="line"></span><br><span class="line">安装前再次确认依赖包</span><br><span class="line"></span><br><span class="line">yum install pam-devel openssl-devel mariadb-devel</span><br><span class="line"></span><br><span class="line">**CentOS7**</span><br><span class="line">./configure --with-mysql=/usr --with-openssl --with-pam=/usr --with-pam-mods-dir=/usr/lib64/security</span><br><span class="line"></span><br><span class="line">**CentOS6**</span><br><span class="line">./configure --with-mysql=/usr --with-openssl --with-pam=/usr --with-pam-mods-dir=/lib64/security/</span><br><span class="line"></span><br><span class="line">make -j 4 &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**配置数据库，创建vsftpd的库和表**</span><br><span class="line"></span><br><span class="line">```mysql</span><br><span class="line">[root@CentOS7 pam_mysql-0.7RC1]# mysql</span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 3</span><br><span class="line">Server version: 5.5.52-MariaDB MariaDB Server</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2016, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; create database vsftpd;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| test               |</span><br><span class="line">| vsftpd             |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; use vsftpd;</span><br><span class="line">Database changed</span><br><span class="line">MariaDB [vsftpd]&gt; create table users (</span><br><span class="line">    -&gt; id int auto_increment not null primary key,</span><br><span class="line">    -&gt; name char(30) not null,</span><br><span class="line">    -&gt; password char(48) binary not null );</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [vsftpd]&gt; desc users;</span><br><span class="line">+----------+----------+------+-----+---------+----------------+</span><br><span class="line">| Field    | Type     | Null | Key | Default | Extra          |</span><br><span class="line">+----------+----------+------+-----+---------+----------------+</span><br><span class="line">| id       | int(11)  | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| name     | char(30) | NO   |     | NULL    |                |</span><br><span class="line">| password | char(48) | NO   |     | NULL    |                |</span><br><span class="line">+----------+----------+------+-----+---------+----------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [vsftpd]&gt; insert into users(name,password) values (&apos;jerry&apos;,password(&apos;mageedu&apos;));</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [vsftpd]&gt; insert into users(name,password) values (&apos;tom&apos;,password(&apos;mageedu111&apos;));</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [vsftpd]&gt; select * from users;</span><br><span class="line">+----+-------+-------------------------------------------+</span><br><span class="line">| id | name  | password                                  |</span><br><span class="line">+----+-------+-------------------------------------------+</span><br><span class="line">|  1 | jerry | *9A94EE7D14C10908118B62D2DA88E6932E11E438 |</span><br><span class="line">|  2 | tom   | *67CF267D9D554496768C605C2D66754EAE874C12 |</span><br><span class="line">+----+-------+-------------------------------------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [vsftpd]&gt; </span><br><span class="line"></span><br><span class="line">#我这边vsftpd跟mysql不是同一台机器，所以开启远程授权    </span><br><span class="line">MariaDB [mysql]&gt; grant select on vsftpd.* to vsftpd@&apos;192.168.0.248&apos; identified by &apos;mageedu&apos;;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [mysql]&gt; flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">[root@CentOS7 pam_mysql-0.7RC1]# mysql -uvsftpd -pmageedu</span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 14</span><br><span class="line">Server version: 5.5.52-MariaDB MariaDB Server</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2016, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| test               |</span><br><span class="line">| vsftpd             |</span><br><span class="line">+--------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; use vsftpd;</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">MariaDB [vsftpd]&gt; select * from users;</span><br><span class="line">+----+-------+-------------------------------------------+</span><br><span class="line">| id | name  | password                                  |</span><br><span class="line">+----+-------+-------------------------------------------+</span><br><span class="line">|  1 | jerry | *9A94EE7D14C10908118B62D2DA88E6932E11E438 |</span><br><span class="line">|  2 | tom   | *67CF267D9D554496768C605C2D66754EAE874C12 |</span><br><span class="line">+----+-------+-------------------------------------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [vsftpd]&gt; exit</span><br><span class="line">Bye</span><br><span class="line">[root@CentOS7 pam_mysql-0.7RC1]# </span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**迁移MariaDB的数据库默认数据存放目录，放到/nfs_data/目录中，形成NFS共享**</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">[root@CentOS7 /]# systemctl stop mariadb.service </span><br><span class="line"></span><br><span class="line">[root@CentOS7 /]# cp -r /var/lib/mysql/ /nfs_data/</span><br><span class="line"></span><br><span class="line">[root@CentOS7 /]#vim /etc/my.cnf</span><br><span class="line"></span><br><span class="line">修改成：datadir=/nfs_data/mysql</span><br><span class="line"></span><br><span class="line">[root@CentOS7 /]#cd /nfs_data/</span><br><span class="line"></span><br><span class="line">[root@CentOS7 /]# chown -R mysql:mysql mysql/</span><br><span class="line"></span><br><span class="line">[root@CentOS7 /]#systemctl start mariadb.service </span><br><span class="line"></span><br><span class="line">[root@CentOS7 /]#systemctl status mariadb.service</span><br><span class="line"></span><br><span class="line">● mariadb.service - MariaDB database server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/mariadb.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since 日 2017-03-26 15:16:34 CST; 18min ago</span><br><span class="line">  Process: 94278 ExecStartPost=/usr/libexec/mariadb-wait-ready $MAINPID (code=exited, status=0/SUCCESS)</span><br><span class="line">  Process: 94247 ExecStartPre=/usr/libexec/mariadb-prepare-db-dir %n (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 94277 (mysqld_safe)</span><br><span class="line">   CGroup: /system.slice/mariadb.service</span><br><span class="line">           ├─94277 /bin/sh /usr/bin/mysqld_safe --basedir=/usr</span><br><span class="line">           └─94435 /usr/libexec/mysqld --basedir=/usr --datadir=/nfs_data...</span><br><span class="line"></span><br><span class="line">3月 26 15:16:32 CentOS7 systemd[1]: Starting MariaDB database server...</span><br><span class="line">3月 26 15:16:32 CentOS7 mysqld_safe[94277]: 170326 15:16:32 mysqld_safe....</span><br><span class="line">3月 26 15:16:32 CentOS7 mysqld_safe[94277]: 170326 15:16:32 mysqld_safe...l</span><br><span class="line">3月 26 15:16:34 CentOS7 systemd[1]: Started MariaDB database server.</span><br><span class="line">Hint: Some lines were ellipsized, use -l to show in full.</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">这时候，两边机器的NFS目录都看看，OK啦</span><br></pre></td></tr></table></figure></p><p><strong>安装vsftpd</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 mysql]# yum install vsftpd</span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Setting up Install Process</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.aliyun.com</span><br><span class="line"> * epel: mirrors.tuna.tsinghua.edu.cn</span><br><span class="line"> * extras: mirrors.aliyun.com</span><br><span class="line"> * updates: mirrors.aliyun.com</span><br><span class="line">Resolving Dependencies</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package vsftpd.x86_64 0:2.2.2-21.el6 will be installed</span><br><span class="line">--&gt; Finished Dependency Resolution</span><br><span class="line"></span><br><span class="line">Dependencies Resolved</span><br><span class="line"></span><br><span class="line">============================================================================</span><br><span class="line"> Package         Arch            Version                Repository     Size</span><br><span class="line">============================================================================</span><br><span class="line">Installing:</span><br><span class="line"> vsftpd          x86_64          2.2.2-21.el6           base          155 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">============================================================================</span><br><span class="line">Install       1 Package(s)</span><br><span class="line"></span><br><span class="line">Total download size: 155 k</span><br><span class="line">Installed size: 340 k</span><br><span class="line">Is this ok [y/N]: y</span><br><span class="line">Downloading Packages:</span><br><span class="line">vsftpd-2.2.2-21.el6.x86_64.rpm                       | 155 kB     00:00     </span><br><span class="line">Running rpm_check_debug</span><br><span class="line">Running Transaction Test</span><br><span class="line">Transaction Test Succeeded</span><br><span class="line">Running Transaction</span><br><span class="line">  Installing : vsftpd-2.2.2-21.el6.x86_64                               1/1 </span><br><span class="line">  Verifying  : vsftpd-2.2.2-21.el6.x86_64                               1/1 </span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">  vsftpd.x86_64 0:2.2.2-21.el6                                              </span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure><p><strong>配置vsftpd的pam文件</strong></p><p>[root@CentOS6 ~]# vim /etc/pam.d/vsftpd.mysql</p><p>输入以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">auth required pam_mysql.so user=vsftpd passwd=mageedu host=192.168.0.235 db=vsftpd table=users usercolumn=name passwdcolumn=password crypt=2</span><br><span class="line"></span><br><span class="line">account required pam_mysql.so user=vsftpd passwd=mageedu host=192.168.0.235 db=vsftpd table=users usercolumn=name passwdcolumn=password crypt=2</span><br></pre></td></tr></table></figure><p><strong>创建系统用户</strong></p><p>因为虚拟用户最终要映射为系统用户，所以得创建用于vsftpd映射使用滴用户啦。。。。。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 ~]# mkdir -pv /ftproot</span><br><span class="line">mkdir: created directory `/ftproot&apos;</span><br><span class="line"></span><br><span class="line">[root@CentOS6 /]# useradd -s /sbin/nologin -d /ftproot vuser</span><br></pre></td></tr></table></figure><p><strong>确保vuser的家目录其他用户能读能执行</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 /]# ll |grep ftproot/</span><br><span class="line">[root@CentOS6 /]# ll |grep ftpr</span><br><span class="line">drwx------    3 vuser vuser  4096 Mar 27 13:59 ftproot</span><br><span class="line">[root@CentOS6 /]# chmod +rx -R /ftproot/</span><br><span class="line">[root@CentOS6 /]# ll |grep ftpr</span><br><span class="line">drwxr-xr-x    3 vuser vuser  4096 Mar 27 13:59 ftproot</span><br><span class="line">[root@CentOS6 /]#</span><br></pre></td></tr></table></figure><p><strong>配置/etc/vsftpd/vsftpd.conf</strong></p><p>vim /etc/vsftpd/vsftpd.conf </p><p>修改 pam_service_name=vsftpd.mysql</p><p><strong>匿名用户只允许下载，不允许上传</strong></p><p>vim /etc/vsftpd/vsftpd.conf </p><p>anonymous_enable=YES  #允许匿名账户登录</p><p>anon_upload_enable=NO #不允许匿名用户上传文件</p><p><strong>禁锢所有的用户于其家目录当中</strong></p><p>chroot_local_user=YES #禁锢本地账户的家目录</p><p><strong>限制最大并发连接数为200</strong></p><p>max_clients=200 #最大允许的客户端连接数</p><p><strong>匿名用户的最大传输速率512KB/s</strong></p><p>local_max_rate=512000</p><p>写入配置文件后，重启vsftp服务即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1)基于虚拟用户的访问形式&lt;/p&gt;
&lt;p&gt;2)匿名用户只允许下载，不允许上传&lt;/p&gt;
&lt;p&gt;3)禁锢所有的用户于其家目录当中&lt;/p&gt;
&lt;p&gt;4)限制最大并发连接数为200&lt;/p&gt;
&lt;p&gt;5)匿名用户的最大传输速率512KB/s&lt;/p&gt;
&lt;p&gt;6)虚拟用户的账号存储在mysql数据库当中&lt;/p&gt;
&lt;p&gt;7)数据库通过NFS进行共享&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;先科(zhuang)普(bi)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们登录FTP有三种方式，匿名登录、本地用户登录和虚拟用户登录。&lt;/p&gt;
    
    </summary>
    
    
      <category term="vsftp" scheme="https://zhusas.github.io/tags/vsftp/"/>
    
  </entry>
  
  <entry>
    <title>建立samba共享</title>
    <link href="https://zhusas.github.io/2018/08/06/%E5%BB%BA%E7%AB%8Bsamba%E5%85%B1%E4%BA%AB/"/>
    <id>https://zhusas.github.io/2018/08/06/建立samba共享/</id>
    <published>2018-08-06T06:06:00.000Z</published>
    <updated>2018-08-06T06:07:34.810Z</updated>
    
    <content type="html"><![CDATA[<p>数据目录为 /data     </p><p><strong>1）共享名为shared，工作组为whmall</strong></p><p>vim /etc/samba/smb.conf <a id="more"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">修改</span><br><span class="line">workgroup = MYGROUP</span><br><span class="line">为</span><br><span class="line">workgroup = whmall</span><br><span class="line"></span><br><span class="line">修改</span><br><span class="line">passdb backend = tdbsam</span><br><span class="line">为</span><br><span class="line">    passdb backend = smbpasswd</span><br><span class="line">    smb passwd file = /etc/samba/smbpasswd</span><br></pre></td></tr></table></figure><p><strong>2)添加组develop，添加用户gentoo,centos和ubuntu，其中gentoo和centos以develop为附加组，ubuntu不属于develop组；密码均为用户名</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 samba]<span class="comment"># groupadd develop</span></span><br><span class="line">[root@CentOS7 samba]<span class="comment"># useradd -G develop gentoo</span></span><br><span class="line">[root@CentOS7 samba]<span class="comment"># useradd -G develop centos</span></span><br><span class="line">[root@CentOS7 samba]<span class="comment"># useradd ubuntu</span></span><br><span class="line">[root@CentOS7 samba]<span class="comment">#  echo "gentoo"|  passwd --stdin gentoo</span></span><br><span class="line">更改用户 gentoo 的密码 。</span><br><span class="line">passwd：所有的身份验证令牌已经成功更新。</span><br><span class="line">[root@CentOS7 samba]<span class="comment"># echo "centos"|  passwd --stdin centos</span></span><br><span class="line">更改用户 centos 的密码 。</span><br><span class="line">passwd：所有的身份验证令牌已经成功更新。</span><br><span class="line">[root@CentOS7 samba]<span class="comment"># echo "ubuntu"|  passwd --stdin ubuntu</span></span><br></pre></td></tr></table></figure><p><strong>3)添加samba用户gentoo,centos和ubuntu，密码均为“111111”</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 samba]<span class="comment">#  smbpasswd -a gentoo</span></span><br><span class="line">New SMB password:</span><br><span class="line">Retype new SMB password:</span><br><span class="line">startsmbfilepwent_internal: file /etc/samba/smbpasswd did not exist. File successfully created.</span><br><span class="line">Added user gentoo.</span><br><span class="line">[root@CentOS7 samba]<span class="comment">#  smbpasswd -a centos</span></span><br><span class="line">New SMB password:</span><br><span class="line">Retype new SMB password:</span><br><span class="line">Added user centos.</span><br><span class="line">[root@CentOS7 samba]<span class="comment">#  smbpasswd -a ubuntu</span></span><br><span class="line">New SMB password:</span><br><span class="line">Retype new SMB password:</span><br><span class="line">Added user ubuntu.</span><br><span class="line">[root@CentOS7 samba]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><strong>4)此samba共享shared仅允许develop组具有写权限，其他用户只能以只读方式访问</strong></p><p>vim smb.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">末尾添加</span><br><span class="line">[shared]</span><br><span class="line">comment = whmall.com</span><br><span class="line">path = /data</span><br><span class="line">guest = yes </span><br><span class="line">writable = no</span><br><span class="line">write list = +develop</span><br></pre></td></tr></table></figure><p><strong>5)此samba共享服务仅允许来自于172.16.0.0/16网络的主机访问； </strong></p><p>vim smb.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">添加 </span><br><span class="line">hosts allow = 172.16.0.0/16</span><br></pre></td></tr></table></figure><p>启动samba服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 samba]<span class="comment"># systemctl start smb.service</span></span><br><span class="line">[root@CentOS7 samba]<span class="comment"># systemctl status smb.service</span></span><br><span class="line">● smb.service - Samba SMB Daemon</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/smb.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since 四 2017-03-23 14:39:18 CST; 5s ago</span><br><span class="line"> Main PID: 101560 (smbd)</span><br><span class="line">   Status: <span class="string">"smbd: ready to serve connections..."</span></span><br><span class="line">   CGroup: /system.slice/smb.service</span><br><span class="line">           ├─101560 /usr/sbin/smbd</span><br><span class="line">           ├─101561 /usr/sbin/smbd</span><br><span class="line">           ├─101562 /usr/sbin/smbd</span><br><span class="line">           └─101563 /usr/sbin/smbd</span><br><span class="line"></span><br><span class="line">3月 23 14:39:18 CentOS7 systemd[1]: Starting Samba SMB Daemon...</span><br><span class="line">3月 23 14:39:18 CentOS7 smbd[101557]: [2017/03/23 14:39:18.773050,  0] .....)</span><br><span class="line">3月 23 14:39:18 CentOS7 smbd[101557]:   Unknown parameter encountered: <span class="string">"g..."</span></span><br><span class="line">3月 23 14:39:18 CentOS7 smbd[101557]: [2017/03/23 14:39:18.773117,  0] .....)</span><br><span class="line">3月 23 14:39:18 CentOS7 smbd[101557]:   Ignoring unknown parameter <span class="string">"guest"</span></span><br><span class="line">3月 23 14:39:18 CentOS7 systemd[1]: smb.service: Supervising process 101...s.</span><br><span class="line">3月 23 14:39:18 CentOS7 smbd[101560]: [2017/03/23 14:39:18.787425,  0] .....)</span><br><span class="line">3月 23 14:39:18 CentOS7 smbd[101560]:   STATUS=daemon <span class="string">'smbd'</span> finished sta...s</span><br><span class="line">3月 23 14:39:18 CentOS7 systemd[1]: Started Samba SMB Daemon.</span><br><span class="line">Hint: Some lines were ellipsized, use -l to show <span class="keyword">in</span> full.</span><br></pre></td></tr></table></figure><p><strong>PS： CentOS7最好关闭防火墙，还有SELinux</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7 ~]<span class="comment"># systemctl list-unit-files |grep fire</span></span><br><span class="line">firewalld.service                             enabled </span><br><span class="line">[root@CentOS7 ~]<span class="comment"># systemctl stop firewalld.service </span></span><br><span class="line">[root@CentOS7 ~]<span class="comment"># systemctl disable firewalld.service </span></span><br><span class="line">Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.</span><br><span class="line">Removed symlink /etc/systemd/system/basic.target.wants/firewalld.service.</span><br></pre></td></tr></table></figure><p><strong>亲测OK，有图有真相</strong></p><p>PS:这里我把hosts allow = 172.16.0.0/16  改为了hosts allow = 192.168.0.0/24</p><p>workgroup 改为WORKGROUP</p><p>这样就看到了，欧耶~</p><p><img src="http://i.imgur.com/F4LHTsz.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;数据目录为 /data     &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1）共享名为shared，工作组为whmall&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;vim /etc/samba/smb.conf&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://zhusas.github.io/tags/linux/"/>
    
      <category term="samba" scheme="https://zhusas.github.io/tags/samba/"/>
    
  </entry>
  
  <entry>
    <title>php编译成httpd模块形式和php以fpm工作为独立守护进程的方式来支持httpd详细过程</title>
    <link href="https://zhusas.github.io/2018/08/06/php%E7%BC%96%E8%AF%91%E6%88%90httpd%E6%A8%A1%E5%9D%97%E5%BD%A2%E5%BC%8F%E5%92%8Cphp%E4%BB%A5fpm%E5%B7%A5%E4%BD%9C%E4%B8%BA%E7%8B%AC%E7%AB%8B%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%96%B9%E5%BC%8F%E6%9D%A5%E6%94%AF%E6%8C%81httpd%E8%AF%A6%E7%BB%86%E8%BF%87%E7%A8%8B/"/>
    <id>https://zhusas.github.io/2018/08/06/php编译成httpd模块形式和php以fpm工作为独立守护进程的方式来支持httpd详细过程/</id>
    <published>2018-08-06T05:55:00.000Z</published>
    <updated>2018-08-06T05:57:19.977Z</updated>
    
    <content type="html"><![CDATA[<p><strong>php编译成httpd模块形式</strong>   <a id="more"></a></p><p>略。。。。。。</p><p><strong>php以fpm工作为独立守护进程的方式来支持httpd</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">./configure –prefix=/opt/php5-fpm \</span><br><span class="line">–with-mysql=mysqlnd \</span><br><span class="line">–with-openssl \</span><br><span class="line">–with-mysqli=mysqlnd \</span><br><span class="line">–enable-mbstring \</span><br><span class="line">–with-freetype-dir \</span><br><span class="line">–with-jpeg-dir \ </span><br><span class="line">–with-png-dir \</span><br><span class="line">–with-zlib \</span><br><span class="line">–with-libxml-dir=/usr \</span><br><span class="line">–enable-xml \</span><br><span class="line">–enable-sockets \</span><br><span class="line">–enable-fpm \</span><br><span class="line">–with-mcrypt \</span><br><span class="line">–with-config-file-path=/opt/php5-fpm/conf \</span><br><span class="line">–with-config-file-scan-dir=/opt/php5-fpm/conf.d \</span><br><span class="line">–with-bz2</span><br></pre></td></tr></table></figure><p>添加了–enable-fpm选项 ，这是重点啊，各位记住。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>拷贝配置文件至/opt/php5-fpm/conf目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp php.ini-production /etc/php.ini</span><br></pre></td></tr></table></figure><p>拷贝php-fpm配置文件，并同时取消pid选项的注释</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/<span class="built_in">local</span>/php5/etc/php-fpm.conf.default  /usr/<span class="built_in">local</span>/php5/etc/php-fpm.conf</span><br><span class="line">vim /usr/<span class="built_in">local</span>/php5/etc/php-fpm.conf</span><br><span class="line">pid = /usr/<span class="built_in">local</span>/php5/var/run/php-fpm.pid</span><br></pre></td></tr></table></figure><p><strong>添加服务脚本</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#进入源码目录，拷贝开机启动服务文件</span></span><br><span class="line">cp init.d.php-fpm /etc/rc.d/init.d/php-fp</span><br><span class="line"></span><br><span class="line"><span class="comment">#加上执行属性</span></span><br><span class="line">chmod +x /etc/rc.d/init.d/php-fpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#加入到开机启动服务</span></span><br><span class="line">chkconfig –add php-fpm</span><br></pre></td></tr></table></figure><p><strong>启动php-fpm</strong></p><p> service php-fpm start</p><p><strong>配置httpd</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># vim /etc/httpd24/httpd.conf</span><br><span class="line"></span><br><span class="line">#启用这两个模块:</span><br><span class="line"></span><br><span class="line">LoadModule proxy_module modules/mod_proxy.so</span><br><span class="line"></span><br><span class="line">LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so</span><br></pre></td></tr></table></figure><p><strong>添加文件类型</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#添加文件类型</span></span><br><span class="line">AddType application/x-httpd-php .php</span><br><span class="line">AddType application/x-httpd-php-source .phps</span><br><span class="line"></span><br><span class="line">添加php文件的访问通过fpm</span><br><span class="line">ProxyRequests Off</span><br><span class="line">ProxyPassMatch ^/(.*.php)$ fcgi://127.0.0.1:9000/usr/<span class="built_in">local</span>/apache24/htdocs/<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">找到 DirectoryIndex index.html</span><br><span class="line">改为</span><br><span class="line">DirectoryIndex index.php index.html</span><br></pre></td></tr></table></figure><p><strong>编辑php测试页并开启httpd进行测试</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/apache24/htdocs/</span><br><span class="line"></span><br><span class="line">vim index.php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;h1&gt;phpfpmtest&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">    phpinfo();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost htdocs]# apachectl start</span><br><span class="line"></span><br><span class="line">AH00558: httpd: Could not reliably determine the server&apos;s fully qualified domain name, using localhost.</span><br><span class="line"></span><br><span class="line">localdomain. Set the &apos;ServerName&apos; directive globally to suppress this</span><br><span class="line"></span><br><span class="line">[root@localhost htdocs]# ss -tnls     </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">State       Recv-Q Send-Q                   Local Address:Port                     Peer Address:Port</span><br><span class="line"></span><br><span class="line">LISTEN      0      128                                 :::80                                 :::*     </span><br><span class="line"></span><br><span class="line">LISTEN      0      128                                 :::22                                 :::*     </span><br><span class="line"></span><br><span class="line">LISTEN      0      128                                  *:22                                  *:*     </span><br><span class="line"></span><br><span class="line">LISTEN      0      100                                ::1:25                                 :::*     </span><br><span class="line"></span><br><span class="line">LISTEN      0      100                          127.0.0.1:25                                  *:*     </span><br><span class="line"></span><br><span class="line">LISTEN      0      128                          127.0.0.1:6010                                *:*     </span><br><span class="line"></span><br><span class="line">LISTEN      0      128                                ::1:6010                               :::*     </span><br><span class="line"></span><br><span class="line">LISTEN      0      128                          127.0.0.1:6011                                *:*     </span><br><span class="line"></span><br><span class="line">LISTEN      0      128                                ::1:6011                               :::*     </span><br><span class="line"></span><br><span class="line">LISTEN      0      128                          127.0.0.1:9000                                *:*</span><br></pre></td></tr></table></figure><p>此时的Server API为FPM/FastCGI</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;php编译成httpd模块形式&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="apache" scheme="https://zhusas.github.io/tags/apache/"/>
    
      <category term="php" scheme="https://zhusas.github.io/tags/php/"/>
    
      <category term="fpm" scheme="https://zhusas.github.io/tags/fpm/"/>
    
  </entry>
  
  <entry>
    <title>自签证书使用户可以通过https访问站点</title>
    <link href="https://zhusas.github.io/2018/08/06/%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6%E4%BD%BF%E7%94%A8%E6%88%B7%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87https%E8%AE%BF%E9%97%AE%E7%AB%99%E7%82%B9/"/>
    <id>https://zhusas.github.io/2018/08/06/自签证书使用户可以通过https访问站点/</id>
    <published>2018-08-06T05:51:00.000Z</published>
    <updated>2018-08-06T05:54:21.703Z</updated>
    
    <content type="html"><![CDATA[<p><strong>生成私钥</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@lampw pki]<span class="comment"># (umask 077; openssl genrsa -out /etc/pki/ca-trust/cakey.pem 8192)</span></span><br><span class="line">Generating RSA private key, 8192 bit long modulus</span><br><span class="line">...................................................................................................................++</span><br><span class="line">........................................................................................................................................................................................................................................................++</span><br><span class="line">e is 65537 (0x10001)</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>生成自签证书</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@lampw pki]<span class="comment"># openssl req -new -x509 -key /etc/pki/ca-trust/cakey.pem -out /etc/pki/ca-trust/cacert.pem -days 3655</span></span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter <span class="string">'.'</span>, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [AU]:CN  </span><br><span class="line">State or Province Name (full name) [Some-State]:HA</span><br><span class="line">Locality Name (eg, city) []:ZZ</span><br><span class="line">Organization Name (eg, company) [Internet Widgits Pty Ltd]:Tmall</span><br><span class="line">Organizational Unit Name (eg, section) []:Tmall</span><br><span class="line">Common Name (e.g. server FQDN or YOUR name) []:www2.stuX.com</span><br><span class="line">Email Address []:admin@stuX.com</span><br><span class="line">[root@lampw pki]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><strong>为CA提供所需的目录及文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@lampw pki]<span class="comment"># mkdir  -pv  /etc/pki/CA/&#123;certs,crl,newcerts&#125;</span></span><br><span class="line">mkdir: created directory `/etc/pki/CA<span class="string">'</span></span><br><span class="line"><span class="string">mkdir: created directory `/etc/pki/CA/certs'</span></span><br><span class="line">mkdir: created directory `/etc/pki/CA/crl<span class="string">'</span></span><br><span class="line"><span class="string">mkdir: created directory `/etc/pki/CA/newcerts'</span></span><br><span class="line">[root@lampw pki]<span class="comment"># touch  /etc/pki/CA/&#123;serial,index.txt&#125;</span></span><br><span class="line">[root@lampw pki]<span class="comment"># echo  01 &gt; /etc/pki/CA/serial</span></span><br><span class="line">[root@lampw pki]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><strong>用到证书的主机生成私钥</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@lampw pki]<span class="comment"># mkdir  -pv  /etc/pki/CA/&#123;certs,crl,newcerts&#125;</span></span><br><span class="line">mkdir: created directory `/etc/pki/CA<span class="string">'</span></span><br><span class="line"><span class="string">mkdir: created directory `/etc/pki/CA/certs'</span></span><br><span class="line">mkdir: created directory `/etc/pki/CA/crl<span class="string">'</span></span><br><span class="line"><span class="string">mkdir: created directory `/etc/pki/CA/newcerts'</span></span><br><span class="line">[root@lampw pki]<span class="comment"># touch  /etc/pki/CA/&#123;serial,index.txt&#125;</span></span><br><span class="line">[root@lampw pki]<span class="comment"># echo  01 &gt; /etc/pki/CA/serial</span></span><br><span class="line">[root@lampw pki]<span class="comment">#  mkdir -pv /opt/apache24/ssl</span></span><br><span class="line">mkdir: created directory `/opt/apache24/ssl<span class="string">'</span></span><br><span class="line"><span class="string">[root@lampw pki]# cd /opt/apache24/ssl</span></span><br><span class="line"><span class="string">[root@lampw ssl]# (umask  077; openssl  genrsa -out  /opt/apache24/ssl/httpd.key 8192)</span></span><br><span class="line"><span class="string">Generating RSA private key, 8192 bit long modulus</span></span><br><span class="line"><span class="string">.............................................................................................................++</span></span><br><span class="line"><span class="string">....................................................++</span></span><br><span class="line"><span class="string">e is 65537 (0x10001)</span></span><br><span class="line"><span class="string">[root@lampw ssl]#</span></span><br></pre></td></tr></table></figure><p><strong>生成证书签署请求</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@lampw ssl]<span class="comment"># openssl  req  -new  -key  /opt/apache24/ssl/httpd.key  -out /opt/apache24/ssl/httpd.csr  -days  365</span></span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter <span class="string">'.'</span>, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [AU]:CN</span><br><span class="line">State or Province Name (full name) [Some-State]:HA</span><br><span class="line">Locality Name (eg, city) []:ZZ</span><br><span class="line">Organization Name (eg, company) [Internet Widgits Pty Ltd]:Tmall</span><br><span class="line">Organizational Unit Name (eg, section) []:Tmall</span><br><span class="line">Common Name (e.g. server FQDN or YOUR name) []:www2.stuX.com</span><br><span class="line">Email Address []:admin@stuX.com</span><br><span class="line"></span><br><span class="line">Please enter the following <span class="string">'extra'</span> attributes</span><br><span class="line">to be sent with your certificate request</span><br><span class="line">A challenge password []:</span><br><span class="line">An optional company name []:</span><br></pre></td></tr></table></figure><p><strong>将请求通过可靠方式发送给CA主机，这次是在同一台机器，我就略过，如果是生产环境，估计就是要发给可信的证书签署机构</strong></p><p>1、在CA主机上签署证书</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ssl]<span class="comment"># openssl ca  -in  /etc/httpd/ssl/httpd.csr  -out  /etc/pki/CA/certs/httpd.crt  -days  365</span></span><br><span class="line">Using configuration from /etc/pki/tls/openssl.cnf</span><br><span class="line">Check that the request matches the signature</span><br><span class="line">Signature ok</span><br><span class="line">Certificate Details:</span><br><span class="line">        Serial Number: 1 (0x1)</span><br><span class="line">        Validity</span><br><span class="line">            Not Before: Mar 22 03:49:48 2017 GMT</span><br><span class="line">            Not After : Mar 22 03:49:48 2018 GMT</span><br><span class="line">        Subject:</span><br><span class="line">            countryName               = CN</span><br><span class="line">            stateOrProvinceName       = HA</span><br><span class="line">            organizationName          = Tmall</span><br><span class="line">            organizationalUnitName    = ops</span><br><span class="line">            commonName                = www2.stuX.com</span><br><span class="line">            emailAddress              = admin@stuX.com</span><br><span class="line">        X509v3 extensions:</span><br><span class="line">            X509v3 Basic Constraints: </span><br><span class="line">                CA:FALSE</span><br><span class="line">            Netscape Comment: </span><br><span class="line">                OpenSSL Generated Certificate</span><br><span class="line">            X509v3 Subject Key Identifier: </span><br><span class="line">                EC:C4:48:10:BE:BD:1D:D2:48:38:17:B7:FD:0D:57:DE:51:B1:8F:64</span><br><span class="line">            X509v3 Authority Key Identifier: </span><br><span class="line">                keyid:ED:42:A1:59:88:A2:45:0A:F2:64:46:A6:BA:C9:7A:5D:E3:9C:FB:AE</span><br><span class="line"></span><br><span class="line">Certificate is to be certified until Mar 22 03:49:48 2018 GMT (365 days)</span><br><span class="line">Sign the certificate? [y/n]:y</span><br><span class="line"></span><br><span class="line">    1 out of 1 certificate requests certified, commit? [y/n]y</span><br><span class="line"></span><br><span class="line">    Write out database with 1 new entries</span><br><span class="line"></span><br><span class="line">    Data Base Updated</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@centos ssl]<span class="comment"># ls</span></span><br><span class="line">httpd.crt  httpd.csr  httpd.key</span><br></pre></td></tr></table></figure><p>​   </p><p>2、修改配置文件提供ssl服务</p><p>开启主配置文件的ssl调用，删除www2在httpd-vhosts中的定义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">Include /etc/httpd24/extra/httpd-ssl.conf</span><br><span class="line"></span><br><span class="line">~]# vim /etc/httpd24/extra/httpd-ssl.conf</span><br><span class="line"></span><br><span class="line">[root@localhost httpd24]# cat extra/httpd-ssl.conf | grep -v &quot;^#&quot;</span><br><span class="line"></span><br><span class="line">Listen 443</span><br><span class="line"></span><br><span class="line">SSLPassPhraseDialog  builtin</span><br><span class="line"></span><br><span class="line">&lt;VirtualHost 192.168.150.136:443&gt;</span><br><span class="line"></span><br><span class="line">DocumentRoot &quot;/web/vhost/www2&quot;</span><br><span class="line"></span><br><span class="line">ServerName www2.stuX.com:443</span><br><span class="line"></span><br><span class="line">ServerAdmin you@example.com</span><br><span class="line"></span><br><span class="line">ErrorLog &quot;/var/log/httpd/www2.err&quot;</span><br><span class="line"></span><br><span class="line">TransferLog &quot;/usr/local/apache24/logs/access_log&quot;</span><br><span class="line"></span><br><span class="line">SSLEngine on</span><br><span class="line"></span><br><span class="line">SSLCertificateFile &quot;/etc/httpd24/ssl/httpd.crt&quot;</span><br><span class="line"></span><br><span class="line">SSLCertificateKeyFile &quot;/etc/httpd24/ssl/httpd.key&quot;</span><br><span class="line"></span><br><span class="line">&lt;Directory &quot;/web/vhost/www2&quot;&gt;</span><br><span class="line"></span><br><span class="line"> AllowOverride None</span><br><span class="line"></span><br><span class="line">Options None</span><br><span class="line"></span><br><span class="line">Require all granted</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><p>主配置文件中启用ssl模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">~]<span class="comment"># vim /etc/httpd24/httpd.conf</span></span><br><span class="line"></span><br><span class="line">LoadModule ssl_module modules/mod_ssl.so</span><br></pre></td></tr></table></figure><p>重启httpd服务后测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">httpd24]<span class="comment"># ss -tnl | grep 443</span></span><br><span class="line"></span><br><span class="line">LISTEN     0      128                      :::443                     :::*</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;生成私钥&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@lampw pki]&lt;span class=&quot;comment&quot;&gt;# (umask 077; openssl genrsa -out /etc/pki/ca-trust/cakey.pem 8192)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Generating RSA private key, 8192 bit long modulus&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...................................................................................................................++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.......................................................................	.................................................................................................................................................................................++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e is 65537 (0x10001)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="CA" scheme="https://zhusas.github.io/tags/CA/"/>
    
      <category term="SSL" scheme="https://zhusas.github.io/tags/SSL/"/>
    
      <category term="https" scheme="https://zhusas.github.io/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>Apache所支持的处理模型及应用环境</title>
    <link href="https://zhusas.github.io/2018/08/06/Apache%E6%89%80%E6%94%AF%E6%8C%81%E7%9A%84%E5%A4%84%E7%90%86%E6%A8%A1%E5%9E%8B%E5%8F%8A%E5%BA%94%E7%94%A8%E7%8E%AF%E5%A2%83/"/>
    <id>https://zhusas.github.io/2018/08/06/Apache所支持的处理模型及应用环境/</id>
    <published>2018-08-06T05:48:00.000Z</published>
    <updated>2018-08-06T05:49:29.291Z</updated>
    
    <content type="html"><![CDATA[<p><strong>prefork：多进程模型，每个进程响应一个请求</strong></p><p>一个主进程：负责生成子进程及回收子进程；负责创建套接字；负责接收请求，并将其派发给某子进程进行处理；</p><p>n个子进程：每个子进程处理一个请求；</p><p>工作模型：会预先生成几个空闲进程，随时等待用于响应用户请求；最大空闲和最小空闲；<a id="more"></a></p><p><strong>worker：多进程多线程模型，每线程处理一个用户请求</strong></p><p>一个主进程：负责生成子进程；负责创建套接字；负责接收请求，并将其派发给某子进程进行处理；</p><p>多个子进程：每个子进程负责生成多个线程；</p><p>每个线程：负责响应用户请求；</p><p>并发响应数量：m*n</p><p>m：子进程数量</p><p>n：每个子进程所能创建的最大线程数量；</p><p><strong>event：事件驱动模型，多进程模型，每个进程响应多个请求</strong></p><p>一个主进程 ：负责生成子进程；负责创建套接字；负责接收请求，并将其派发给某子进程进行处理；</p><p>子进程：基于事件驱动机制直接响应多个请求；</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;prefork：多进程模型，每个进程响应一个请求&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一个主进程：负责生成子进程及回收子进程；负责创建套接字；负责接收请求，并将其派发给某子进程进行处理；&lt;/p&gt;
&lt;p&gt;n个子进程：每个子进程处理一个请求；&lt;/p&gt;
&lt;p&gt;工作模型：会预先生成几个空闲进程，随时等待用于响应用户请求；最大空闲和最小空闲；&lt;/p&gt;
    
    </summary>
    
    
      <category term="apache" scheme="https://zhusas.github.io/tags/apache/"/>
    
  </entry>
  
  <entry>
    <title>一次完整的http请求处理过程</title>
    <link href="https://zhusas.github.io/2018/08/06/%E4%B8%80%E6%AC%A1%E5%AE%8C%E6%95%B4%E7%9A%84http%E8%AF%B7%E6%B1%82%E5%A4%84%E7%90%86%E8%BF%87%E7%A8%8B/"/>
    <id>https://zhusas.github.io/2018/08/06/一次完整的http请求处理过程/</id>
    <published>2018-08-06T05:45:00.000Z</published>
    <updated>2018-08-06T05:46:10.699Z</updated>
    
    <content type="html"><![CDATA[<p><strong>简介</strong><br>一次完整的HTTP请求过程从TCP三次握手建立连接成功后开始,客户端按照指定的格式开始向服务端发送HTTP请求，服务端接收请求后，解析HTTP请求，处理完业务逻辑，最后返回一个HTTP的响应给客户端，HTTP的响应内容同样有标准的格式。无论是什么客户端或者是什么服务端，大家只要按照HTTP的协议标准来实现的话，那么它一定是通用的。<a id="more"></a></p><p><strong>1、客户端发起http请求阶段</strong></p><p>客户端在与服务端TCP三次握手建立连接成功后</p><p>开始按照指定的格式开始向服务端发送HTTP请求</p><p>HTTP请求格式主要有四部分组成，分别是：请求行、请求头、空行、消息体，每部分内容占一行，如下图：<br><img src="http://i.imgur.com/M391Xco.png" alt=""></p><p>下面我们来详解一下这个来自客户端的http请求</p><p>请求行：请求行是请求消息的第一行，由三部分组成：分别是请求方法（GET/POST/DELETE/PUT/HEAD）、请求资源的URI路径、HTTP的版本号</p><p>请求头：请求头中的信息有和缓存相关的头（Cache-Control，If-Modified-Since）、客户端身份信息（User-Agent）等等。</p><p>消息体：请求体是客户端发给服务端的请求数据，这部分数据并不是每个请求必须的。</p><p><strong>2、服务端接收客户端http请求阶段</strong></p><p>服务端接收来自于网络上的主机请求报文中对某特定资源的一次请求的过程</p><p><strong>3、服务端处理客户端http请求阶段</strong></p><p>对请求报文进行解析，获取客户端请求的资源及请求方法等相关信息；</p><p>根据请求报文的头信息，来确定请求合适，编码等</p><p><strong>4、服务端根据客户端http请求与访问自己本地资源</strong></p><p>获取请求报文中请求的资源，根据请求，从应用-》系统内核-》驱动-》资源存放媒介（硬盘、内存）获取客户端需要的信息</p><p><strong>5、服务端构建http响应报文</strong></p><p>服务器接收处理完请求后返回一个HTTP响应消息给客户端。HTTP响应消息的格式包括：状态行、响应头、空行、消息体。每部分内容占一行。</p><p><img src="http://i.imgur.com/yNpPuHB.png" alt=""></p><p>状态行：状态行位于相应消息的第一行，有HTTP协议版本号，状态码和状态说明三部分构成。</p><p>响应头：响应头是服务器传递给客户端用于说明服务器的一些信息，以及将来继续访问该资源时的策略。</p><p>响应体：响应体是服务端返回给客户端的HTML文本内容，或者其他格式的数据，比如：视频流、图片或者音频数据。</p><p><strong>6、服务端将http响应报文发送给客户端</strong></p><p>就是在已建立的tcp链接之上将相应报文及客户请求的数据从应用层，传输层、传输层、链路层、物理层层层打包头依次传输到客户端的物理层、链路层、传输层、应用层层层解包，最后客户端获得自己http请求的数据。</p><p><strong>7、记录日志</strong></p><p>服务端记录http请求访问日志</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;br&gt;一次完整的HTTP请求过程从TCP三次握手建立连接成功后开始,客户端按照指定的格式开始向服务端发送HTTP请求，服务端接收请求后，解析HTTP请求，处理完业务逻辑，最后返回一个HTTP的响应给客户端，HTTP的响应内容同样有标准的格式。无论是什么客户端或者是什么服务端，大家只要按照HTTP的协议标准来实现的话，那么它一定是通用的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="http" scheme="https://zhusas.github.io/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>自建DNS总结</title>
    <link href="https://zhusas.github.io/2018/08/05/%E8%87%AA%E5%BB%BADNS%E6%80%BB%E7%BB%93/"/>
    <id>https://zhusas.github.io/2018/08/05/自建DNS总结/</id>
    <published>2018-08-05T04:05:00.000Z</published>
    <updated>2018-08-05T04:07:01.997Z</updated>
    
    <content type="html"><![CDATA[<h3 id="DNS查询过程以及DNS服务器类别"><a href="#DNS查询过程以及DNS服务器类别" class="headerlink" title="DNS查询过程以及DNS服务器类别"></a>DNS查询过程以及DNS服务器类别</h3><p><strong>DNS查询过程</strong></p><p><img src="http://i.imgur.com/0jr6eA2.jpg" alt=""></p><p>1、在浏览器中输入<a href="http://www.qq.com域名，操作系统会先检查自己本地的hosts文件是否有这个网址映射关系，如果有，就先调用这个IP地址映射，完成域名解析。" target="_blank" rel="noopener">www.qq.com域名，操作系统会先检查自己本地的hosts文件是否有这个网址映射关系，如果有，就先调用这个IP地址映射，完成域名解析。</a> </p><p>2、如果hosts里没有这个域名的映射，则查找本地DNS解析器缓存，是否有这个网址映射关系，如果有，直接返回，完成域名解析。 </p><p>3、如果hosts与本地DNS解析器缓存都没有相应的网址映射关系，首先会找TCP/ip参数中设置的首选DNS服务器，在此我们叫它本地DNS服务器，此服务器收到查询时，如果要查询的域名，包含在本地配置区域资源中，则返回解析结果给客户机，完成域名解析，此解析具有权威性。 </p><p>4、如果要查询的域名，不由本地DNS服务器区域解析，但该服务器已缓存了此网址映射关系，则调用这个IP地址映射，完成域名解析，此解析不具有权威性。 <a id="more"></a></p><p>5、如果本地DNS服务器本地区域文件与缓存解析都失效，则根据本地DNS服务器的设置（是否设置转发器）进行查询，如果未用转发模式，本地DNS就把请求发至13台根DNS，根DNS服务器收到请求后会判断这个域名(.com)是谁来授权管理，并会返回一个负责该顶级域名服务器的一个IP。本地DNS服务器收到IP信息后，将会联系负责.com域的这台服务器。这台负责.com域的服务器收到请求后，如果自己无法解析，它就会找一个管理.com域的下一级DNS服务器地址(qq.com)给本地DNS服务器。当本地DNS服务器收到这个地址后，就会找qq.com域服务器，重复上面的动作，进行查询，直至找到<a href="http://www.qq.com主机。" target="_blank" rel="noopener">www.qq.com主机。</a> </p><p>6、如果用的是转发模式，此DNS服务器就会把请求转发至上一级DNS服务器，由上一级服务器进行解析，上一级服务器如果不能解析，或找根DNS或把转请求转至上上级，以此循环。不管是本地DNS服务器用是是转发，还是根提示，最后都是把结果返回给本地DNS服务器，由此DNS服务器再返回给客户机。</p><p>从客户端到本地DNS服务器是属于递归查询，而DNS服务器之间就是的交互查询就是迭代查询。</p><p><strong>DNS服务器类别</strong></p><p><strong>主域名服务器</strong></p><p>负责维护这个区域的所有域名信息，是特定的所有信息的权威信息源</p><p><strong>辅助域名服务器</strong></p><p>当主域名服务器出现故障、关闭或负载过重时，辅助域名服务器作为备份服务提供域名解析服务。辅助域名服务器中的区域文件内的数据是从另外一台域名服务器复制过来的，并不是直接输入的，也就是说这个区域文件只是一份副本，这里的数据是无法修改的。</p><p><strong>缓存服务器</strong></p><p>可运行域名服务器软件但没有域名数据库。它从某个远程服务器取得每次域名服务器查询的回答，一旦获取一个答案，就将它放在高速缓存中，以后查询相同的信息时就用它予以回答。缓存域名服务器不是权威性服务器，因为提供的所有信息都是间接信息。</p><p><strong>转发服务器</strong></p><p>负责所有非本地域名的本地查询。转发域名服务器接到查询请求时，在其缓存中查找，如找不到就把请求依次转发到指定的域名服务器，直到查询到结果为止，否则返回无法映射的结果。</p><h3 id="搭建一套DNS服务器，负责解析qq-com域名（自行设定主机名及IP）"><a href="#搭建一套DNS服务器，负责解析qq-com域名（自行设定主机名及IP）" class="headerlink" title="搭建一套DNS服务器，负责解析qq.com域名（自行设定主机名及IP）"></a>搭建一套DNS服务器，负责解析qq.com域名（自行设定主机名及IP）</h3><p>  (1)、能够对一些主机名进行正向解析和逆向解析；</p><p>  (2)、对子域cdn.qq.com进行子域授权，子域负责解析对应子域中的主机名；</p><p>  (3)、为了保证DNS服务系统的高可用性，请设计一套方案，并写出详细的实施过程</p><p>先来个架构图：</p><p><img src="http://i.imgur.com/OoFnAxj.jpg" alt=""></p><p><strong>先来安装bind</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@DNS2 ~]<span class="comment"># yum install bind</span></span><br><span class="line"></span><br><span class="line">[root@DNS2 ~]<span class="comment"># rpm -qa |grep bind  #查看安装的包和版本</span></span><br><span class="line"><span class="built_in">bind</span>-9.8.2-0.47.rc1.el6_8.4.x86_64</span><br><span class="line"><span class="built_in">bind</span>-libs-9.8.2-0.47.rc1.el6_8.4.x86_64</span><br><span class="line">PackageKit-device-rebind-0.5.8-26.el6.x86_64</span><br><span class="line"><span class="built_in">bind</span>-utils-9.8.2-0.47.rc1.el6_8.4.x86_64</span><br><span class="line">[root@DNS2 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>我是两台DNS测试机一起安装的，这里只列出其中同一台的安装操作命令。</p><p><strong>主配置文件之一：/etc/named.conf</strong></p><p><img src="http://i.imgur.com/wteqhjS.png" alt=""></p><p><strong>主配置文件之二：/etc/named.rfc1912.zones</strong></p><p>在文件尾部加上一下内容，这里就实现了能够对qq.com域名进行正向解析和逆向解析</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">zone <span class="string">"qq.com"</span> IN &#123;</span><br><span class="line">    <span class="built_in">type</span> master;</span><br><span class="line">    file <span class="string">"qq.com.zone"</span>;</span><br><span class="line">    allow-transter &#123; 192.168.0.244; &#125;; <span class="comment">#这里这行IP是从DNS服务器的IP</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone <span class="string">"0.168.192.in-addr.arpa"</span> IN &#123;</span><br><span class="line">    <span class="built_in">type</span> master</span><br><span class="line">    file <span class="string">"0.168.192.zone"</span>;</span><br><span class="line">    allow-transter &#123; 192.168.0.244; &#125;; <span class="comment">#这里这行IP是从DNS服务器的IP</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">[root@centos named]<span class="comment"># dig -x 192.168.0.116</span></span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.8.2rc1-RedHat-9.8.2-0.47.rc1.el6_8.4 &lt;&lt;&gt;&gt; -x 192.168.0.116</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 31489</span><br><span class="line">;; flags: qr aa rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 1, ADDITIONAL: 1</span><br><span class="line"></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;116.0.168.192.in-addr.arpa.INPTR</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">116.0.168.192.in-addr.arpa. 3600 INPTRwww.qq.com.</span><br><span class="line">116.0.168.192.in-addr.arpa. 3600 INPTRns1.qq.com.</span><br><span class="line"></span><br><span class="line">;; AUTHORITY SECTION:</span><br><span class="line">0.168.192.in-addr.arpa.3600INNSns1.qq.com.</span><br><span class="line"></span><br><span class="line">;; ADDITIONAL SECTION:</span><br><span class="line">ns1.qq.com.3600INA192.168.0.116</span><br><span class="line"></span><br><span class="line">;; Query time: 0 msec</span><br><span class="line">;; SERVER: 127.0.0.1<span class="comment">#53(127.0.0.1)</span></span><br><span class="line">;; WHEN: Tue Feb 28 13:50:38 2017</span><br><span class="line">;; MSG SIZE  rcvd: 120</span><br><span class="line"></span><br><span class="line">[root@centos named]<span class="comment"># dig -t A www.qq.com</span></span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.8.2rc1-RedHat-9.8.2-0.47.rc1.el6_8.4 &lt;&lt;&gt;&gt; -t A www.qq.com</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 31217</span><br><span class="line">;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 1, ADDITIONAL: 1</span><br><span class="line"></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;www.qq.com.INA</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">www.qq.com.3600INA192.168.0.116</span><br><span class="line"></span><br><span class="line">;; AUTHORITY SECTION:</span><br><span class="line">qq.com.3600INNSns1.qq.com.</span><br><span class="line"></span><br><span class="line">;; ADDITIONAL SECTION:</span><br><span class="line">ns1.qq.com.3600INA192.168.0.116</span><br><span class="line"></span><br><span class="line">;; Query time: 0 msec</span><br><span class="line">;; SERVER: 127.0.0.1<span class="comment">#53(127.0.0.1)</span></span><br><span class="line">;; WHEN: Tue Feb 28 13:51:04 2017</span><br><span class="line">;; MSG SIZE  rcvd: 82</span><br><span class="line"></span><br><span class="line">[root@centos named]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><strong>接下来配置对子域cdn.qq.com进行子域授权，子域负责解析对应子域中的主机名</strong>、</p><p>另外启动一台，安装bind</p><p>vim /etc/named.conf </p><p>vim /etc/named.rfc1912.zones  加入以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">zone <span class="string">"cdn.qq.com"</span> IN &#123;</span><br><span class="line">    <span class="built_in">type</span> master;</span><br><span class="line">    file <span class="string">"cdn.qq.com.zone"</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>​     </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">vim /var/named/cdn.qq.com.zone</span><br><span class="line"><span class="variable">$TTL</span> 3600</span><br><span class="line"><span class="variable">$ORIGIN</span> cdn.qq.com.</span><br><span class="line">@   IN  SOA ns1.cdn.qq.com. admin.qq.com. (</span><br><span class="line">        122701</span><br><span class="line">        2H</span><br><span class="line">        10M</span><br><span class="line">        1W</span><br><span class="line">        1D )</span><br><span class="line">    IN  NS  ns1</span><br><span class="line">ns1 IN  A   192.168.20.51</span><br><span class="line">www IN  A   192.168.20.199</span><br><span class="line"><span class="comment"># chown :named /var/named/cdn.qq.com.zone</span></span><br><span class="line"><span class="comment"># chmod 640 /var/named/cdn.qq.com.zone</span></span><br><span class="line">检查named配置文件及区域配置文件：</span><br><span class="line"><span class="comment"># named-checkconf</span></span><br><span class="line"><span class="comment"># named-checkzone cdn.qq.com /var/named/cdn.qq.com.zone</span></span><br><span class="line"><span class="comment"># systemctl start named.service</span></span><br><span class="line">在主域S1上的配置：</span><br><span class="line"><span class="comment"># vim /var/named/qq.com.zone</span></span><br><span class="line">cdn IN  NS  ns1.cdn</span><br><span class="line">ns1.cdn IN  A   192.168.20.51</span><br><span class="line"><span class="comment"># rndc reload</span></span><br><span class="line">测试解析：</span><br><span class="line"><span class="comment"># dig -t A www.cdn.qq.com</span></span><br></pre></td></tr></table></figure><h3 id="DNS服务器主从"><a href="#DNS服务器主从" class="headerlink" title="DNS服务器主从"></a>DNS服务器主从</h3><p>其实不难，就是很多细节要注意，我先贴配置文件吧</p><p>主机  192.168.0.116</p><p> /etc/named.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">options &#123;</span><br><span class="line">        listen-on port 53 &#123; 192.168.0.116; &#125;;</span><br><span class="line">//      listen-on-v6 port 53 &#123; ::1; &#125;;</span><br><span class="line">        directory       <span class="string">"/var/named"</span>;</span><br><span class="line">        dump-file       <span class="string">"/var/named/data/cache_dump.db"</span>;</span><br><span class="line">        statistics-file <span class="string">"/var/named/data/named_stats.txt"</span>;</span><br><span class="line">        memstatistics-file <span class="string">"/var/named/data/named_mem_stats.txt"</span>;</span><br><span class="line">        allow-query     &#123; any; &#125;;</span><br><span class="line">        recursion yes;</span><br><span class="line"></span><br><span class="line">        dnssec-enable no;</span><br><span class="line">        dnssec-validation no;</span><br><span class="line">        dnssec-lookaside no;</span><br><span class="line">        /* Path to ISC DLV key */</span><br><span class="line">//      bindkeys-file <span class="string">"/etc/named.iscdlv.key"</span>;</span><br><span class="line"></span><br><span class="line">//      managed-keys-directory <span class="string">"/var/named/dynamic"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">logging &#123;</span><br><span class="line">        channel default_debug &#123;</span><br><span class="line">                file <span class="string">"data/named.run"</span>;</span><br><span class="line">                severity dynamic;</span><br><span class="line">        &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone <span class="string">"."</span> IN &#123;</span><br><span class="line">        <span class="built_in">type</span> hint;</span><br><span class="line">        file <span class="string">"named.ca"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">include <span class="string">"/etc/named.rfc1912.zones"</span>;</span><br><span class="line">include <span class="string">"/etc/named.root.key"</span>;</span><br></pre></td></tr></table></figure><p>从机 192.168.0.117</p><p> /etc/named.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">options &#123;</span><br><span class="line">        listen-on port 53 &#123; 192.168.0.117; &#125;;</span><br><span class="line">//      listen-on-v6 port 53 &#123; ::1; &#125;;</span><br><span class="line">        directory       <span class="string">"/var/named"</span>;</span><br><span class="line">        dump-file       <span class="string">"/var/named/data/cache_dump.db"</span>;</span><br><span class="line">        statistics-file <span class="string">"/var/named/data/named_stats.txt"</span>;</span><br><span class="line">        memstatistics-file <span class="string">"/var/named/data/named_mem_stats.txt"</span>;</span><br><span class="line">        allow-query     &#123; any; &#125;;</span><br><span class="line">        recursion yes;</span><br><span class="line"></span><br><span class="line">        dnssec-enable no;</span><br><span class="line">        dnssec-validation no;</span><br><span class="line">        dnssec-lookaside no;</span><br><span class="line">        /* Path to ISC DLV key */</span><br><span class="line">//      bindkeys-file <span class="string">"/etc/named.iscdlv.key"</span>;</span><br><span class="line"></span><br><span class="line">//      managed-keys-directory <span class="string">"/var/named/dynamic"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">logging &#123;</span><br><span class="line">        channel default_debug &#123;</span><br><span class="line">                file <span class="string">"data/named.run"</span>;</span><br><span class="line">                severity dynamic;</span><br><span class="line">        &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone <span class="string">"."</span> IN &#123;</span><br><span class="line">        <span class="built_in">type</span> hint;</span><br><span class="line">        file <span class="string">"named.ca"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">include <span class="string">"/etc/named.rfc1912.zones"</span>;</span><br><span class="line">include <span class="string">"/etc/named.root.key"</span>;</span><br></pre></td></tr></table></figure><p>打开辅助DNS服务器的/etc/named.rfc1912.zones文件，添加两个区域记录，这两个记录是主DNS服务器配置文件里已经存在的记录，一个是正向解析记录，一个是反向解析记录</p><p>type: slave，表示此时DNS服务器为辅助DNS服务器，于是下面一行就要定义主DNS服务器的IP地址，辅助DNS服务器才知道去哪里同步数据。辅助DNS服务器的资源类型数据文件通常保存在slaves目录，只需定义一个名称，文件内容通常是自动生成。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">zone <span class="string">"qq.com"</span> IN &#123;</span><br><span class="line">    <span class="built_in">type</span> slave;</span><br><span class="line">    file <span class="string">"slaves/qq.com.zone"</span>;</span><br><span class="line">    masters &#123; 192.168.0.116; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone <span class="string">"0.168.192.in-addr.arpa"</span> IN &#123;</span><br><span class="line">    <span class="built_in">type</span> slave;</span><br><span class="line">    file <span class="string">"slaves/192.168.0.116.zone"</span>;</span><br><span class="line">    masters &#123; 192.168.0.116; &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>修改主DNS服务器的数据文件，添加一条辅助DNS服务器记录，给辅助DNS服务器授权。</p><p>正向解析文件<br>vim /var/named/qq.com.zone</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$TTL</span> 3600</span><br><span class="line"><span class="variable">$ORIGIN</span> qq.com.</span><br><span class="line">@   IN  SOA ns1.qq.com. admin.qq.com. (</span><br><span class="line">        2016122703</span><br><span class="line">        2H</span><br><span class="line">        10M</span><br><span class="line">        1W</span><br><span class="line">        1D )</span><br><span class="line">    IN  NS  ns1</span><br><span class="line">ns1 IN  A   192.168.0.116</span><br><span class="line">www IN  A   192.168.0.116</span><br><span class="line">cdn IN  NS  ns1.cdn</span><br><span class="line">ns1.cdn IN  A   192.168.0.117</span><br><span class="line">    IN  NS  ns2</span><br><span class="line">ns2 IN  A   192.168.0.117</span><br></pre></td></tr></table></figure><p>添加了一条NS记录，值为，ns2.qq.com.，对应的A记录也要增加一条，把IP地址指向对应的辅助DNS服务器的IP地址。修改完成后，记得要把序列号的值加1，用于通知辅助DNS服务器自动更新数据文件。</p><p>修改反向解析文件/var/named/0.168.192.zone</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$TTL</span> 3600</span><br><span class="line"><span class="variable">$ORIGIN</span> 0.168.192.in-addr.arpa.</span><br><span class="line">@       IN      SOA     ns1.qq.com.  nsadmin.qq.com. (</span><br><span class="line">        16122702</span><br><span class="line">        1H</span><br><span class="line">        10M</span><br><span class="line">        3D</span><br><span class="line">        12H )</span><br><span class="line">         IN      NS      ns1.qq.com.</span><br><span class="line">116      IN      PTR     ns1.qq.com.</span><br><span class="line">116      IN      PTR     www.qq.com.</span><br><span class="line">         IN      NS      ns2.qq.com.</span><br><span class="line">117      IN      PTR     ns2.qq.com.</span><br></pre></td></tr></table></figure><p>同样的也增加了两条记录，一条辅助DNS服务器的NS记录和对应的PTR记录。修改完成后记得所序列号的值加1，用于通知辅助DNS服务器自动更新数据文件。</p><p>最后两边都把named服务重启一下，再rndc reload 就好</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;DNS查询过程以及DNS服务器类别&quot;&gt;&lt;a href=&quot;#DNS查询过程以及DNS服务器类别&quot; class=&quot;headerlink&quot; title=&quot;DNS查询过程以及DNS服务器类别&quot;&gt;&lt;/a&gt;DNS查询过程以及DNS服务器类别&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;DNS查询过程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/0jr6eA2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;1、在浏览器中输入&lt;a href=&quot;http://www.qq.com域名，操作系统会先检查自己本地的hosts文件是否有这个网址映射关系，如果有，就先调用这个IP地址映射，完成域名解析。&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;www.qq.com域名，操作系统会先检查自己本地的hosts文件是否有这个网址映射关系，如果有，就先调用这个IP地址映射，完成域名解析。&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;2、如果hosts里没有这个域名的映射，则查找本地DNS解析器缓存，是否有这个网址映射关系，如果有，直接返回，完成域名解析。 &lt;/p&gt;
&lt;p&gt;3、如果hosts与本地DNS解析器缓存都没有相应的网址映射关系，首先会找TCP/ip参数中设置的首选DNS服务器，在此我们叫它本地DNS服务器，此服务器收到查询时，如果要查询的域名，包含在本地配置区域资源中，则返回解析结果给客户机，完成域名解析，此解析具有权威性。 &lt;/p&gt;
&lt;p&gt;4、如果要查询的域名，不由本地DNS服务器区域解析，但该服务器已缓存了此网址映射关系，则调用这个IP地址映射，完成域名解析，此解析不具有权威性。&lt;/p&gt;
    
    </summary>
    
    
      <category term="DNS" scheme="https://zhusas.github.io/tags/DNS/"/>
    
  </entry>
  
  <entry>
    <title>通讯加密及私有CA</title>
    <link href="https://zhusas.github.io/2018/08/05/%E9%80%9A%E8%AE%AF%E5%8A%A0%E5%AF%86%E5%8F%8A%E7%A7%81%E6%9C%89CA/"/>
    <id>https://zhusas.github.io/2018/08/05/通讯加密及私有CA/</id>
    <published>2018-08-05T03:37:00.000Z</published>
    <updated>2018-08-05T03:40:00.167Z</updated>
    
    <content type="html"><![CDATA[<h3 id="记一次加密通讯的过程"><a href="#记一次加密通讯的过程" class="headerlink" title="记一次加密通讯的过程"></a>记一次加密通讯的过程</h3><p><img src="http://i.imgur.com/OTwBgQW.jpg" alt=""></p><p><strong>第一阶段：ClientHello：</strong><br>支持的协议版本，比如tls 1.2；<br>客户端生成一个随机数，稍后用户生成“会话密钥”<br>支持的加密算法，比如AES、3DES、RSA；<br>支持的压缩算法；<br>    <a id="more"></a><br><strong>第二阶段：ServerHello</strong><br>确认使用的加密通信协议版本，比如tls 1.2；<br>服务器端生成一个随机数，稍后用于生成“会话密钥”<br>确认使用的加密方法；<br>服务器证书；</p><p><strong>第三阶段：</strong><br>验正服务器证书，在确认无误后取出其公钥；（发证机构、证书完整性、证书持有者、证书有效期、吊销列表）<br>发送以下信息给服务器端：<br>一个随机数；<br>编码变更通知，表示随后的信息都将用双方商定的加密方法和密钥发送；<br>客户端握手结束通知；</p><p><strong>第四阶段：</strong><br>收到客户端发来的第三个随机数pre-master-key后，计算生成本次会话所有到的“会话密钥”；<br>向客户端发送如下信息：<br>编码变更通知，表示随后的信息都将用双方商定的加密方法和密钥发送；<br>服务端握手结束通知；</p><p><strong>下图来个通俗版的(密匙版本，可能不是完全吻合)：</strong></p><p><img src="http://i.imgur.com/X16Cqj1.jpg" alt=""></p><h3 id="创建私有CA的过程，以及为客户端发来的证书请求进行颁发证书"><a href="#创建私有CA的过程，以及为客户端发来的证书请求进行颁发证书" class="headerlink" title="创建私有CA的过程，以及为客户端发来的证书请求进行颁发证书"></a>创建私有CA的过程，以及为客户端发来的证书请求进行颁发证书</h3><p><strong>创建私有CA的过程</strong></p><p><strong>第一步：生成私钥</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@centos private]<span class="comment"># (umask 077; openssl genrsa -out /etc/pki/CA/private/jerry_cakey.pam 8192)</span></span><br><span class="line">Generating RSA private key, 8192 bit long modulus</span><br><span class="linespan><br><span class="line">..........++</span><br><span class="line">e is 65537 (0x10001)</span><br><span class="line">[root@centos private]<span class="comment"># ll</span></span><br><span class="line">总用量 8</span><br><span class="line">-rw------- 1 root root 6363 2月  24 15:39 jerry_cakey.pam</span><br><span class="line">[root@centos private]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><strong>第二步：生成自签证书</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@centos private]<span class="comment"># openssl req -new -x509 -key /etc/pki/CA/private/cakey.pem -out /etc/pki/CA/cacert.pem -days 3655</span></span><br><span class="line"></span><br><span class="line">-new：生成新证书签署请求；</span><br><span class="line"></span><br><span class="line">-x509：生成自签格式证书，专用于创建私有CA时；</span><br><span class="line"></span><br><span class="line">-key：生成请求时用到的私有文件路径；</span><br><span class="line"></span><br><span class="line">-out：生成的请求文件路径；如果自签操作将直接生成签署过的证书；</span><br><span class="line"></span><br><span class="line">-days：证书的有效时长，单位是day；</span><br></pre></td></tr></table></figure><p>第三步：为CA提供所需的目录及文件；**</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@centos private]<span class="comment"># mkdir  -pv  /etc/pki/CA/&#123;certs,crl,newcerts&#125;</span></span><br><span class="line">[root@centos private]<span class="comment"># touch  /etc/pki/CA/&#123;serial,index.txt&#125;</span></span><br><span class="line">[root@centos private]<span class="comment"># echo  01 &gt; /etc/pki/CA/serial</span></span><br></pre></td></tr></table></figure><p><strong>为客户端发来的证书请求进行颁发证书</strong></p><p><strong>第一步:用到证书的主机生成私钥:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ~]<span class="comment"># cd /etc/httpd/ssl</span></span><br><span class="line">[root@centos ssl]<span class="comment"># (umask  077; openssl  genrsa -out  /etc/httpd/ssl/httpd.key  8192)</span></span><br><span class="line">Generating RSA private key, 8192 bit long modulus</span><br><span class="line">......................................................................................................................................................................................................................................................................++</span><br><span class="line">......................................................................................................................................................................................++</span><br><span class="line">e is 65537 (0x10001)</span><br><span class="line">[root@centos ssl]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><strong>第二步:生成证书签署请求</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ssl]<span class="comment">#  openssl  req  -new  -key  /etc/httpd/ssl/httpd.key  -out /etc/httpd/ssl/httpd.csr  -days  365</span></span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter <span class="string">'.'</span>, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [XX]:CN</span><br><span class="line">State or Province Name (full name) []:Hubei</span><br><span class="line">Locality Name (eg, city) [Default City]:Wuhan</span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:wanghuakeji</span><br><span class="line">Organizational Unit Name (eg, section) []:Ops</span><br><span class="line">Common Name (eg, your name or your server<span class="string">'s hostname) []:whmall.com</span></span><br><span class="line"><span class="string">Email Address []:caadmin@whmall.com</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Please enter the following '</span>extra<span class="string">' attributes</span></span><br><span class="line"><span class="string">to be sent with your certificate request</span></span><br><span class="line"><span class="string">A challenge password []:qweasdzxc</span></span><br><span class="line"><span class="string">An optional company name []:            </span></span><br><span class="line"><span class="string">[root@centos ssl]#</span></span><br></pre></td></tr></table></figure><p><strong>第三步:将请求通过可靠方式发送给CA主机</strong></p><p>两台主机就用scp，我这里是都在一台虚拟机上就用cp命令，过于简单，就不贴过程了</p><p><strong>第四步：在CA主机上签署证书</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ssl]<span class="comment"># openssl ca  -in  /etc/httpd/ssl/httpd.csr  -out  /etc/pki/CA/certs/httpd.crt  -days  365</span></span><br><span class="line">Using configuration from /etc/pki/tls/openssl.cnf</span><br><span class="line">Check that the request matches the signature</span><br><span class="line">Signature ok</span><br><span class="line">Certificate Details:</span><br><span class="line">        Serial Number: 1 (0x1)</span><br><span class="line">        Validity</span><br><span class="line">            Not Before: Feb 24 09:08:16 2017 GMT</span><br><span class="line">            Not After : Feb 24 09:08:16 2018 GMT</span><br><span class="line">        Subject:</span><br><span class="line">            countryName               = CN</span><br><span class="line">            stateOrProvinceName       = Hubei</span><br><span class="line">            organizationName          = FBI</span><br><span class="line">            organizationalUnitName    = Ops</span><br><span class="line">            commonName                = xxx.com</span><br><span class="line">            emailAddress              = caadmin@xxx.com</span><br><span class="line">        X509v3 extensions:</span><br><span class="line">            X509v3 Basic Constraints: </span><br><span class="line">                CA:FALSE</span><br><span class="line">            Netscape Comment: </span><br><span class="line">                OpenSSL Generated Certificate</span><br><span class="line">            X509v3 Subject Key Identifier: </span><br><span class="line">                D9:4A:37:A2:3E:C4:0D:B8:DF:BF:97:D2:DF:6F:21:6D:B5:56:E1:47</span><br><span class="line">            X509v3 Authority Key Identifier: </span><br><span class="line">                keyid:07:17:C7:46:2F:05:5C:12:D3:10:65:DE:58:83:36:A3:A9:0D:02:17</span><br><span class="line"></span><br><span class="line">Certificate is to be certified until Feb 24 09:08:16 2018 GMT (365 days)</span><br><span class="line">Sign the certificate? [y/n]:y</span><br><span class="line">1 out of 1 certificate requests certified, commit? [y/n]y</span><br><span class="line">Write out database with 1 new entries</span><br><span class="line">Data Base Updated</span><br><span class="line">[root@centos ssl]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>​    </p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;记一次加密通讯的过程&quot;&gt;&lt;a href=&quot;#记一次加密通讯的过程&quot; class=&quot;headerlink&quot; title=&quot;记一次加密通讯的过程&quot;&gt;&lt;/a&gt;记一次加密通讯的过程&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/OTwBgQW.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一阶段：ClientHello：&lt;/strong&gt;&lt;br&gt;支持的协议版本，比如tls 1.2；&lt;br&gt;客户端生成一个随机数，稍后用户生成“会话密钥”&lt;br&gt;支持的加密算法，比如AES、3DES、RSA；&lt;br&gt;支持的压缩算法；&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="CA" scheme="https://zhusas.github.io/tags/CA/"/>
    
      <category term="SSL" scheme="https://zhusas.github.io/tags/SSL/"/>
    
  </entry>
  
  <entry>
    <title>脚本写到手抽筋</title>
    <link href="https://zhusas.github.io/2018/08/05/%E8%84%9A%E6%9C%AC%E5%86%99%E5%88%B0%E6%89%8B%E6%8A%BD%E7%AD%8B/"/>
    <id>https://zhusas.github.io/2018/08/05/脚本写到手抽筋/</id>
    <published>2018-08-05T03:12:00.000Z</published>
    <updated>2018-08-05T03:13:52.635Z</updated>
    
    <content type="html"><![CDATA[<h3 id="为运行于虚拟机上的CentOS-6添加一块新硬件，提供两个主分区"><a href="#为运行于虚拟机上的CentOS-6添加一块新硬件，提供两个主分区" class="headerlink" title="为运行于虚拟机上的CentOS 6添加一块新硬件，提供两个主分区"></a>为运行于虚拟机上的CentOS 6添加一块新硬件，提供两个主分区</h3><p>  (1) 为硬盘新建两个主分区；并为其安装grub；<br>  (2) 为硬盘的第一个主分区提供内核和ramdisk文件； 为第二个分区提供rootfs；<br>  (3) 为rootfs提供bash、ls、cat程序及所依赖的库文件；<br>  (4) 为grub提供配置文件；<br>  (5) 将新的硬盘设置为第一启动项并能够正常启动目标主机；<a id="more"></a></p><p><strong>为硬盘新建两个主分区</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ~]<span class="comment"># fdisk -l  #先来看看磁盘情况啊，你不看，一上来直接搞，小心搞出事情！！</span></span><br><span class="line"></span><br><span class="line">Disk /dev/sda: 171.8 GB, 171798691840 bytes</span><br><span class="line">255 heads, 63 sectors/track, 20886 cylinders</span><br><span class="line">Units = cylinders of 16065 * 512 = 8225280 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk identifier: 0x00098b32</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sda1   *           1          64      512000   83  Linux</span><br><span class="line">Partition 1 does not end on cylinder boundary.</span><br><span class="line">/dev/sda2              64       20887   167259136   8e  Linux LVM</span><br><span class="line"></span><br><span class="line">Disk /dev/sdb: 42.9 GB, 42949672960 bytes</span><br><span class="line">255 heads, 63 sectors/track, 5221 cylinders</span><br><span class="line">Units = cylinders of 16065 * 512 = 8225280 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk identifier: 0x00000000</span><br><span class="line"></span><br><span class="line">Disk /dev/mapper/vg_centos-lv_root: 170.2 GB, 170196467712 bytes</span><br><span class="line">255 heads, 63 sectors/track, 20691 cylinders</span><br><span class="line">Units = cylinders of 16065 * 512 = 8225280 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk identifier: 0x00000000</span><br><span class="line"></span><br><span class="line">Disk /dev/mapper/vg_centos-lv_swap: 1073 MB, 1073741824 bytes</span><br><span class="line">255 heads, 63 sectors/track, 130 cylinders</span><br><span class="line">Units = cylinders of 16065 * 512 = 8225280 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk identifier: 0x00000000</span><br></pre></td></tr></table></figure><p>​    </p><p>不错不错，看到sdb了， 分的40G</p><p><strong>开始分区</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ~]<span class="comment"># fdisk /dev/sdb</span></span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p</span><br><span class="line"></span><br><span class="line">Disk /dev/sdb: 42.9 GB, 42949672960 bytes</span><br><span class="line">255 heads, 63 sectors/track, 5221 cylinders</span><br><span class="line">Units = cylinders of 16065 * 512 = 8225280 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk identifier: 0x86662f67</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line">Command action</span><br><span class="line">   e   extended</span><br><span class="line">   p   primary partition (1-4)</span><br><span class="line">p</span><br><span class="line">Partition number (1-4): 1</span><br><span class="line">First cylinder (1-5221, default 1): </span><br><span class="line">Using default value 1</span><br><span class="line">Last cylinder, +cylinders or +size&#123;K,M,G&#125; (1-5221, default 5221): +20G</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p</span><br><span class="line"></span><br><span class="line">Disk /dev/sdb: 42.9 GB, 42949672960 bytes</span><br><span class="line">255 heads, 63 sectors/track, 5221 cylinders</span><br><span class="line">Units = cylinders of 16065 * 512 = 8225280 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk identifier: 0x86662f67</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1               1        2612    20980858+  83  Linux</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line">Command action</span><br><span class="line">   e   extended</span><br><span class="line">   p   primary partition (1-4)</span><br><span class="line">p</span><br><span class="line">Partition number (1-4): 2</span><br><span class="line">First cylinder (2613-5221, default 2613): </span><br><span class="line">Using default value 2613</span><br><span class="line">Last cylinder, +cylinders or +size&#123;K,M,G&#125; (2613-5221, default 5221): </span><br><span class="line">Using default value 5221</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p</span><br><span class="line"></span><br><span class="line">Disk /dev/sdb: 42.9 GB, 42949672960 bytes</span><br><span class="line">255 heads, 63 sectors/track, 5221 cylinders</span><br><span class="line">Units = cylinders of 16065 * 512 = 8225280 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk identifier: 0x86662f67</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1               1        2612    20980858+  83  Linux</span><br><span class="line">/dev/sdb2            2613        5221    20956792+  83  Linux</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w</span><br><span class="line">The partition table has been altered!</span><br></pre></td></tr></table></figure><p><strong>分区完了就开始格式化了啊</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ~]<span class="comment"># mkfs.ext4 /dev/sdb1</span></span><br><span class="line">mke2fs 1.41.12 (17-May-2010)</span><br><span class="line">文件系统标签=</span><br><span class="line">操作系统:Linux</span><br><span class="line">块大小=4096 (<span class="built_in">log</span>=2)</span><br><span class="line">分块大小=4096 (<span class="built_in">log</span>=2)</span><br><span class="line">Stride=0 blocks, Stripe width=0 blocks</span><br><span class="line">1313760 inodes, 5245214 blocks</span><br><span class="line">262260 blocks (5.00%) reserved <span class="keyword">for</span> the super user</span><br><span class="line">第一个数据块=0</span><br><span class="line">Maximum filesystem blocks=4294967296</span><br><span class="line">161 block groups</span><br><span class="line">32768 blocks per group, 32768 fragments per group</span><br><span class="line">8160 inodes per group</span><br><span class="line">Superblock backups stored on blocks: </span><br><span class="line">32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, </span><br><span class="line">4096000</span><br><span class="line"></span><br><span class="line">正在写入inode表: 完成                            </span><br><span class="line">Creating journal (32768 blocks): 完成</span><br><span class="line">Writing superblocks and filesystem accounting information: 完成</span><br><span class="line"></span><br><span class="line">This filesystem will be automatically checked every 21 mounts or</span><br><span class="line">180 days, whichever comes first.  Use tune2fs -c or -i to override.</span><br><span class="line">[root@centos ~]<span class="comment"># mkfs.ext4 /dev/sdb2</span></span><br><span class="line">mke2fs 1.41.12 (17-May-2010)</span><br><span class="line">文件系统标签=</span><br><span class="line">操作系统:Linux</span><br><span class="line">块大小=4096 (<span class="built_in">log</span>=2)</span><br><span class="line">分块大小=4096 (<span class="built_in">log</span>=2)</span><br><span class="line">Stride=0 blocks, Stripe width=0 blocks</span><br><span class="line">1310720 inodes, 5239198 blocks</span><br><span class="line">261959 blocks (5.00%) reserved <span class="keyword">for</span> the super user</span><br><span class="line">第一个数据块=0</span><br><span class="line">Maximum filesystem blocks=4294967296</span><br><span class="line">160 block groups</span><br><span class="line">32768 blocks per group, 32768 fragments per group</span><br><span class="line">8192 inodes per group</span><br><span class="line">Superblock backups stored on blocks: </span><br><span class="line">32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, </span><br><span class="line">4096000</span><br><span class="line"></span><br><span class="line">正在写入inode表: 完成                            </span><br><span class="line">Creating journal (32768 blocks): 完成</span><br><span class="line">Writing superblocks and filesystem accounting information: 完成</span><br><span class="line"></span><br><span class="line">This filesystem will be automatically checked every 26 mounts or</span><br><span class="line">180 days, whichever comes first.  Use tune2fs -c or -i to override.</span><br></pre></td></tr></table></figure><p><strong>挂载分区sdb1到/mnt/boot下</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos mnt]<span class="comment">#mkdir boot</span></span><br><span class="line">[root@centos mnt]<span class="comment">#mount /dev/sdb1 /mnt/boot</span></span><br></pre></td></tr></table></figure><p><strong>安装grub</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@centos mnt]<span class="comment"># grub-install --root-de</span></span><br><span class="line">[root@centos mnt]<span class="comment"># grub-install --root-directory=/mnt  /dev/sdb</span></span><br><span class="line">Probing devices to guess BIOS drives. This may take a long time.</span><br><span class="line">/dev/mapper/vg_centos-lv_root does not have any corresponding BIOS drive.</span><br><span class="line">[root@centos mnt]<span class="comment"># ll</span></span><br><span class="line">总用量 8</span><br><span class="line">drwxr-xr-x 3 root root 4096 2月  20 10:09 boot</span><br><span class="line">drwxr-xr-x 2 root root 4096 10月 18 10:41 hgfs</span><br><span class="line">[root@centos mnt]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><strong>复制内核及ramdisk文件到sdb1上</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos mnt]<span class="comment"># cp /boot/vmlinuz-2.6.32-642.13.1.el6.x86_64 /mnt/boot/vmlinuz</span></span><br><span class="line">[root@centos mnt]<span class="comment"># cp /boot/initramfs-2.6.32-642.13.1.el6.x86_64.img /mnt/boot/initramfs.img</span></span><br></pre></td></tr></table></figure><p><strong>在/mnt/boot/grub目录下编辑新建grub.conf文件</strong></p><p>   内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">default=0</span><br><span class="line">timeout=5</span><br><span class="line">title CentOS6(<span class="built_in">test</span>)</span><br><span class="line">root (hd0,0)</span><br><span class="line">kernel /vmlinuz ro root=/dev/sda2 selinux=0 init=/bin/bash</span><br><span class="line">initrd /initramfs.img</span><br></pre></td></tr></table></figure><p><strong>挂载分区/dev/sdb2到/mnt/sysroot下</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /mnt/sysroot</span><br><span class="line">mount /dev/sdb2 /mnt/sysroot/</span><br></pre></td></tr></table></figure><p><strong>建立FHS</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@centos sysroot]<span class="comment">#  mkdir -pv /mnt/sysroot/&#123;bin,dev,etc/&#123;rc.d/init.d,sysconfig/network-scripts&#125;,lib/modules,lib64,proc,sbin,sys,tmp,usr/local/&#123;bin,sbin&#125;,var/&#123;lock,log,run&#125;&#125;</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/bin"</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/dev"</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/etc"</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/etc/rc.d"</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/etc/rc.d/init.d"</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/etc/sysconfig"</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/etc/sysconfig/network-scripts"</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/lib"</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/lib/modules"</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/lib64"</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/proc"</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/sbin"</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/sys"</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/tmp"</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/usr"</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/usr/local"</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/usr/local/bin"</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/usr/local/sbin"</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/var"</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/var/lock"</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/var/log"</span></span><br><span class="line">mkdir: 已创建目录 <span class="string">"/mnt/sysroot/var/run"</span></span><br><span class="line">[root@centos sysroot]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><strong>拷贝bash、ls、cat程序及其依赖库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos sysroot]<span class="comment"># cp /bin/&#123;bash,ls,cat&#125; /mnt/sysroot/bin</span></span><br><span class="line"></span><br><span class="line">[root@centos bin]<span class="comment"># cp `ldd /bin/&#123;bash,ls,cat&#125;  |grep -oe "/lib.*[[:space:]]"|sort -u` /mnt/sysroot/lib64/</span></span><br><span class="line"></span><br><span class="line">[root@centos bin]<span class="comment"># chroot /mnt/sysroot</span></span><br></pre></td></tr></table></figure><p><strong>chroot先测试一下</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@centos bin]<span class="comment"># chroot /mnt/sysroot</span></span><br><span class="line">bash-4.1<span class="comment"># ls</span></span><br><span class="line">bin  dev  etc  lib  lib64  proc  sbin  sys  tmp  usr  var</span><br><span class="line">bash-4.1<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">[root@centos bin]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>OK，接下来挂载到另外一台虚拟机上测试一下，亲测成功。</p><h3 id="制作一个kickstart文件以及一个引导镜像。"><a href="#制作一个kickstart文件以及一个引导镜像。" class="headerlink" title="制作一个kickstart文件以及一个引导镜像。"></a>制作一个kickstart文件以及一个引导镜像。</h3><p>思路</p><ol><li>找到一个已安装好的centos的ks文件，一般位于/root/anaconda-ks.cfg，修修改改，生成一个自定义的ks.cfg文件。</li><li>放到解压的原版IOS到某目录，添加ks文件。</li><li>修改光盘的isolinux.cfg文件，在 append 指令后附加 ks 设置。</li><li>再生成自定义的ISO文件。</li><li>最后用此ISO去安装启动一台裸虚拟机测试是否能自动安装。</li></ol><p><strong>找到一个已安装好的centos的ks文件，一般位于/root/anaconda-ks.cfg，修修改改，生成一个自定义的ks.cfg文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#platform=x86, AMD64, 或 Intel EM64T</span></span><br><span class="line"><span class="comment">#version=DEVEL</span></span><br><span class="line"><span class="comment"># Firewall configuration</span></span><br><span class="line">firewall --disabled</span><br><span class="line"><span class="comment"># Install OS instead of upgrade</span></span><br><span class="line">install</span><br><span class="line"><span class="comment"># Use CDROM installation media</span></span><br><span class="line">cdrom</span><br><span class="line"><span class="comment"># Root password</span></span><br><span class="line">rootpw --iscrypted <span class="variable">$1</span><span class="variable">$Qo3PJbQH</span><span class="variable">$GyTUtGgr1U</span>.th4KTIrvfT1</span><br><span class="line"><span class="comment"># System authorization information</span></span><br><span class="line">auth  --useshadow  --passalgo=sha512</span><br><span class="line"><span class="comment"># Use graphical install</span></span><br><span class="line">graphical</span><br><span class="line">firstboot --<span class="built_in">disable</span></span><br><span class="line"><span class="comment"># System keyboard</span></span><br><span class="line">keyboard us</span><br><span class="line"><span class="comment"># System language</span></span><br><span class="line">lang zh_CN</span><br><span class="line"><span class="comment"># SELinux configuration</span></span><br><span class="line">selinux --disabled</span><br><span class="line"><span class="comment"># Installation logging level</span></span><br><span class="line">logging --level=info</span><br><span class="line"></span><br><span class="line"><span class="comment"># System timezone</span></span><br><span class="line">timezone  Asia/Shanghai</span><br><span class="line"><span class="comment"># Network information</span></span><br><span class="line">network  --bootproto=dhcp --device=eth1 --onboot=on</span><br><span class="line"><span class="comment"># System bootloader configuration</span></span><br><span class="line">bootloader --location=mbr</span><br><span class="line"><span class="comment"># Partition clearing information</span></span><br><span class="line">clearpart --all --initlabel </span><br><span class="line"><span class="comment"># Disk partitioning information</span></span><br><span class="line">part /boot --fstype=<span class="string">"ext4"</span> --size=500</span><br><span class="line">part swap --fstype=<span class="string">"swap"</span> --size=2000</span><br><span class="line">part / --fstype=<span class="string">"ext4"</span> --grow --size=1</span><br><span class="line"></span><br><span class="line">%packages</span><br><span class="line">@base</span><br><span class="line">@compat-libraries</span><br><span class="line">@graphical-admin-tools</span><br><span class="line">@legacy-unix</span><br><span class="line">@network-tools</span><br><span class="line">@xfce-desktop</span><br><span class="line">NetworkManager-openswan</span><br><span class="line">arptables_jf</span><br><span class="line">arpwatch</span><br><span class="line">audit-viewer</span><br><span class="line">authd</span><br><span class="line">cups-lpd</span><br><span class="line">dbench</span><br><span class="line">dropwatch</span><br><span class="line">dump</span><br><span class="line">ebtables</span><br><span class="line">ettercap</span><br><span class="line">finger</span><br><span class="line">finger-server</span><br><span class="line">firstaidkit-gui</span><br><span class="line">ipset</span><br><span class="line">iptraf</span><br><span class="line">iptstate</span><br><span class="line">krb5-appl-servers</span><br><span class="line">ksh</span><br><span class="line">lksctp-tools</span><br><span class="line">lshw-gui</span><br><span class="line">mipv6-daemon</span><br><span class="line">mksh</span><br><span class="line">mrtg</span><br><span class="line">ncompress</span><br><span class="line">netlabel_tools</span><br><span class="line">nmap</span><br><span class="line">openvpn</span><br><span class="line">policycoreutils-gui</span><br><span class="line">qstat</span><br><span class="line">rsh</span><br><span class="line">rsh-server</span><br><span class="line">rusers</span><br><span class="line">rusers-server</span><br><span class="line">rwho</span><br><span class="line">sabayon</span><br><span class="line">setroubleshoot</span><br><span class="line">stunnel</span><br><span class="line">system-config-kickstart</span><br><span class="line">system-config-lvm</span><br><span class="line">talk</span><br><span class="line">talk-server</span><br><span class="line">tcp_wrappers</span><br><span class="line">telnet</span><br><span class="line">telnet-server</span><br><span class="line">tftp</span><br><span class="line">vtun</span><br><span class="line">wireshark</span><br><span class="line">wireshark-gnome</span><br><span class="line">yumex</span><br><span class="line">-cpuspeed</span><br><span class="line">-irqbalance</span><br><span class="line">-mdadm</span><br><span class="line"></span><br><span class="line">%end</span><br></pre></td></tr></table></figure><p><strong>放到解压的原版IOS到某目录，添加ks文件</strong></p><p>我这里是用软碟通直接提取修改，所以就省略了</p><p>还有一个坑就是ks配置文件里面用cdrom参数制定本地光盘安装会报错，建议用url方式。这个坑踩得我受伤了，就不写了。</p><h3 id="应用服务服务脚本"><a href="#应用服务服务脚本" class="headerlink" title="应用服务服务脚本"></a>应用服务服务脚本</h3><p>  (1) 能接受四个参数：start, stop, restart, status<br>   start: 输出“starting 脚本名 finished.”<br>   …</p><p>  (2) 其它任意参数，均报错退出；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span>  <span class="keyword">in</span></span><br><span class="line">    start)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"starting <span class="variable">$0</span> finished"</span></span><br><span class="line">          ;;</span><br><span class="line"></span><br><span class="line">    stop)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"stopping <span class="variable">$0</span> finished"</span></span><br><span class="line">          ;;</span><br><span class="line"></span><br><span class="line">    restart)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"restarting <span class="variable">$0</span> finished"</span></span><br><span class="line">          ;;</span><br><span class="line"></span><br><span class="line">    status)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">" <span class="variable">$0</span> status"</span>                               </span><br><span class="line">          ;;</span><br><span class="line"></span><br><span class="line">        *)</span><br><span class="line">           <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$prog</span> &#123;start|stop|restart|status&#125;"</span></span><br><span class="line">           <span class="built_in">exit</span> 1</span><br><span class="line">          ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><p>​    </p><h3 id="判断给定的用户是否登录了当前系统"><a href="#判断给定的用户是否登录了当前系统" class="headerlink" title="判断给定的用户是否登录了当前系统"></a>判断给定的用户是否登录了当前系统</h3><p>  (1) 如果登录了，则显示用户登录，脚本终止；</p><p>  (2) 每3秒钟，查看一次用户是否登录；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">until who | grep <span class="string">"^logstash\&gt;"</span> &amp;&gt; /dev/null; <span class="keyword">do</span></span><br><span class="line">    sleep 3</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="显示用户选定要查看的信息；"><a href="#显示用户选定要查看的信息；" class="headerlink" title="显示用户选定要查看的信息；"></a>显示用户选定要查看的信息；</h3><p>   cpu) display cpu info</p><p>   mem) display memory info</p><p>   disk) display disk info</p><p>   quit) quit</p><p>   非此四项选择，则提示错误，并要求用户重新选择，只到其给出正确的选择为止；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">cat &lt;&lt; EOF</span><br><span class="line">Display information as following shown selection</span><br><span class="line">cpu) display cpu info</span><br><span class="line">mem) display memory info</span><br><span class="line">disk) display disk info</span><br><span class="line">quit) quit</span><br><span class="line">************************************************</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">read</span> -p <span class="string">"Please input your selection: "</span> selection</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$selection</span> <span class="keyword">in</span></span><br><span class="line">    cpu) </span><br><span class="line">        lscpu</span><br><span class="line">        ;;</span><br><span class="line">    mem)</span><br><span class="line">        free -m</span><br><span class="line">        ;;</span><br><span class="line">    disk) </span><br><span class="line">        fdisk -l /dev/vd[a-z]</span><br><span class="line">        ;;</span><br><span class="line">    quit)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Bye Bye"</span></span><br><span class="line">        <span class="built_in">exit</span> 0</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Please input valid selection"</span></span><br><span class="line">        ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="尝试用shell函数"><a href="#尝试用shell函数" class="headerlink" title="尝试用shell函数"></a>尝试用shell函数</h3><p>  (1) 用函数实现返回一个用户的UID和SHELL；用户名通过参数传递而来；</p><p>  (2) 提示用户输入一个用户名或输入“quit”退出；</p><p>  当输入的是用户名，则调用函数显示用户信息；</p><p>  当用户输入quit，则退出脚本；进一步地：显示键入的用户相关信息后，再次提醒输出用户名或quit: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">userInfo</span></span>() &#123;</span><br><span class="line">        <span class="built_in">local</span> userLine=$(grep <span class="variable">$1</span> /etc/passwd)</span><br><span class="line">        <span class="built_in">local</span> userSHELL=<span class="variable">$&#123;userLine##*:&#125;</span></span><br><span class="line">        <span class="built_in">local</span> userID=$(<span class="built_in">echo</span> <span class="variable">$userLine</span> | cut -f3 -d:)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$userSHELL</span> and <span class="variable">$userID</span>"</span></span><br><span class="line">        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">quit</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">"<span class="variable">$1</span>"</span> == <span class="string">"quit"</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Bye Bye"</span></span><br><span class="line">        <span class="built_in">exit</span> 2</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">read</span> -p <span class="string">"Please input your username or input 'quit': "</span> choice</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">"<span class="variable">$choice</span>"</span> == <span class="string">"quit"</span> ]; <span class="keyword">then</span></span><br><span class="line">        quit <span class="variable">$choice</span></span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> id <span class="variable">$choice</span> &gt;&amp; /dev/null; <span class="keyword">then</span></span><br><span class="line">        userInfo <span class="variable">$choice</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>​    </p><h3 id="完成如下功能（使用shell函数）"><a href="#完成如下功能（使用shell函数）" class="headerlink" title="完成如下功能（使用shell函数）"></a>完成如下功能（使用shell函数）</h3><p>   (1) 提示用户输入一个可执行命令的名字；获取此命令依赖的所有库文件；</p><p>   (2) 复制命令文件至/mnt/sysroot目录下的对应的rootfs的路径上，例如，如果复制的文件原路径是/usr/bin/useradd，则复制到/mnt/sysroot/usr/bin/目录中；</p><p>   (3) 复制此命令依赖的各库文件至/mnt/sysroot目录下的对应的rootfs的路径上；规则同上面命令相关的要求；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"Please input a command: "</span> cmd</span><br><span class="line"></span><br><span class="line">cmdPath=$(<span class="built_in">which</span> <span class="variable">$cmd</span> | grep bin)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">cpCmd</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">cp <span class="variable">$cmdPath</span> /mnt/sysroot<span class="variable">$cmdpath</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Copy <span class="variable">$cmdPath</span> to path /mnt/sysroot/"</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">cpFile</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">libFile=$(ldd <span class="variable">$cmdPath</span> | grep -o <span class="string">"/[^[:space:]]\&#123;1,\&#125;"</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$libFile</span>; <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">    cp <span class="variable">$lib</span> /mnt/sysroot<span class="variable">$cmdPath</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Copy <span class="variable">$libFile</span> to path/mnt/sysroot/<span class="variable">$cmdPath</span>"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cpCmd</span><br><span class="line"></span><br><span class="line">cpFile</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;为运行于虚拟机上的CentOS-6添加一块新硬件，提供两个主分区&quot;&gt;&lt;a href=&quot;#为运行于虚拟机上的CentOS-6添加一块新硬件，提供两个主分区&quot; class=&quot;headerlink&quot; title=&quot;为运行于虚拟机上的CentOS 6添加一块新硬件，提供两个主分区&quot;&gt;&lt;/a&gt;为运行于虚拟机上的CentOS 6添加一块新硬件，提供两个主分区&lt;/h3&gt;&lt;p&gt;  (1) 为硬盘新建两个主分区；并为其安装grub；&lt;br&gt;  (2) 为硬盘的第一个主分区提供内核和ramdisk文件； 为第二个分区提供rootfs；&lt;br&gt;  (3) 为rootfs提供bash、ls、cat程序及所依赖的库文件；&lt;br&gt;  (4) 为grub提供配置文件；&lt;br&gt;  (5) 将新的硬盘设置为第一启动项并能够正常启动目标主机；&lt;/p&gt;
    
    </summary>
    
    
      <category term="shell" scheme="https://zhusas.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>CentOS系统的启动流程</title>
    <link href="https://zhusas.github.io/2018/08/05/CentOS%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/"/>
    <id>https://zhusas.github.io/2018/08/05/CentOS系统的启动流程/</id>
    <published>2018-08-05T03:08:00.000Z</published>
    <updated>2018-08-05T03:10:27.436Z</updated>
    
    <content type="html"><![CDATA[<p>详细到每个过程系统做了哪些事情</p><a id="more"></a><p><img src="http://i.imgur.com/fCgoqDA.jpg" alt=""></p><p>启动过程 （PC架构）<br>   POST –&gt; Boot Sequence(BIOS) –&gt; Boot Loader (MBR)–&gt;GRUB—&gt; Kernel(ramdisk) –&gt; rootfs –&gt; switchroot –&gt; /sbin/init–&gt;(/etc/inittab, /etc/init/*.conf) –&gt; 设定默认运行级别&gt; 系统初始化脚本 –&gt; 关闭或启动对应级别下的服务 –&gt; 启动终端</p><p><strong>第一步：加电自检（POST）</strong></p><p>   系统加电之后，首先进行的硬件自检，一但通电后主板会自动读取ROM（只读）中的程序，进行加载，计算机会首先加载BIOS信息，BIOS信息是如此的重要，以至于计算机必须在最开始就找到它。检查各种硬件设备是否完整存在，如内存，硬盘，显示,IO设备等。如果有硬件故障的话将按两种情况理：对于严重故障(致命性故障)则停机，此时由于各种初始化操作还没完成，不能给出任何提示或信号；对于非严重故障则给出提示或声音报警信号，等待用户处理），如果没有故障，POST完成自己<br>的接力任务，将尾部工作交接给BIOS处理。</p><p><strong>第二步：系统引导过程Boot Sequence（BIOS）</strong></p><p>  POST 过程结束后，系统的控制权从 BISO 转交到 boot loader。Boot loader 一般存储在系统的硬盘上（传统的 BIOS/MBR 系统），这个时候机器不能获取外部的存储或者网络信息，一些重要的值（日期、时间、其他外部值）都是从CMOS里读取.</p><p>  POST（POST-power on self test)—&gt;ROM-&gt;CMOS(互补金属氧化物)-&gt;BIOS (Basic Input Output System，基础输入输出系统） </p><p>  BIOS（Basic Input/Output System）启动初始化硬件的工作，包括屏幕和键盘，内存检测，这个过程也被成为 POST（Power On Self Test），通过ROM加载自检程序，然后按照 CMOS RAM 中设置的启动设备查找顺序，来寻找可启动设备 。注：BIOS 程序嵌在主板的 ROM 芯片上的。</p><p><strong>第三步：启动加载器阶段Master Boot Loader(MBR)</strong></p><p> 硬盘上第0磁道第一个扇区被称为MBR，也就是Master Boot Record，即主引导记录，决定启动介质按照BIOS所设定的系统启动流程，根据引导次序(Boot Sequence)自上而下的寻找对应存储设备上操作系统的MBR。它的大小仅有512字节，但里面却存放了预启动信息、分区表信息。可分为两部分：</p><p>第一部分为引导（PRE-BOOT）区，占了 446个字节；</p><p>第二部分为分区表（PARTITION TABLE），共有64个字节，每个主分区占用16字节，记录硬盘的分区信息。（这就是为什么一块硬盘只能有4个主分区）分区表有效性标记会占用2字节。 </p><p>  预引导区的作用之一是找到标记为活动（ACTIVE）的分区，并将活动分区的引导区读入内存。剩余两个字节为结束标记。寻找 grub，读取配置文件/etc/grub.conf，决定默认启动项根据MBR所指引的活动分区上寻找系统分区中的 bootloader.在bootloader当中配置了所要引导操作系统的内核所在的位置，因此BIOS被载入内存以后，当它实现将控制权限转交给bootloader以后，bootloader接收整个系统的控制权限，而后根据用户的选择去读取相应操作系统中的内核，并将内核装载入内存的某个空间位置，解压缩，这时kernel就可以在内存中活动，并根据kernel本身功能在内存当中探索硬件并加载硬件驱动程序并完成内核初始化，bootloader会将控制权限转交给内核。 </p><p><strong>第四步：引导加载器阶段（GRUB加载器）</strong> </p><p>   对于GRUB来说，一个比较好的方面就是它包含了linux文件系统的支持。GRUB能够从ext2或者ext3文件系统中加载linux内核。一旦Bootloader的第一阶段已完成MBR（启动加载器阶段），并能找到实际的引导加载程序位置，第1阶段启动加载器加载引导程序到内存中开始第二阶段。GRUB引导加载器阶段它是通过将本来两阶段的boot loader转换成三个阶段的boot loader。</p><p>stage1个阶段 ：BIOS加载MBR里面的GRUB（属于第1阶段的文件），由于只有GRUB只占用446字节所以不能实现太多的功能，所以就有此阶段里面的文件来加载第1.5阶段的文件（/boot/grub下的文件）</p><p>stage1.5个阶段：这个阶段里面的就是加载识别文件系统的程序，来识别文件系统，不加载就无法识别文件系统，进而就找不到boot目录，由于GRUB是无法识别LVM，所以你不能把/boot分区设置为LVM，所以必须要把/boot单独分区    </p><p>stage2个阶段：这里面才是正在的开始寻找内核的过程，然后是启动内核</p><p>（当stage1.5的boot loader被加载并运行时，stage2 的boot loader才能被加载。）</p><p>   当stage2被加载时，GRUB能根据请求的情况显示一个可选内核的清单（在 /etc/grub.conf 中进行定义，同时还有几个软符号链接 /etc/grub/menu.lst 和 /etc/grub.conf)。你可以选择一个内核，修改其附加的内核参数。同时，你可以选择使用命令行的shell来对启动过程进行更深层次的手工控制。</p><p>GRUB的配置文件中的配置哪些信息</p><p> 在第二阶段boot loader加载到内存中后，就可以对文件系统进行查询了，同时，默认的内核镜像以及初始化内存盘镜像也被加载到内存中。</p><p>   根据grub设定的内核映像所在路径，系统读取内存映像，并进行解压缩操作。此时，屏幕一般会输出“Uncompressing Linux(解压内核中)”的提示。当解压缩内核完成后，屏幕输出“OK, booting the kernel(正在启动内核)”。</p><p><strong>第五步：加载kernel </strong></p><p>   GRUB把内核加载到内存后展开并运行，此时GRUB的任务已经完成，接下来内核将会接管并完成：</p><p>探测硬件—&gt;加载驱动—&gt;挂载根文件系统—&gt;切换至根文件系统（rootfs）—&gt;运行/sbin/init完成系统初始化</p><p>  内核一般都是压缩的，所以它的首要任务是解压缩，然后检查和分析系统的硬件并初始化内核里的硬件驱动程序。内核刚加载到内存的时候，文件系统还不能使用，它使用的是 Boot Loader 加载进内存的 initramfs。系统将解压后的内核放置在内存之中，并调用start_kernel()函数来启动一系列的初始化函数并初始化各种设备，完成Linux核心环境的建立。至此，Linux内核已经建立起来了，基于Linux的程序应该可以正常运行了。</p><p><strong>第六步：初始化initrd /etc/inittab</strong></p><p>  在核心加载完毕,进行完硬件侦测与驱动程序加载后,内核会启动第一个进程/sbin/init, init进程将会读取/etc/inittab，init进程是系统所有进程的起点，你可以把它比拟成系统所有进程的老祖宗，没有这个进程，系统中任何进程都不会启动。</p><p>  /etc/inittab最主要的功能就是准备软件运行的环境，包括系统的主机名称、网络配置、语系处理、文件系统格式及其他服务的启动等,而所有的动作都根据在/etc/inittab中的配置.将会执行/etc/inittab来设定系统运行的默认级别，</p><p>  init进程首先会读取/etc/inittab文件，根据inittab文件中的内容依次执行<br>  设定系统运行的默认级别（id:3:initdefault:）<br>  执行系统初始化脚本文件（si::sysinit:/etc/rc.d/rc.sysinit）<br>  执行在该运行级别下所启动或关闭对应的服务（l3:3:wait:/etc/rc.d/rc 3）<br>  启动6个虚拟终端</p><p>  0-6：7个级别的定义</p><p>  0：关机, shutdown</p><p>1：单用户模式(singleuser)，root用户，无须认证；维护模式；</p><p>2：多用户模式(multiuser)，会启动网络功能，但不会启动NFS；维护模式；</p><p>3：多用户模式(mutliuser)，完全功能模式；文本界面；</p><p>4：预留级别：目前无特别使用目的，但习惯以同3级别功能使用；</p><p>5：多用户模式(multi user)，完全功能模式，图形界面；</p><p>6：重启，reboot</p><p>许多程序需要开机启动。它们在Windows叫做”服务”（service），在Linux就叫做”守护进程”（daemon）。init进程的一大任务，就是去运行这些开机启动的程序。但是，不同的场合需要启动不同的程序，比如用作服务器时，需要启动Apache，用作桌面就不需要。</p><p>Linux允许为不同的场合，分配不同的开机启动程序，这就叫做”运行级别”（runlevel）。也就是说，启动时根据”运行级别”，确定要运行哪些程序。</p><p>要访问根文件系统必须要加载根文件系统所在的设备，而这时根文件系统又没有挂载，要挂载根文件系统有需要根文件系统的驱动程序，这是一个典型的先有鸡先有蛋的问题！为解决这个问题，GRUB在加载内核同时，也把initrd加载到内存中并运行.那么initrd又起到了什么作用哪？</p><p>initrd展开后的文件    </p><p>linux中/下的文件<br>       我们可以看到，其实initrd文件其实是一个虚拟的根文件系统，里面有bin、lib、lib64、sys、var、etc、sysroot、dev、proc、tmp等根目录，它的功能就是讲内核与真正的根建立联系，内核通过它加载根文件系统的驱动程序，然后以读写方式挂载根文件系统，至此，内核加载完成。</p><p><strong>第七步：运行/sbin/init，进行系统初始化</strong></p><p>   /sbin/init 最主要的功能就是准备软件运行的环境，包括系统的主机名称、网络配置、语系处理、文件系统格式及其他服务的启动等,而所有的动作都根据在/etc/inittab中的配置.init首先运行/etc/init/rcS.conf脚本</p><p><strong>第八步：启动系统服务/etc/rc.d/rc.sysinit</strong></p><p>可以看到，init进程通过执行/etc/rc.d/rcS.conf首先调用了/etc/rc.d/rc.sysinit，对系统做初始化设置，设置好整个系统环境。我们来看看这个脚本都是做了些什么哪？</p><p>   事实上init执行/etc/rc.d/rc.sysinit的初始化将会做很多设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">1、获得网络环境 </span><br><span class="line"></span><br><span class="line">2、挂载设备 </span><br><span class="line"></span><br><span class="line">3、开机启动画面Plymouth（取替了过往的 RHGB） </span><br><span class="line"></span><br><span class="line">4、判断是否启用SELinux </span><br><span class="line"></span><br><span class="line">5、显示于开机过程中的欢迎画面 </span><br><span class="line"></span><br><span class="line">6、初始化硬件 </span><br><span class="line"></span><br><span class="line">7、用户自定义模块的加载 </span><br><span class="line"></span><br><span class="line">8、配置内核的参数 </span><br><span class="line"></span><br><span class="line">9、设置主机名 </span><br><span class="line"></span><br><span class="line">10、同步存储器 </span><br><span class="line"></span><br><span class="line">11、设备映射器及相关的初始化 </span><br><span class="line"></span><br><span class="line">12、初始化软件磁盘阵列（RAID） </span><br><span class="line"></span><br><span class="line">13、初始化 LVM 的文件系统功能 </span><br><span class="line"></span><br><span class="line">14、检验磁盘文件系统（fsck） </span><br><span class="line"></span><br><span class="line">15、设置磁盘配额(quota) </span><br><span class="line"></span><br><span class="line">16、重新以可读写模式挂载系统磁盘 </span><br><span class="line"></span><br><span class="line">17、更新quota（非必要） </span><br><span class="line"></span><br><span class="line">18、启动系统虚拟随机数生成器 </span><br><span class="line"></span><br><span class="line">19、配置机器（非必要） </span><br><span class="line"></span><br><span class="line">20、清除开机过程当中的临时文件 </span><br><span class="line"></span><br><span class="line">21、创建ICE目录 </span><br><span class="line"></span><br><span class="line">22、启动交换分区（swap） </span><br><span class="line"></span><br><span class="line">23、将开机信息写入/var/log/dmesg文件中</span><br></pre></td></tr></table></figure><p><strong>第九步：启动配置文件/etc/rc.d/rc.n</strong></p><p>设定完系统默认运行级别以后，接着调用/etc/rc.d/rc脚本，/etc/rc.d, 里面存放了rc.local, rc.sysinit, init.d, rcX.d (X包括0-6对应相对runlevel).这个脚本接收默认运行级别参数后，依脚本设置启用或停止/etc/rc.d/rc[0-6].d/中相应的程序。</p><p>/etc/rc.d/rc3].d/下的脚本文件在系统初始化阶段，脚本名字以K开头的,表示STOP动作（关闭）,名字以S开头,表示Start动作（启动）,文件名K/S 后面的的数字代表优先级，名称中的数字表示执行次序（优先级）,数字越小表示越先执行，优先级越高</p><p><strong>第十步：用户自定义开机启动程序 (/etc/rc.d/rc.local)</strong></p><p>  系统根据runlevel启动完rcX.d中的脚本之后,会调用rc.local脚本,如果你有一个脚本命令不论在3和5都想开机启动,那么就添加于此,免去rc3.d和rc5.d分别增加启动脚本工作量.最后，将执行/etc/rc.d/rc.local脚本，可以根据自己的需求将一些执行命令或者脚本写到其中，当开机时就可以加载。</p><p><strong>第十一步：打印登录提示符</strong></p><p>   系统初始化完成后，init给出用户登录提示符（login）或者图形化登录界面，用户输入用户和密码登陆后，系统会为用户分配一个用户ID（uid）和组ID（gid），这两个ID是用户的身份标识，用于检测用户运行程序时的身份验证。登录成功后，整个系统启动流程运行完毕！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;详细到每个过程系统做了哪些事情&lt;/p&gt;
    
    </summary>
    
    
      <category term="CentOS" scheme="https://zhusas.github.io/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>脚本小练</title>
    <link href="https://zhusas.github.io/2018/08/05/%E8%84%9A%E6%9C%AC%E5%B0%8F%E7%BB%83/"/>
    <id>https://zhusas.github.io/2018/08/05/脚本小练/</id>
    <published>2018-08-05T02:49:00.000Z</published>
    <updated>2018-08-05T02:51:11.366Z</updated>
    
    <content type="html"><![CDATA[<p>1、判断当前系统上所有用户的shell是否为可登录shell（即用户的shell不是/sbin/nologin）；分别这两类用户的个数；通过字符串比较来实现；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#脚本内容</span></span><br><span class="line">[root@centos script]<span class="comment"># cat week9_title1.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#Author Jerry</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Display shell is nologin user's shell count </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"The shell is  nologin user count is <span class="variable">$(grep -o "nologin" /etc/passwd |wc -l)</span>"</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#Display shell not's nologin user's shell count </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"The shell not's nologin user count is <span class="variable">$(grep -v "nologin" /etc/passwd |wc -l)</span>"</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#测试脚本</span></span><br><span class="line">[root@centos script]<span class="comment"># bash week9_title1.sh </span></span><br><span class="line">The shell is  nologin user count is 25</span><br><span class="line">The shell not<span class="string">'s nologin user count is 7</span></span><br><span class="line"><span class="string">[root@centos script]#</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>2、写一个脚本</p><p>(1) 获取当前主机的主机名，保存于hostname变量中；</p><p>(2) 判断此变量的值是否为localhost，如果是，则将当前主机名修改为<a href="http://www.docker.com；" target="_blank" rel="noopener">www.docker.com；</a></p><p>(3) 否则，则显示当前主机名；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@centos script]<span class="comment"># cat week9_title2.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#Author Jerry</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">hostname=$(hostname)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$hostname</span> == <span class="string">"localhost"</span> ];<span class="keyword">then</span></span><br><span class="line">hostname www.docker.com</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"current hostname is:<span class="variable">$hostname</span>"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"current hostname is:<span class="variable">$hostname</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">[root@centos script]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>3、写一个脚本，完成如下功能</p><p>(1) 传递一个磁盘设备文件路径给脚本，判断此设备是否存在；</p><p>(2) 如果存在，则显示此设备上的所有分区信息；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@centos script]<span class="comment"># cat week9_title3.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#Author Jerry</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">[ <span class="variable">$#</span> -lt 1 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"please atleast input on"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -b <span class="variable">$1</span> ];<span class="keyword">then</span></span><br><span class="line">    fdisk -l <span class="variable">$1</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"nothing"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>​    </p><p>4、写一个脚本，完成如下功能, 脚本能够接受一个参数；</p><p>   (1) 如果参数1为quit，则显示退出脚本，并执行正常退出；</p><p>   (2) 如果参数1为yes，则显示继续执行脚本；</p><p>   (3) 否则，参数1为其它任意值，均执行非正常退出；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@centos script]<span class="comment"># bash week9_title4.sh </span></span><br><span class="line">please input one atleast</span><br><span class="line">error!!!!!</span><br><span class="line">[root@centos script]<span class="comment"># bash week9_title4.sh quit</span></span><br><span class="line"><span class="built_in">exit</span>....</span><br><span class="line">[root@centos script]<span class="comment"># bash week9_title4.sh yes</span></span><br><span class="line">go!go! go! </span><br><span class="line">[root@centos script]<span class="comment"># echo $?</span></span><br><span class="line">0</span><br><span class="line">[root@centos script]<span class="comment"># </span></span><br><span class="line">[root@centos script]<span class="comment"># cat week9_title4.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#Author Jerry</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">[ <span class="variable">$#</span> -eq 0 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"please input one atleast"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">yes)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"go!go! go! "</span></span><br><span class="line">;;</span><br><span class="line">    </span><br><span class="line">quit)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"exit...."</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">*)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"error!!!!!"</span></span><br><span class="line">    <span class="built_in">exit</span> 2</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">[root@centos script]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>5、写一个脚本，完成如下功能</p><p>   传递一个参数给脚本，此参数为gzip、bzip2或者xz三者之一；</p><p>   (1) 如果参数1的值为gzip，则使用tar和gzip归档压缩/etc目录至/backups目录中，并命名为/backups/etc-20160613.tar.gz；</p><p>   (2) 如果参数1的值为bzip2，则使用tar和bzip2归档压缩/etc目录至/backups目录中，并命名为/backups/etc-20160613.tar.bz2；</p><p>   (3) 如果参数1的值为xz，则使用tar和xz归档压缩/etc目录至/backups目录中，并命名为/backups/etc-20160613.tar.xz；</p><p>   (4) 其它任意值，则显示错误压缩工具，并执行非正常退出；</p><p>​    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@www /]<span class="comment"># cat /script/week9_title5.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$#</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line">       <span class="built_in">echo</span> <span class="string">"give me a argument,the argument is gzip bzip2 xz "</span></span><br><span class="line">       <span class="built_in">exit</span> 19</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    </span><br><span class="line">    mkdir /backups &amp;&gt; /dev/null</span><br><span class="line"></span><br><span class="line">       <span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">       gzip)</span><br><span class="line">        tar -zcvf  /backups/etc-`date +%Y%m%d`.tar.gz /etc</span><br><span class="line">        ;;</span><br><span class="line">       bzip2)</span><br><span class="line">        tar -jvf  /backups/etc-`date +%Y%m%d`.tar.bz2 /etc</span><br><span class="line">        ;;</span><br><span class="line">       xz)</span><br><span class="line">        tar -Jvf  /backups/etc-`date +%Y%m%d`.tar.xz /etc</span><br><span class="line">        ;;</span><br><span class="line">       *)</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"error!!!"</span></span><br><span class="line">         ;;</span><br><span class="line">       <span class="keyword">esac</span></span><br><span class="line">[root@www /]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>6、写一个脚本，接受一个路径参数：</p><p>   (1) 如果为普通文件，则说明其可被正常访问；</p><p>   (2) 如果是目录文件，则说明可对其使用cd命令；</p><p>   (3) 如果为符号链接文件，则说明是个访问路径；</p><p>   (4) 其它为无法判断；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@www script]<span class="comment"># cat week9_title6.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#Author Jerry</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Check whether the user is to script a path parameter</span></span><br><span class="line">[ <span class="variable">$#</span> -lt 1 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"Please give a path to the script parameters"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$1</span> ]; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"这是一个普通文件，可以被正常访问"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> [ -d <span class="variable">$1</span> ];<span class="keyword">then</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"这是一个目录文件，可以使用cd命令"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> [ -h <span class="variable">$1</span> ];<span class="keyword">then</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"这是一个符号链接文件，它是一个访问路径"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> [ ! -h <span class="variable">$1</span> ] &amp;&amp; [ ! -d <span class="variable">$1</span> ] &amp;&amp; [ ! -f <span class="variable">$1</span> ];<span class="keyword">then</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"这是什么鬼，不想跟你说话并向你扔了一只狗！！！"</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>7、写一个脚本，取得当前主机的主机名，判断</p><p>   (1) 如果主机名为空或为localhost，或为””(none)””，则将其命名为mail.magedu.com；</p><p>   (2) 否则，显示现有的主机名即可；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">hostname=$(hostname)</span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$hostname</span>"</span> -o <span class="string">"<span class="variable">$hostname</span>"</span> == <span class="string">"localhost"</span> -o  <span class="string">"<span class="variable">$hostname</span>"</span> == <span class="string">"none"</span> ];<span class="keyword">then</span></span><br><span class="line">    hostname mail.magedu.com</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$hostname</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>8、写一脚本，接受一个用户名为参数；</p><p>   (1) 如果用户的id号为0,则显示其为管理员；</p><p>   (2) 如果用户的id号大于0且小于500, 则显示其为系统用户；</p><p>   (3) 否则，则显示其为普通用户；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"input argu"</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">    userid=$(id -u)</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$userid</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"admin"</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$userid</span> -gt 0 -a <span class="variable">$userid</span> -lt 500 ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"system"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"user"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>10、写一个脚本，传递一个用户名参数给脚本；</p><p>   (1) 如果用户的id号大于等于500，且其默认shell为以sh结尾的字符串，则显示“a user can log system.”类的字符串；</p><p>   (2) 否则，则显示无法登录系统；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"input argu"</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">    userid=grep ^<span class="variable">$1</span> /etc/passwd | grep sh$ | cut -d: -f3</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$userid</span> -ge 500 ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">" a user can log system"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"nologin"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>11、写一个脚本，完成如下任务 ：</p><p>   (1) 按顺序分别复制/var/log目录下的每个直接文件或子目录至/tmp/test1-testn目录中；</p><p>   (2) 复制目录时，才使用cp -r命令；</p><p>   (3) 复制文件时使用cp命令；</p><p>   (4) 复制链接文件时使用cp -d命令；</p><p>   (5) 余下的所有类型，使用cp -a命令；”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">'ls /var/log'</span>;<span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ -d <span class="variable">$i</span> ];<span class="keyword">then</span></span><br><span class="line">        cp -r /var/<span class="built_in">log</span>/<span class="variable">$i</span> /tmp/<span class="built_in">test</span>/test1-testn/<span class="variable">$i</span></span><br><span class="line">    <span class="keyword">elif</span> [ -f <span class="variable">$i</span> ];<span class="keyword">then</span></span><br><span class="line">        cp /var/<span class="built_in">log</span>/<span class="variable">$i</span> /tmp/<span class="built_in">test</span>/test1-testn/<span class="variable">$i</span></span><br><span class="line">    <span class="keyword">elif</span> [ -L <span class="variable">$i</span> ];<span class="keyword">then</span></span><br><span class="line">        cp -d /var/<span class="built_in">log</span>/<span class="variable">$i</span> /tmp/<span class="built_in">test</span>/test1-testn/<span class="variable">$i</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cp -a /var/<span class="built_in">log</span>/<span class="variable">$i</span> /tpm/<span class="built_in">test</span>/test1-testn/<span class="variable">$i</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1、判断当前系统上所有用户的shell是否为可登录shell（即用户的shell不是/sbin/nologin）；分别这两类用户的个数；通过字符串比较来实现；&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#脚本内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@centos script]&lt;span class=&quot;comment&quot;&gt;# cat week9_title1.sh &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#Author Jerry&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#Display shell is nologin user&#39;s shell count &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;The shell is  nologin user count is &lt;span class=&quot;variable&quot;&gt;$(grep -o &quot;nologin&quot; /etc/passwd |wc -l)&lt;/span&gt;&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#Display shell not&#39;s nologin user&#39;s shell count &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;The shell not&#39;s nologin user count is &lt;span class=&quot;variable&quot;&gt;$(grep -v &quot;nologin&quot; /etc/passwd |wc -l)&lt;/span&gt;&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#测试脚本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@centos script]&lt;span class=&quot;comment&quot;&gt;# bash week9_title1.sh &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The shell is  nologin user count is 25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The shell not&lt;span class=&quot;string&quot;&gt;&#39;s nologin user count is 7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;[root@centos script]#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>OSI七层模型及脚本小工具</title>
    <link href="https://zhusas.github.io/2018/08/02/%E8%84%9A%E6%9C%AC%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    <id>https://zhusas.github.io/2018/08/02/脚本小工具/</id>
    <published>2018-08-02T09:33:00.000Z</published>
    <updated>2018-08-05T03:36:27.323Z</updated>
    
    <content type="html"><![CDATA[<h3 id="网桥、集线器、二层交换机、三层交换机、路由器的功能、使用场景与区别。"><a href="#网桥、集线器、二层交换机、三层交换机、路由器的功能、使用场景与区别。" class="headerlink" title="网桥、集线器、二层交换机、三层交换机、路由器的功能、使用场景与区别。"></a>网桥、集线器、二层交换机、三层交换机、路由器的功能、使用场景与区别。</h3><p>集线器是属于物理层的设备，可以理解为一根网线中间串接出了多个接口，这么多接口共享这一根网线的带宽，<br>因此这些接口上的设备在使得网络时就会出现冲突，或者‘道路’挤占的情况。（所有的设备在一个广播域，冲突域中），集线器现在很少使用了。</p><p>交换机、网桥都是数据链路层的设备，网桥的出现就是为了解决集线器多个接口共处于一个冲突域的问题，网桥具有2个接口，<br>且每个接口设备发送接收数据都是独立的互不影响（每个接口是一个冲突域）。现在这种设备不再使用。<br>交换机可以理解为是一个多接口的网桥，当然具备了网桥分割冲突的功能（每个接口是一个冲突域）。<br>但是交换机（2层交换机）所有接口都在一个广播域中。</p><p>路由器属于网络层设备，路由器不但可以隔离冲突域，同时也可以隔离广播。每个接口是一个冲突域，一个广播域。<br>路由器对于广播数据包不做转发。路由器根据3层地址（现用的IP地址）进行转发数据包到相应的接口。实现不同的IP网段互相通讯。</p><p>二层交换机属数据链路层设备，可以识别数据包中的MAC地址信息，根据MAC地址进行转发，并将这些MAC地址与对应的端口记录在自己内部的一个地址表中。<a id="more"></a></p><p>三层交换机就是具有部分路由器功能的交换机，三层交换机的最重要目的是加快大型局域网内部的数据交换，<br>所具有的路由功能也是为这目的服务的，能够做到一次路由，多次转发。对于数据包转发等规律性的过程由硬件高速实现，<br>而像路由信息更新、路由表维护、路由计算、路由确定等功能，由软件实现。三层交换技术就是二层交换技术+三层转发技术。<br>传统交换技术是在OSI网络标准模型第二层–数据链路层进行操作的，<br>而三层交换技术是在网络模型中的第三层实现了数据包的高速转发，既可实现网络路由功能，又可根据不同网络状况做到最优网络性能。</p><h3 id="IP地址的分类及子网掩码的表示形式及其作用"><a href="#IP地址的分类及子网掩码的表示形式及其作用" class="headerlink" title="IP地址的分类及子网掩码的表示形式及其作用"></a>IP地址的分类及子网掩码的表示形式及其作用</h3><p><strong>IP地址分类</strong></p><p>一般分类是指ipv4,<br>IP地址有5类，A类到E类，各用在不同类型的网络中。地址分类反映了网络的大小以及数据包是单播还是组播的。</p><p>A类到C类地址用于单点编址方法，但每一类代表着不同的网络大小。<br>A类地址（1.0.0.0-126.255.255.255）用于最大型的网络，该网络的节点数可达16,777,216个。</p><p>B类地址（128.0.0.0-191.255.255.25 5）用于中型网络，节点数可达65,536个。</p><p>C类地址（192.0.0.0-223.255.255.255）用于256个节点以下的小型网络的单点网络通信。</p><p>D类地址并不反映网络的大小，只是用于组播，用来指定所分配的接收组播的节点组，这个节点组由组播订阅成员组成。<br>D类地址的范围为224.0.0.0-239.255.255.255。</p><p>E类（240.0.0.0-255.255.255.254）地址用于试验。</p><p><img src="http://i.imgur.com/CeQISYa.jpg" alt=""></p><p><strong>作用</strong></p><p>子网掩码是一个32位地址，是与IP地址结合使用的一种技术。</p><p>它的主要作用有两个，<br>一是用于屏蔽IP地址的一部分以区别网络标识和主机标识，并说明该IP地址是在局域网上，还是在远程网上。<br>二是用于将一个大的IP网络划分为若干小的子网络。</p><p>使用子网是为了减少IP的浪费。因为随着互联网的发展，越来越多的网络产生，有的网络多则几百台，<br>有的只有区区几台，这样就浪费了很多IP地址，所以要划分子网。使用子网可以提高网络应用的效率。</p><p>通过IP 地址的二进制与子网掩码的二进制进行与运算，确定某个设备的网络地址和主机号，<br>也就是说通过子网掩码分辨一个网络的网络部分和主机部分。</p><p>子网掩码一旦设置，网络地址和主机地址就固定了。子网一个最显著的特征就是具有子网掩码。<br>与IP地址相同，子网掩码的长度也是32位，也可以使用十进制的形式。<br>例如，为二进制形式的子网掩码：1111 1111.1111 1111.1111 1111.0000 0000，采用十进制的形式为：255.255.255.0。</p><p>通过计算机的子网掩码判断两台计算机是否属于同一网段的方法是，将计算机十进制的IP地址和子网掩码转换为二进制的形式，<br>然后进行二进制“与”(AND)计算（全1则得1，不全1则得0），如果得出的结果是相同的，那么这两台计算机就属于同一网段。</p><p><strong>子网掩码表现形式</strong></p><p>IP标识法<br>一个完整IP描述包含IP 地址和子网掩码</p><p>具体标识有两种</p><p>点分十进制<br>192.168.0.n  255.255.255.0（点分十进制） </p><p>这种暂时成为简写吧，懒人写法<br>192.168.0.n/24 （/24表示子网掩码二进制标识法中前面24位1）</p><h3 id="计算机网络的分层模型（OSI模型和TCP-IP模型）及每一层的功能及涉及到的物理设备有哪些。"><a href="#计算机网络的分层模型（OSI模型和TCP-IP模型）及每一层的功能及涉及到的物理设备有哪些。" class="headerlink" title="计算机网络的分层模型（OSI模型和TCP/IP模型）及每一层的功能及涉及到的物理设备有哪些。"></a>计算机网络的分层模型（OSI模型和TCP/IP模型）及每一层的功能及涉及到的物理设备有哪些。</h3><p><strong>OSI模型</strong></p><p><img src="http://i.imgur.com/YO5Nz0D.gif" alt=""></p><p><strong>常见对应各层的设备</strong><br>   物理层：网卡，网线，集线器，中继器，调制解调器</p><p>   数据链路层：网桥，交换机</p><p>   网络层：路由器</p><p>   网关工作在第四层传输层及其以上</p><p><strong>物理层</strong><br>在OSI参考模型中，物理层（Physical Layer）是参考模型的最低层，也是OSI模型的第一层。</p><p>物理层的主要功能是：<br>利用传输介质为数据链路层提供物理连接，实现比特流的透明传输。物理层的作用是实现相邻计算机节点之间比特流的透明传送，尽可能屏蔽掉具体传输介质和物理设备的差异。使其上面的数据链路层不必考虑网络的具体传输介质是什么。“透明传送比特流”表示经实际电路传送后的比特流没有发生变化，对传送的比特流来说，这个电路好像是看不见的。</p><p><strong>数据链路层</strong><br>数据链路层（Data Link Layer）是OSI模型的第二层，负责建立和管理节点间的链路。该层的主要功能是：通过各种控制协议，将有差错的物理信道变为无差错的、能可靠传输数据帧的数据链路。<br>在计算机网络中由于各种干扰的存在，物理链路是不可靠的。因此，这一层的主要功能是在物理层提供的比特流的基础上，通过差错控制、流量控制方法，使有差错的物理线路变为无差错的数据链路，即提供可靠的通过物理介质传输数据的方法。</p><p>该层通常又被分为介质访问控制（MAC）和逻辑链路控制（LLC）两个子层。</p><p>1、MAC子层的主要任务是解决共享型网络中多用户对信道竞争的问题，完成网络介质的访问控制；</p><p>2、LC子层的主要任务是建立和维护网络连接，执行差错校验、流量控制和链路控制。</p><p>数据链路层的具体工作是接收来自物理层的位流形式的数据，并封装成帧，传送到上一层；同样，也将来自上层的数据帧，拆装为位流形式的数据转发到物理层；并且，还负责处理接收端发回的确认帧的信息，以便提供可靠的数据传输。</p><p><strong>网络层</strong><br>网络层（Network Layer）是OSI模型的第三层，它是OSI参考模型中最复杂的一层，也是通信子网的最高一层。它在下两层的基础上向资源子网提供服务。其主要任务是：通过路由选择算法，为报文或分组通过通信子网选择最适当的路径。该层控制数据链路层与传输层之间的信息转发，建立、维持和终止网络的连接。具体地说，数据链路层的数据在这一层被转换为数据包，然后通过路径选择、分段组合、顺序、进/出路由等控制，将信息从一个网络设备传送到另一个网络设备。<br>一般地，数据链路层是解决同一网络内节点之间的通信，而网络层主要解决不同子网间的通信。例如在广域网之间通信时，必然会遇到路由（即两节点间可能有多条路径）选择问题。 </p><p>在实现网络层功能时，需要解决的主要问题如下：<br>寻址：<br>数据链路层中使用的物理地址（如MAC地址）仅解决网络内部的寻址问题。在不同子网之间通信时，为了识别和找到网络中的设备，每一子网中的设备都会被分配一个唯一的地址。由于各子网使用的物理技术可能不同，因此这个地址应当是逻辑地址（如IP地址）。</p><p>交换：<br>规定不同的信息交换方式。常见的交换技术有：线路交换技术和存储转发技术，后者又包括报文交换技术和分组交换技术。</p><p>路由算法：<br>当源节点和目的节点之间存在多条路径时，本层可以根据路由算法，通过网络为数据分组选择最佳路径，并将信息从最合适的路径由发送端传送到接收端。</p><p>连接服务：<br>与数据链路层流量控制不同的是，前者控制的是网络相邻节点间的流量，后者控制的是从源节点到目的节点间的流量。其目的在于防止阻塞，并进行差错检测。</p><p><strong>传输层</strong><br>OSI下3层的主要任务是数据通信，上3层的任务是数据处理。而传输层（Transport Layer）是OSI模型的第4层。因此该层是通信子网和资源子网的接口和桥梁，起到承上启下的作用。</p><p>该层的主要任务是：<br>向用户提供可靠的端到端的差错和流量控制，保证报文的正确传输。传输层的作用是向高层屏蔽下层数据通信的细节，即向用户透明地传送报文。该层常见的协议：TCP/IP中的TCP协议、Novell网络中的SPX协议和微软的NetBIOS/NetBEUI协议。</p><p>传输层提供会话层和网络层之间的传输服务，这种服务从会话层获得数据，并在必要时，对数据进行分割。然后，传输层将数据传递到网络层，并确保数据能正确无误地传送到网络层。因此，传输层负责提供两节点之间数据的可靠传送，当两节点的联系确定之后，传输层则负责监督工作。</p><p>综上，传输层的主要功能如下：<br>传输连接管理：提供建立、维护和拆除传输连接的功能。传输层在网络层的基础上为高层提供“面向连接”和“面向无接连”的两种服务。</p><p>处理传输差错：提供可靠的“面向连接”和不太可靠的“面向无连接”的数据传输服务、差错控制和流量控制。在提供“面向连接”服务时，通过这一层传输的数据将由目标设备确认，如果在指定的时间内未收到确认信息，数据将被重发，监控服务质量。</p><p><strong>会话层</strong><br>会话层（Session Layer）是OSI模型的第5层，是用户应用程序和网络之间的接口，主要任务是：向两个实体的表示层提供建立和使用连接的方法。将不同实体之间的表示层的连接称为会话。因此会话层的任务就是组织和协调两个会话进程之间的通信，并对数据交换进行管理。<br>用户可以按照半双工、单工和全双工的方式建立会话。当建立会话时，用户必须提供他们想要连接的远程地址。而这些地址与MAC（介质访问控制子层）地址或网络层的逻辑地址不同，它们是为用户专门设计的，更便于用户记忆。域名（DN）就是一种网络上使用的远程地址例如：<a href="http://www.163.com就是一个域名。" target="_blank" rel="noopener">www.163.com就是一个域名。</a></p><p>会话层的具体功能如下：</p><p>会话管理：<br>允许用户在两个实体设备之间建立、维持和终止会话，并支持它们之间的数据交换。例如提供单方向会话或双向同时会话，并管理会话中的发送顺序，以及会话所占用时间的长短。</p><p>会话流量控制：<br>提供会话流量控制和交叉会话功能。</p><p>寻址：<br>使用远程地址建立会话连接。</p><p>出错控制：<br>从逻辑上讲会话层主要负责数据交换的建立、保持和终止，但实际的工作却是接收来自传输层的数据，并负责纠正错误。会话控制和远程过程调用均属于这一层的功能。但应注意，此层检查的错误不是通信介质的错误，而是磁盘空间、打印机缺纸等类型的高级错误。</p><p><strong>表示层</strong><br>表示层（Presentation Layer）是OSI模型的第六层，它对来自应用层的命令和数据进行解释，对各种语法赋予相应的含义，并按照一定的格式传送给会话层。其主要功能是“处理用户信息的表示问题，如编码、数据格式转换和加密解密”等。</p><p>表示层的具体功能如下：</p><p>数据格式处理：<br>协商和建立数据交换的格式，解决各应用程序之间在数据格式表示上的差异。</p><p>数据的编码：<br>处理字符集和数字的转换。例如由于用户程序中的数据类型（整型或实型、有符号或无符号等）、用户标识等都可以有不同的表示方式，因此，在设备之间需要具有在不同字符集或格式之间转换的功能。</p><p>压缩和解压缩：<br>为了减少数据的传输量，这一层还负责数据的压缩与恢复。</p><p>数据的加密和解密：<br>可以提高网络的安全性。</p><p><strong>应用层</strong><br>应用层（Application Layer）是OSI参考模型的最高层，它是计算机用户，以及各种应用程序和网络之间的接口，其功能是直接向用户提供服务，完成用户希望在网络上完成的各种工作。它在其他6层工作的基础上，负责完成网络中应用程序与网络操作系统之间的联系，建立与结束使用者之间的联系，并完成网络用户提出的各种网络服务及应用所需的监督、管理和服务等各种协议。此外，该层还负责协调各个应用程序间的工作。<br>应用层为用户提供的服务和协议有：文件服务、目录服务、文件传输服务（FTP）、远程登录服务（Telnet）、电子邮件服务（E-mail）、打印服务、安全服务、网络管理服务、数据库服务等。上述的各种网络服务由该层的不同应用协议和程序完成，不同的网络操作系统之间在功能、界面、实现技术、对硬件的支持、安全可靠性以及具有的各种应用程序接口等各个方面的差异是很大的。</p><p>应用层的主要功能如下：</p><p>用户接口：<br>应用层是用户与网络，以及应用程序与网络间的直接接口，使得用户能够与网络进行交互式联系。<br>实现各种服务：该层具有的各种应用程序可以完成和实现用户请求的各种服务。</p><p><strong>OSI 7层模型的小结</strong><br>由于OSI是一个理想的模型，因此一般网络系统只涉及其中的几层，很少有系统能够具有所有的7层，并完全遵循它的规定。<br>在7层模型中，每一层都提供一个特殊的网络功能。从网络功能的角度观察：下面4层（物理层、数据链路层、网络层和传输层）主要提供数据传输和交换功能，即以节点到节点之间的通信为主；第4层作为上下两部分的桥梁，是整个网络体系结构中最关键的部分；而上3层（会话层、表示层和应用层）则以提供用户与应用程序之间的信息和数据处理功能为主。简言之，下4层主要完成通信子网的功能，上3层主要完成资源子网的功能。</p><p><strong>TCP/IP模型</strong></p><p><img src="http://i.imgur.com/EoJ2Exf.jpg" alt=""></p><p><strong>TCP/IP模型包括4层：</strong></p><p>　　网络接口层–对应OSI参考模型的物理层和数据链路层；</p><p>　　网络层–对应OSI参考模型的网络层；</p><p>　　运输层–对应OSI参考模型的运输层；</p><p>　　应用层–对应OSI参考模型的5、6、7层。</p><p><strong>TCP/IP协议的主要特点如下：</strong></p><p><strong>高可靠性</strong></p><p>TCP/IP采用重新确认的方法保证数据的可靠传输，并采用“窗口”流量控制机制使可靠性得到进一步保证。</p><p><strong>安全性</strong></p><p>为建立TCP连接，在连接的每一端都必须与该连接的安全性控制达成一致。IP在它的控制分组头中有若干字段允许有选择地对传输的信息实施保护。</p><p><strong>灵活性</strong></p><p>TCP/IP要求下层支持该协议，而对上层应用协议不作特殊要求。因此，TCP/IP的使用不受传输介质和网络应用软件的限制。</p><p><strong>总结</strong></p><p>从网络通信的观点来看，Internet是一个由TCP/IP把各个国家、机构、部门的内部网络连接起来的庞大的数据通信网； 从信息资源的角度来看，Internet是一个集各个领域、部门内各种信息资源，以共享为目的的信息资源网；从技术的角度来看，Internet是一个“不同网络互连的网络（网际网）”,是由许多网络（包括局域网、城域网和广域网）互连形成的。</p><h3 id="下面来看看网络的相关操作和脚本"><a href="#下面来看看网络的相关操作和脚本" class="headerlink" title="下面来看看网络的相关操作和脚本"></a>下面来看看网络的相关操作和脚本</h3><h3 id="将Linux主机接入到TCP-IP网络的步骤。（手动指定的方式）"><a href="#将Linux主机接入到TCP-IP网络的步骤。（手动指定的方式）" class="headerlink" title="将Linux主机接入到TCP/IP网络的步骤。（手动指定的方式）"></a>将Linux主机接入到TCP/IP网络的步骤。（手动指定的方式）</h3><p><strong>我就不瞎BB了，直接上操作步骤，分centos和ubuntu两种操作系统，这是一道送分题。</strong></p><p>总体来说有以下几步：</p><p>1、配置IP地址和掩码</p><p>2、配置网关</p><p>3、配置dns的IP地址</p><p><strong>CentOS6</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line"></span><br><span class="line">TYPE=Ethernet        <span class="comment">#90%以上都是以太网啦</span></span><br><span class="line">BOOTPROTO=none       <span class="comment">#如果是自动获取，此处是DHCP，手动指定就是none</span></span><br><span class="line">IPADDR=192.168.0.243 <span class="comment">#修改此处</span></span><br><span class="line">PREFIX=24            <span class="comment">#修改此处</span></span><br><span class="line">GATEWAY=192.168.0.1  <span class="comment">#修改此处</span></span><br><span class="line">DNS1=202.103.44.150  <span class="comment">#修改此处</span></span><br><span class="line">DNS2=202.103.24.68   <span class="comment">#修改此处</span></span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=yes</span><br><span class="line">IPV6INIT=no</span><br><span class="line">NAME=eth0</span><br><span class="line">UUID=b33d04cb-b415-4874-b5a2-e201bb20b46e   <span class="comment">#网卡的唯一标识</span></span><br><span class="line">ONBOOT=yes          <span class="comment">#是否开机启动</span></span><br><span class="line"></span><br><span class="line">最后：wq  保存退出，  再执行 service network restart  <span class="comment">#使其生效</span></span><br></pre></td></tr></table></figure><p><strong>Ubuntu 14.04</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># vim /etc/network/interfaces   #配置IP、掩码、网关</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This file describes the network interfaces available on your system</span></span><br><span class="line"><span class="comment"># and how to activate them. For more information, see interfaces(5).</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The loopback network interface</span></span><br><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line"><span class="comment"># The primary network interface</span></span><br><span class="line">auto eth0</span><br><span class="line">iface eth0 inet static</span><br><span class="line">address 192.168.0.245</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">gateway 192.168.0.1</span><br><span class="line"></span><br><span class="line">root@ubuntu:~<span class="comment"># vim /etc/resolvconf/resolv.conf.d/base   #配置DNS</span></span><br><span class="line"></span><br><span class="line">nameserver 202.103.24.68</span><br><span class="line">nameserver 202.103.44.150</span><br><span class="line"></span><br><span class="line">最后：wq  保存退出</span><br><span class="line"></span><br><span class="line">root@ubuntu:~<span class="comment"># service networking restart   #使其生效</span></span><br></pre></td></tr></table></figure><p>​    </p><h3 id="为Linux主机配置网络信息的方式"><a href="#为Linux主机配置网络信息的方式" class="headerlink" title="为Linux主机配置网络信息的方式"></a>为Linux主机配置网络信息的方式</h3><p>方法一：使用ifconfig或者ip 临时添加网络信息，并使用route命令添加默认网关</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">**注意：所有操作均使用root用户**</span><br><span class="line">修改IP：</span><br><span class="line">ifconfig eth0 192.168.0.66</span><br><span class="line">则直接将第一张网卡的IP修改成192.168.0.66</span><br><span class="line"></span><br><span class="line">增加IP：</span><br><span class="line">ifconfig eth0 add 192.168.2.77 <span class="comment">#增加一个IP</span></span><br><span class="line">ifconfig eth0:0 broadcast 192.168.2.255 <span class="comment">##修改刚刚增加IP的广播地址</span></span><br><span class="line"></span><br><span class="line">再增加一个IP：</span><br><span class="line">ifconfig eth0:0 add 10.10.44.145</span><br><span class="line">ifconfig eth0:0:1 broadcast 10.10.44.255 <span class="comment">#修改刚刚增加IP的广播地址</span></span><br><span class="line"></span><br><span class="line">上述增加完，立刻生效，但是机器重新启动后，就无效了。</span><br><span class="line">route add -net 192.168.0.0/24 gw 192.168.0.1 dev eth1 <span class="comment">#增加网关</span></span><br><span class="line"></span><br><span class="line">[root@centos ~]<span class="comment"># vim /etc/resolv.conf  #增加dns</span></span><br><span class="line">[root@centos ~]<span class="comment"># cat /etc/resolv.conf </span></span><br><span class="line"><span class="comment">#Generated by NetworkManager</span></span><br><span class="line">nameserver 202.103.44.150</span><br><span class="line">nameserver 202.103.24.68</span><br></pre></td></tr></table></figure><p>​    不过这种方法是临时的，服务器一重启就失效了</p><p>​    </p><p>方法二：使用修改/etc/sysconfig/network-scripts/ifcfg-IF_NAME文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ~]<span class="comment"># vim /etc/sysconfig/network-scripts/ifcfg-eth0</span></span><br><span class="line">ifcfg-IFACE 配置文件参数：</span><br><span class="line">DEVICE：此配置文件对应的设备的名称；</span><br><span class="line">ONBOOT：在系统引导过程中，是否激活此接口；</span><br><span class="line">UUID：此设备的惟一标识；</span><br><span class="line">IPV6INIT：是否初始化 IPv6；</span><br><span class="line">BOOTPROTO：激活此接口时使用什么协议来配置接口属性，常用的有 dhcp、bootp、</span><br><span class="line">static、none；</span><br><span class="line">TYPE：接口类型，常见的有 Ethernet, Bridge；</span><br><span class="line">DNS1：第一 DNS 服务器指向；</span><br><span class="line">DNS2：备用 DNS 服务器指向；</span><br><span class="line">DOMAIN：DNS 搜索域；</span><br><span class="line">IPADDR： IP 地址；</span><br><span class="line">NETMASK：子网掩码；CentOS 7 支持使用 PREFIX 以长度方式指明子网掩码；</span><br><span class="line">GATEWAY：默认网关；</span><br><span class="line">USERCTL：是否允许普通用户控制此设备；</span><br><span class="line">PEERDNS：如果 BOOTPROTO 的值为“dhcp”，是否允许 dhcp server 分配的 dns 服务器指</span><br><span class="line">向覆盖本地手动指定的 DNS 服务器指向；默认为允许；</span><br><span class="line">HWADDR：设备的 MAC 地址；     </span><br><span class="line"></span><br><span class="line">[root@centos ~]<span class="comment"># cat /etc/resolv.conf #示例</span></span><br><span class="line"><span class="comment"># Generated by NetworkManager</span></span><br><span class="line">nameserver 202.103.44.150</span><br><span class="line">nameserver 202.103.24.68</span><br><span class="line">[root@centos ~]<span class="comment"># cat /etc/sysconfig/network-scripts/ifcfg-eth0 </span></span><br><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">IPADDR=192.168.0.243</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=192.168.0.1</span><br><span class="line">DNS1=202.103.44.150</span><br><span class="line">DNS2=202.103.24.68</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=yes</span><br><span class="line">IPV6INIT=no</span><br><span class="line">NAME=eth0</span><br><span class="line">UUID=b33d04cb-b415-4874-b5a2-e201bb20b46e</span><br><span class="line">ONBOOT=yes</span><br></pre></td></tr></table></figure><p>一般最常用的就是这两种了。</p><h3 id="用ping命令探测172-16-250-1-172-16-250-254之间的所有主机的在线状态；在线的主机使用绿色显示；不在线的主使用红色显示"><a href="#用ping命令探测172-16-250-1-172-16-250-254之间的所有主机的在线状态；在线的主机使用绿色显示；不在线的主使用红色显示" class="headerlink" title="用ping命令探测172.16.250.1-172.16.250.254之间的所有主机的在线状态；在线的主机使用绿色显示；不在线的主使用红色显示"></a>用ping命令探测172.16.250.1-172.16.250.254之间的所有主机的在线状态；在线的主机使用绿色显示；不在线的主使用红色显示</h3><p>一开始我很茫然，无从下手，用for循环，记得for循环大了会占用内存空间，例如ping B类局域网地址的话，就想着不用for，用while或者until实现可否，折腾了一天多的时间（处女座作的），精益求精，经过N次死循环及失败，于是有了下面的脚本:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@centos Jerry_go]<span class="comment"># wc -l ping4.sh </span></span><br><span class="line">14 ping4.sh</span><br><span class="line">[root@centos Jerry_go]<span class="comment"># cat ping4.sh </span></span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#ping IP</span></span><br><span class="line"><span class="comment">#Author Jerry</span></span><br><span class="line"></span><br><span class="line">ip=0</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$ip</span> -lt 254 ];<span class="keyword">do</span></span><br><span class="line">ip=$[<span class="variable">$ip</span>+1] </span><br><span class="line">ping -c 2 192.168.0.<span class="variable">$ip</span> &gt;&gt; /dev/null</span><br><span class="line">    <span class="keyword">if</span> [ $? == 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\e[1;32m 192.168.0.<span class="variable">$ip</span> ok \e[0m"</span> &amp;&amp; <span class="built_in">continue</span> </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\e[1;31m 192.168.0.<span class="variable">$ip</span> no response \e[0m"</span> &amp;&amp; <span class="built_in">continue</span> </span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[root@centos Jerry_go]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>执行效果：</p><p><img src="http://i.imgur.com/SEJr8bx.png" alt=""></p><p><strong>用for实现</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@centos Jerry_go]<span class="comment"># cat ping.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#ping ip</span></span><br><span class="line"><span class="comment">#Author Jerry</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ((i=1;i&lt;255;i++));<span class="keyword">do</span></span><br><span class="line">    ping -w 1 -c 1 172.16.250.<span class="variable">$i</span> &amp;&gt;/dev/null</span><br><span class="line">    <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\e[1;32m 172.16.250.<span class="variable">$i</span> ok \e[0m"</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">"\e[1;31m 172.16.250.<span class="variable">$i</span> no response \e[0m"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[root@centos Jerry_go]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>经测试效果一样</p><h3 id="描述每个网络接口的配置文件中各个参数的含义和其所对应的值"><a href="#描述每个网络接口的配置文件中各个参数的含义和其所对应的值" class="headerlink" title="描述每个网络接口的配置文件中各个参数的含义和其所对应的值"></a>描述每个网络接口的配置文件中各个参数的含义和其所对应的值</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ifcfg-IFACE配置文件参数：</span><br><span class="line">DEVICE：此配置文件对应的设备的名称；</span><br><span class="line">ONBOOT：在系统引导过程中，是否激活此接口；</span><br><span class="line">UUID：此设备的惟一标识；</span><br><span class="line">IPV6INIT：是否初始化IPv6；</span><br><span class="line">BOOTPROTO：激活此接口时使用什么协议来配置接口属性，常用的有dhcp、bootp、static、none；</span><br><span class="line">TYPE：接口类型，常见的有Ethernet, Bridge；</span><br><span class="line">DNS1：第一DNS服务器指向；</span><br><span class="line">DNS2：备用DNS服务器指向；</span><br><span class="line">DOMAIN：DNS搜索域；</span><br><span class="line">IPADDR： IP地址；</span><br><span class="line">NETMASK：子网掩码；CentOS 7支持使用PREFIX以长度方式指明子网掩码；</span><br><span class="line">GATEWAY：默认网关；</span><br><span class="line">USERCTL：是否允许普通用户控制此设备；</span><br><span class="line">PEERDNS：如果BOOTPROTO的值为“dhcp”，是否允许dhcp server分配的dns服务器指向覆盖本地手动指定的DNS服务器指向；默认为允许；</span><br><span class="line">HWADDR：设备的MAC地址；</span><br><span class="line"></span><br><span class="line">NM_CONTROLLED：是否使用NetworkManager服务来控制接口；</span><br></pre></td></tr></table></figure><h3 id="给网络接口配置多个地址，有哪些方式？"><a href="#给网络接口配置多个地址，有哪些方式？" class="headerlink" title="给网络接口配置多个地址，有哪些方式？"></a>给网络接口配置多个地址，有哪些方式？</h3><p>这个也分快捷跟永久两种方式。主要用到ifconfig</p><p>快捷方式呢，即生效，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">[root@centos ~]<span class="comment"># ifconfig eth0:0 192.168.3.243 netmask 255.255.255.0 up </span></span><br><span class="line">[root@centos ~]<span class="comment"># ifconfig eth0:1 192.168.3.2 netmask 255.255.255.0 up </span></span><br><span class="line">[root@centos ~]<span class="comment"># ip addr show  #查看网卡IP地址方法一</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN </span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000</span><br><span class="line">    link/ether 00:0c:29:04:bd:c1 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.0.243/24 brd 192.168.0.255 scope global eth0</span><br><span class="line">    inet 192.168.3.243/24 brd 192.168.3.255 scope global eth0:0</span><br><span class="line">    inet 192.168.3.2/24 brd 192.168.3.255 scope global secondary eth0:1</span><br><span class="line">[root@centos ~]<span class="comment"># ifconfig #查看网卡IP地址方法二</span></span><br><span class="line">eth0      Link encap:Ethernet  HWaddr 00:0C:29:04:BD:C1  </span><br><span class="line">          inet addr:192.168.0.243  Bcast:192.168.0.255  Mask:255.255.255.0</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line">          RX packets:8122248 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:51751 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1000 </span><br><span class="line">          RX bytes:526472342 (502.0 MiB)  TX bytes:3884350 (3.7 MiB)</span><br><span class="line"></span><br><span class="line">eth0:0    Link encap:Ethernet  HWaddr 00:0C:29:04:BD:C1  </span><br><span class="line">          inet addr:192.168.3.243  Bcast:192.168.3.255  Mask:255.255.255.0</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line"></span><br><span class="line">eth0:1    Link encap:Ethernet  HWaddr 00:0C:29:04:BD:C1  </span><br><span class="line">          inet addr:192.168.3.2  Bcast:192.168.3.255  Mask:255.255.255.0</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line"></span><br><span class="line">lo        Link encap:Local Loopback  </span><br><span class="line">          inet addr:127.0.0.1  Mask:255.0.0.0</span><br><span class="line">          UP LOOPBACK RUNNING  MTU:65536  Metric:1</span><br><span class="line">          RX packets:290 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:290 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:0 </span><br><span class="line">          RX bytes:26660 (26.0 KiB)  TX bytes:26660 (26.0 KiB)</span><br><span class="line"></span><br><span class="line">[root@centos ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>永久方式呢，稍微麻烦点，不过永久嘛，一劳永逸，值得</p><p>是仿照/etc/sysconfig/network-scripts/ifcfg-eth0增加一文件根据网络虚拟接口的名字进行命名<br>例如ifcfg-eth0:0或者ifcfg-eth0:1等等 </p><p><strong>开始飙车了啊，系好安全带！</strong></p><p><img src="http://i.imgur.com/XtjrnlJ.gif" alt=""></p><p><strong>[root@centos ~]# cd /etc/sysconfig/network-scripts/</strong></p><p><strong>[root@centos network-scripts]# cp ifcfg-eth0 ifcfg-eth0:0</strong></p><p><img src="http://i.imgur.com/fmsMaXU.png" alt=""></p><p><strong>[root@centos network-scripts]# vim ifcfg-eth0:0</strong></p><p><img src="http://i.imgur.com/Sppht0x.png" alt=""></p><p>保存退出，重启系统，再看。应该是没问题的啦。</p><h3 id="常用的网络管理类工具及使用方法。"><a href="#常用的网络管理类工具及使用方法。" class="headerlink" title="常用的网络管理类工具及使用方法。"></a>常用的网络管理类工具及使用方法。</h3><p>ifconfig命令:接口及地址查看和管理</p><p>可以使用ifconfig命令配置网卡属性,设置后立即生效，重启后失效。</p><p>显示活动接口信息 ifconfig eth0</p><p>显示所有接口信息 ifconfig -a</p><p>启用或禁用给定接口 ifconfig eth0 up/down</p><p>设置IP地址及掩码 ifconfig eth0 172.168.1.100/24</p><p>route命令：路由查看及管理</p><p>添加主机路由 route add -host 192.168.1.3 gw 172.16.0.1 dev eth0</p><p>添加网络路由 route add -net 192.168.0.0/24 gw 172.16.0.1 dev eth0</p><p>添加默认路由 route add default gw 172.16.0.1</p><p>删除主机路由 route del -host 192.168.1.3</p><p>删除网络路由 route del -net 192.168.0.0 netmask 255.255.255.0</p><p>netstat命令:打印网络连接，路由表，接口统计信息</p><p>以数字形式显示TCP协议相关所有状态 netstat -tan</p><p>以数字形式显示UDP协议相关所有状态 netstat -uan</p><p>以数字形式显示TCP协议相关的监听状态 netstat -tnl</p><p>以数字形式显示UDP协议相关的监听状态 netstat -unl</p><p>显示内核路由表 netstat -r</p><p>显示所有接口统计数据 netstat -i</p><p>显示指定接口信息 netstat -I eth0</p><p>dig命令:解析DNS地址工具</p><p>正解DNS 域名至IP地址 dig -t A <a href="http://www.magedu.com" target="_blank" rel="noopener">www.magedu.com</a></p><p>反解DNS IP地址至域名 dig -x 127.0.0.1</p><p>ip命令:显示/操纵路由，设备，策略路由和隧道</p><p>禁用接口 ip link set dev eth0 down</p><p>启用接口 ip link set dev eth0 up</p><p>显示接口信息 ip link show dev eth0</p><p>显示主地址 ip addr show dev eth0 primary</p><p>显示次地址 ip addr show dev eth0 secondary</p><p>添加IP地址 ip addr add 172.16.100.13/16 dev eth0</p><p>添加网卡别名 ip addr add 172.16.100.13/16 dev eth0 label ‘eth:0’</p><p>删除别名 ip addr flush dev eth0 label ‘eth0:0’</p><p>添加主路由 ip route add 192.168.1.3 via 172.16.0.1 dev eth0</p><p>添加网络路由 ip route add 192.168.0.0/16 via 172.16.0.1 dev eth0</p><p>添加默认路由 ip route add default via 127.16.0.1</p><p>删除路由 ip route del 192.168.1.3</p><p>查看路由 ip route show</p><p>清空路由 ip route flush dev eth0</p><p>ss命令:显示网络连接工具<br>参数用法同netstat</p><p>指定显示某种状态ss -t state established ‘( dport = :ssh or sport = :ssh )’</p><h3 id="Linux系统软件包管理方法（安装、升级、卸载等操作）"><a href="#Linux系统软件包管理方法（安装、升级、卸载等操作）" class="headerlink" title="Linux系统软件包管理方法（安装、升级、卸载等操作）"></a>Linux系统软件包管理方法（安装、升级、卸载等操作）</h3><p>Linux的软件系统包管理那就好玩了，根据这多年的使用经验，主要分为yum和apt两大系列，</p><p>Debian 及其衍生产品如：Ubuntu、Linux Mint 和 Raspbian 的包格式为.deb文件，APT 是最常见包操作命令，可：搜索库、安装包及其依赖和管理升级,而要直接安装现成.deb包时需要使用dpkg命令。</p><p>APT还自吹有超级牛力，有图有真相:</p><p><img src="http://i.imgur.com/YTRW8SC.png" alt=""></p><p>CentOS、Fedora 及 Red Hat 系列 Linux 使用RPM包文件，并使用yum命令管理包文件及与软件库交互。在最新的 Fedora 版本中，yum命令已被dnf取代进行包管理,而要直接安装现成.rpm包时需要使用rpm命令。</p><p>好嘛，都是利器啊。下边且看我分解。</p><p><img src="http://i.imgur.com/8bK5w7n.gif" alt=""></p><h3 id="RPM-包的安装-升级-查询-卸载"><a href="#RPM-包的安装-升级-查询-卸载" class="headerlink" title="RPM 包的安装 / 升级 / 查询 / 卸载"></a>RPM 包的安装 / 升级 / 查询 / 卸载</h3><p>一个 RPM 包包含了已压缩的软件文件集以及该软件的内容信息（在头文件中保存），通常表现为以 .rpm 扩展名结尾的文件，例如 package.rpm 。对其操作，需要使用 rpm 命令。下面介绍 rpm 工具的参数和使用方法。</p><p><strong>RPM 命令常用参数</strong></p><p>RPM 的常规使用方法为 rpm -参数 package.rpm  ( 更多信息，请查阅帮助 $man rpm)：</p><p>-q 在系统中查询软件或查询指定 rpm 包的内容信息</p><p>-i 在系统中安装软件</p><p>-U 在系统中升级软件</p><p>-e 在系统中卸载软件</p><p>-h 用 #(hash) 符显示 rpm 安装过程</p><p>-v 详述安装过程</p><p>-p 表明对 RPM 包进行查询，通常和其它参数同时使用，如：<br>-qlp 查询某个 RPM 包中的所有文件列表<br>-qip 查询某个 RPM 包的内容信息</p><p><strong>RPM 命令参数使用方法</strong><br>以上参数有些需要组合使用，比如说 rpm -h package.rpm 是没有意义的，但 rpm -ih package.rpm 即表示安装 package 并用 # 符显示安装进度。</p><p><strong>安装 RPM 包</strong></p><p>rpm -ivh package.rpm</p><p><strong>升级 RPM 包命令</strong></p><p>rpm -Uvh package.rpm</p><p><strong>卸载 RPM 包命令</strong></p><p>rpm -ev package</p><p><strong>查询 RPM 包中包含的文件列表命令</strong></p><p>rpm -qlp package</p><p><strong>查询 RPM 包中包含的文件列表命令</strong></p><p>rpm -qlp package</p><p><strong>查询 RPM 包中包含的内容信息命令</strong></p><p>rpm -qip package</p><p><strong>查询系统中所有已安装 RPM 包</strong></p><p>rpm -qa</p><h3 id="DEB-包的安装-升级-查询-卸载"><a href="#DEB-包的安装-升级-查询-卸载" class="headerlink" title="DEB 包的安装 / 升级 / 查询 / 卸载"></a>DEB 包的安装 / 升级 / 查询 / 卸载</h3><p>一个 DEB 包包含了已压缩的软件文件集以及该软件的内容信息（在头文件中保存），通常表现为以 .deb 扩展名结尾的文件，例如 package.deb 。对其操作，需要使用 dpkg 命令。下面介绍 dpkg 工具的参数和使用方法，并以 IBM Lotus Notes 在 UBUNTU 904 安装为例做具体说明。</p><p><strong>DPKG 命令常用参数</strong></p><p>DPKG 的常规使用方法为 dpkg -参数 Package(.rpm),( 更多信息，请查阅帮助 $man rpm)</p><p>-l 在系统中查询软件内容信息</p><p>–info 在系统中查询软件或查询指定 rpm 包的内容信息</p><p>-i 在系统中安装 / 升级软件</p><p>-r 在系统中卸载软件 , 不删除配置文件</p><p>-P 在系统中卸载软件以及其配置文件</p><p><strong>DPKG 命令参数使用方法</strong></p><p><strong>安装 DEB 包命令</strong></p><p>dpkg -i package.deb</p><p><strong>升级 DEB 包命令</strong></p><p>dpkg -i package.deb ( 和安装命令相同）</p><p><strong>卸载 DEB 包命令</strong></p><p>dpkg -r package.deb # 不卸载配置文件或 </p><p>dpkg -P package.deb # 卸载配置文件</p><p><strong>查询 DEB 包中包含的文件列表命令</strong></p><p>dpkg-deb -c package.deb</p><p><strong>查询 DEB 包中包含的内容信息命令</strong></p><p>dpkg –info package.deb</p><p><strong>查询系统中所有已安装 DEB 包</strong></p><p>dpkg -l package</p><h3 id="YUM-APT"><a href="#YUM-APT" class="headerlink" title="YUM/APT"></a>YUM/APT</h3><p>大多数 Linux 都使用本地数据库来存储远程可用的包仓库列表，所以在安装或升级包之前最好更新一下这个数据库。</p><p><strong>Debian/Ubuntu</strong></p><p>sudo apt-get update</p><p><strong>CentOS</strong></p><p>yum check-update</p><p><strong>Fedora</strong></p><p>dnf check-update</p><p><strong>升级已安装的包</strong></p><p><strong>Debian/Ubuntu</strong>    </p><p>sudo apt-get upgrade    #仅升级已安装的软件包</p><p>sudo apt-get dist-upgrade    #可添加或删除程序包，以满足新的依赖。</p><p><strong>CentOS</strong>    </p><p>sudo yum update     </p><p><strong>Fedora</strong>    </p><p>sudo dnf upgrade</p><p><strong>查找/搜索软件包</strong></p><p><strong>Debian/Ubuntu</strong><br>apt-cache search  #搜索内容     </p><p><strong>CentOS</strong><br>yum search     #搜索内容<br>yum search all #搜索内容    搜索所有内容，包括包描述。</p><p><strong>Fedora</strong><br>dnf search     #搜索内容<br>dnf search all #搜索内容    搜索所有内容，包括包描述。</p><p><strong>查看某个软件包信息</strong></p><p><strong>Debian/Ubuntu</strong>    </p><p>apt-cache show 包名    #显示有关软件包的本地缓存信息</p><p>dpkg -s 包名         #显示包的当前安装状态</p><p><strong>CentOS</strong>    </p><p>yum info 包名     </p><p>yum deplist 包名    #列出包的以来</p><p><strong>Fedora</strong><br>dnf info 包名<br>dnf repoquery –requires 包名  #列出包的以来</p><p><strong>从软件仓库安装包</strong></p><p>一旦我们知道某个软件包的名称之后，便可以使用如下命令从软件仓库安装包。</p><p><strong>Debian/Ubuntu</strong></p><p>sudo apt-get install 包名<br>sudo apt-get install 包1 包2 …       #安装所有列出的包<br>sudo apt-get install -y 包名       #无需提示直接安装</p><p><strong>CentOS</strong><br>sudo yum install 包名<br>sudo yum install 包1 包2 …         #安装所有列出的包<br>sudo yum install -y 包名               #无需提示直接安装</p><p><strong>Fedora</strong><br>sudo dnf install 包名<br>sudo dnf install 包1 包2 …         #安装所有列出的包<br>sudo dnf install -y 包名               #无需提示直接安装</p><h3 id="使用发行版光盘作为yum-repository"><a href="#使用发行版光盘作为yum-repository" class="headerlink" title="使用发行版光盘作为yum repository"></a>使用发行版光盘作为yum repository</h3><p>1、将主机base源及media源备份并将media源切换至iso mount目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos /]<span class="comment"># cd /etc/yum.repos.d</span></span><br><span class="line">[root@centos yum.repos.d]<span class="comment"># mv CentOS-Base.repo CentOS-Base.repo.bak</span></span><br><span class="line">[root@centos yum.repos.d]<span class="comment"># cp CentOS-Media.repo CentOS-Media.repo.bak</span></span><br><span class="line">[root@centos yum.repos.d]<span class="comment"># vim CentOS-Media.repo</span></span><br></pre></td></tr></table></figure><p><img src="http://i.imgur.com/IsPfQwB.png" alt=""></p><p>2、将iso光盘插入光驱或将iso包挂载到机器中（本次测试直接将iso挂载到虚拟机centos中）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@centos /]<span class="comment"># mkdir /media/CentOS   #建立光盘挂载目录 ，其实就是跟CentOS-Media.repo里面默认的一样啦</span></span><br><span class="line"></span><br><span class="line">[root@centos dev]<span class="comment"># mount /dev/sr0 /media/CentOS/   #挂载光盘</span></span><br></pre></td></tr></table></figure><p>3、测试安装policycoreutils-python</p><p>先清空yum的缓存，再重建yum缓存，看看从光盘的yum repository能否正常读取。</p><p><img src="http://i.imgur.com/vAkQtzi.png" alt=""></p><p>貌似是OK的。</p><p>再来一发</p><p><img src="http://i.imgur.com/HN3jFqR.png" alt=""><br>大功告成！</p><h3 id="完成以下功能"><a href="#完成以下功能" class="headerlink" title="完成以下功能"></a>完成以下功能</h3><p>   (1) 假设某目录(/etc/rc.d/rc3.d/)下分别有K开头的文件和S开头的文件若干；</p><p>   (2) 显示所有以K开头的文件的文件名，并且给其附加一个stop字符串；</p><p>   (3) 显示所有以S开头的文件的文件名，并且给其附加一个start字符串；</p><p>   (4) 分别统计S开头和K开头的文件各有多少；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义统计文件个数的变量，初始化啦</span></span><br><span class="line">filename_S_sum=0</span><br><span class="line">filename_K_sum=0</span><br><span class="line"></span><br><span class="line"><span class="comment">#利用for循环列表支持文件路径*通配S开头的文件</span></span><br><span class="line"><span class="keyword">for</span> filename_S <span class="keyword">in</span> /etc/rc.d/rc3.d/S*;<span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> $(basename <span class="variable">$filename_S</span>) start</span><br><span class="line">        <span class="built_in">let</span> filename_S_sum++</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#利用for循环列表支持文件路径*通配S开头的文件</span></span><br><span class="line"><span class="keyword">for</span> filename_K <span class="keyword">in</span> /etc/rc.d/rc3.d/K*;<span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> $(basename <span class="variable">$filename_K</span>) stop</span><br><span class="line">        <span class="built_in">let</span> filename_K_sum++</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"There is <span class="variable">$filename_S_sum</span> files by S At the beginning of the file name"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"There is <span class="variable">$filename_K_sum</span> files by K At the beginning of the file name"</span></span><br></pre></td></tr></table></figure><p>​    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[root@centos Jerry_go]<span class="comment"># bash week8_title12-2.sh &gt; week8_title12-2.txt &amp;&amp; cat week8_title12-2.txt </span></span><br><span class="line">S01sysstat start</span><br><span class="line">S02lvm2-monitor start</span><br><span class="line">S10network start</span><br><span class="line">S11portreserve start</span><br><span class="line">S12rsyslog start</span><br><span class="line">S22messagebus start</span><br><span class="line">S23NetworkManager start</span><br><span class="line">S25blk-availability start</span><br><span class="line">S26haldaemon start</span><br><span class="line">S26udev-post start</span><br><span class="line">S55memcached start</span><br><span class="line">S55sshd start</span><br><span class="line">S58ntpd start</span><br><span class="line">S90crond start</span><br><span class="line">S95atd start</span><br><span class="line">S99local start</span><br><span class="line">K01smartd stop</span><br><span class="line">K05wdaemon stop</span><br><span class="line">K10psacct stop</span><br><span class="line">K10saslauthd stop</span><br><span class="line">K16abrt-ccpp stop</span><br><span class="line">K16abrtd stop</span><br><span class="line">K30spice-vdagentd stop</span><br><span class="line">K50kdump stop</span><br><span class="line">K61nfs-rdma stop</span><br><span class="line">K75netfs stop</span><br><span class="line">K75ntpdate stop</span><br><span class="line">K75quota_nld stop</span><br><span class="line">K84wpa_supplicant stop</span><br><span class="line">K87restorecond stop</span><br><span class="line">K88auditd stop</span><br><span class="line">K89netconsole stop</span><br><span class="line">K89rdisc stop</span><br><span class="line">K92ip6tables stop</span><br><span class="line">K92iptables stop</span><br><span class="line">K95firstboot stop</span><br><span class="line">K95rdma stop</span><br><span class="line">K99rngd stop</span><br><span class="line">There is 16 files by S At the beginning of the file name</span><br><span class="line">There is 22 files by K At the beginning of the file name</span><br></pre></td></tr></table></figure><p>完成以下功能<br>   (1) 脚本能接受用户名作为参数；</p><p>   (2) 计算此些用户的ID之和；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@centos Jerry_go]<span class="comment"># cat week8_title13.sh  #开始装逼</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">[ <span class="variable">$#</span> -lt 1 ] &amp;&amp; <span class="built_in">echo</span> “At least input one users name ” &amp;&amp; <span class="built_in">exit</span> 1  <span class="comment">#提前判断一下，最少输入一个脚本参数并提示用户</span></span><br><span class="line">userid_sum=0   <span class="comment">#初始化userid_sum变量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> $*;<span class="keyword">do</span>  <span class="comment">#开始用for循环，$*参数表示读取脚本后的任意个参数作为循环列表</span></span><br><span class="line"><span class="keyword">if</span> id <span class="variable">$user</span> &amp;&gt; /dev/null;<span class="keyword">then</span>  <span class="comment">#判断一下用户是否存在</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$user</span> userid is <span class="variable">$(id -u $user)</span>"</span>  <span class="comment">#显示每次循环的当前系统用户的ID</span></span><br><span class="line"><span class="built_in">let</span> userid_sum+=$(id -u <span class="variable">$user</span>)  <span class="comment">#变量自增</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$user</span> is not an existing user"</span>  <span class="comment">#如果用户不存在，输出提示给用户</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"They're userid sum is <span class="variable">$userid_sum</span>"</span>  <span class="comment">#输出用户ID的总和</span></span><br></pre></td></tr></table></figure><p>​        </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@centos Jerry_go]<span class="comment"># bash week8_title13.sh root bin jerry sshd FBI</span></span><br><span class="line">root userid is 0</span><br><span class="line">bin userid is 1</span><br><span class="line">jerry userid is 500</span><br><span class="line">sshd userid is 74</span><br><span class="line">FBI is not an existing user</span><br><span class="line">They<span class="string">'re userid sum is 575</span></span><br><span class="line"><span class="string">[root@centos Jerry_go]#</span></span><br></pre></td></tr></table></figure><p>   (1) 传递一些目录给此脚本；</p><p>   (2) 逐个显示每个目录的所有一级文件或子目录的内容类型；</p><p>   (3) 统计一共有多少个目录；且一共显示了多少个文件的内容类型；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@centos Jerry_go]<span class="comment"># cat week8_title14.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#Author Jerry</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Not less than one script parameters</span></span><br><span class="line">[ <span class="variable">$#</span> -lt 1 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"please aleast input one directory"</span> &amp;&amp; <span class="built_in">exit</span> 1</span><br><span class="line"></span><br><span class="line"><span class="comment">#Judge whether the script parameters of the input from the user directory</span></span><br><span class="line">[ -d $* ] || <span class="built_in">echo</span> <span class="string">"Please enter the directory!!!"</span> </span><br><span class="line">dsum=0</span><br><span class="line">fsum=0</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> file_name <span class="keyword">in</span> <span class="variable">$1</span>;<span class="keyword">do</span></span><br><span class="line">ls -l $* |awk <span class="string">'&#123;print $NF&#125;'</span></span><br><span class="line">    <span class="built_in">let</span> dsum+=$(ls -l $* |grep ^d |wc -l)        </span><br><span class="line"><span class="built_in">let</span> fsum+=$(ls -l $* |grep -v ^d |wc -l)  </span><br><span class="line"><span class="built_in">shift</span> </span><br><span class="line"><span class="built_in">break</span>  </span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"the directories sum:<span class="variable">$dsum</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"the file sum:<span class="variable">$fsum</span>"</span></span><br></pre></td></tr></table></figure><p>​    </p><p>写一个脚本<br>  通过命令行传递一个参数给脚本，参数为用户名</p><p>  如果用户的id号大于等于500，则显示此用户为普通用户；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@centos jerry_go]<span class="comment"># cat week8_title14.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Determine the user's input</span></span><br><span class="line">grep <span class="string">"^<span class="variable">$1</span>\&gt;"</span> /etc/passwd &amp;&gt; /dev/null || <span class="built_in">echo</span> <span class="string">"Please enter a user name"</span> </span><br><span class="line"></span><br><span class="line">userid=$(id -u <span class="variable">$1</span>)</span><br><span class="line"></span><br><span class="line">[ <span class="variable">$userid</span> -ge 500 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"This is a  common user,it's userid is <span class="variable">$userid</span> "</span> || <span class="built_in">echo</span> <span class="string">"This is a  system user,it's userid is <span class="variable">$userid</span> "</span></span><br></pre></td></tr></table></figure><p>写一个脚本<br>   (1) 添加10用户user1-user10；密码同用户名；</p><p>   (2) 用户不存在时才添加；存在时则跳过；</p><p>   (3) 最后显示本次共添加了多少用户；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">declare</span> -i num</span><br><span class="line"><span class="keyword">for</span>((i=1;i&lt;11;i++))&#123;</span><br><span class="line">    <span class="keyword">if</span> ! id user<span class="variable">$i</span> &amp;&gt; /dev/null;<span class="keyword">then</span></span><br><span class="line">        useradd user<span class="variable">$i</span></span><br><span class="line">        <span class="built_in">echo</span> user<span class="variable">$i</span>:user<span class="variable">$i</span> | chpasswd</span><br><span class="line">        <span class="built_in">let</span> num++</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Add <span class="variable">$num</span> users!"</span></span><br></pre></td></tr></table></figure><p>用ping命令测试172.16.250.20-172.16.250.100以内有哪些主机在线，将在线的显示出来；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">net=<span class="string">"172.16.250."</span></span><br><span class="line"><span class="keyword">for</span>((i=20;i&lt;=100;i++))&#123;</span><br><span class="line">    ping -c 1 <span class="variable">$net</span><span class="variable">$i</span> &amp;&gt; /dev/null</span><br><span class="line">    <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$net</span><span class="variable">$i</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打印九九乘法表；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@centos jerry_go]<span class="comment"># bash week8_title18.sh </span></span><br><span class="line">1*1=1</span><br><span class="line">1*2=22*2=4</span><br><span class="line">1*3=32*3=63*3=9</span><br><span class="line">1*4=42*4=83*4=124*4=16</span><br><span class="line">1*5=52*5=103*5=154*5=205*5=25</span><br><span class="line">1*6=62*6=123*6=184*6=245*6=306*6=36</span><br><span class="line">1*7=72*7=143*7=214*7=285*7=356*7=427*7=49</span><br><span class="line">1*8=82*8=163*8=244*8=325*8=406*8=487*8=568*8=64</span><br><span class="line">1*9=92*9=183*9=274*9=365*9=456*9=547*9=638*9=729*9=81</span><br><span class="line"></span><br><span class="line">[root@centos jerry_go]<span class="comment"># cat week8_title18.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> ((i=1;i&lt;=9;i++))&#123;</span><br><span class="line">    <span class="keyword">for</span>((j=1;j&lt;=i;j++));<span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> -e -n <span class="string">"<span class="variable">$j</span>*<span class="variable">$i</span>=<span class="variable">$(($i*$j)</span>)\t"</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="built_in">echo</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;网桥、集线器、二层交换机、三层交换机、路由器的功能、使用场景与区别。&quot;&gt;&lt;a href=&quot;#网桥、集线器、二层交换机、三层交换机、路由器的功能、使用场景与区别。&quot; class=&quot;headerlink&quot; title=&quot;网桥、集线器、二层交换机、三层交换机、路由器的功能、使用场景与区别。&quot;&gt;&lt;/a&gt;网桥、集线器、二层交换机、三层交换机、路由器的功能、使用场景与区别。&lt;/h3&gt;&lt;p&gt;集线器是属于物理层的设备，可以理解为一根网线中间串接出了多个接口，这么多接口共享这一根网线的带宽，&lt;br&gt;因此这些接口上的设备在使得网络时就会出现冲突，或者‘道路’挤占的情况。（所有的设备在一个广播域，冲突域中），集线器现在很少使用了。&lt;/p&gt;
&lt;p&gt;交换机、网桥都是数据链路层的设备，网桥的出现就是为了解决集线器多个接口共处于一个冲突域的问题，网桥具有2个接口，&lt;br&gt;且每个接口设备发送接收数据都是独立的互不影响（每个接口是一个冲突域）。现在这种设备不再使用。&lt;br&gt;交换机可以理解为是一个多接口的网桥，当然具备了网桥分割冲突的功能（每个接口是一个冲突域）。&lt;br&gt;但是交换机（2层交换机）所有接口都在一个广播域中。&lt;/p&gt;
&lt;p&gt;路由器属于网络层设备，路由器不但可以隔离冲突域，同时也可以隔离广播。每个接口是一个冲突域，一个广播域。&lt;br&gt;路由器对于广播数据包不做转发。路由器根据3层地址（现用的IP地址）进行转发数据包到相应的接口。实现不同的IP网段互相通讯。&lt;/p&gt;
&lt;p&gt;二层交换机属数据链路层设备，可以识别数据包中的MAC地址信息，根据MAC地址进行转发，并将这些MAC地址与对应的端口记录在自己内部的一个地址表中。&lt;/p&gt;
    
    </summary>
    
    
      <category term="shell" scheme="https://zhusas.github.io/tags/shell/"/>
    
  </entry>
  
</feed>
