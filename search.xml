<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>MongoDB备份数据引擎升级</title>
      <link href="/2018/07/09/mongodb/"/>
      <url>/2018/07/09/mongodb/</url>
      <content type="html"><![CDATA[<h2 id="MongoDB备份数据引擎升级"><a href="#MongoDB备份数据引擎升级" class="headerlink" title="MongoDB备份数据引擎升级"></a>MongoDB备份数据引擎升级</h2><p><strong>准备工作</strong></p><ol><li>确认已经安装需要运行的MongoDB版本</li><li>确保有足够的空间进行数据导出导入</li><li>您必须使用MongoDB版本3.0或更高版本才能使用WireldTiger存储引擎。 如果使用较早的MongoDB版本，则必须在继续更改存储引擎之前升级MongoDB版本。本文使用的是MongoDB 3.6</li><li>本文使用docker来操作，请自行安装好docker环境。&gt;+<a id="more"></a></li><li>直接在裸机安装MongoDB 3.6进行操作亦可。</li><li>这里演示从MongoDB 2.6备份出来的数据还原到MongoDB 3.6 并以WireldTiger引擎启动运行</li></ol><p><strong>步骤</strong></p><p>1、启动你要运行的MongoDB版本，本文用的是3.6 ，Docker运行，配置文件写明要以<code>wiredTiger</code>  启动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name <span class="variable">$CONTAINER_NAME</span> -v <span class="variable">$DATA_PATH</span>:/data/db -v <span class="variable">$OLD_DATA_PATH</span>:/data2 -v /<span class="variable">$CONFIG_PATH</span>/mongod.conf:/etc/mongod.conf.orig -p <span class="variable">$IP</span>:27017:27017 mongo:3.6</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">变量名</th><th style="text-align:center">作用说明</th></tr></thead><tbody><tr><td style="text-align:center">$CONTAINER_NAME</td><td style="text-align:center">自定义的容器名字</td></tr><tr><td style="text-align:center">$DATA_PATH</td><td style="text-align:center">容器在宿主机上的数据卷路径</td></tr><tr><td style="text-align:center">$OLD_DATA_PATH</td><td style="text-align:center">待升级的老版本MongoDB备份数据</td></tr><tr><td style="text-align:center">$CONFIG_PATH</td><td style="text-align:center">新版MongoDB的配置文件目录</td></tr><tr><td style="text-align:center">$IP</td><td style="text-align:center">MongoDB容器对外提供服务的IP地址</td></tr></tbody></table><p>配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Where and how to store data.</span></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line"><span class="attr">  dbPath:</span> <span class="string">/var/lib/mongodb</span></span><br><span class="line"><span class="attr">    journal:</span></span><br><span class="line"><span class="attr">      enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    engine:</span> <span class="string">wiredTiger</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># where to write logging data.</span></span><br><span class="line"><span class="attr">  systemLog:</span></span><br><span class="line"><span class="attr">    destination:</span> <span class="string">file</span></span><br><span class="line"><span class="attr">    logAppend:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    path:</span> <span class="string">/var/log/mongodb/mongod.log</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># network interfaces</span></span><br><span class="line"><span class="attr">    net:</span></span><br><span class="line"><span class="attr">     port:</span> <span class="number">27017</span></span><br><span class="line"><span class="attr">     bindIp:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># how the process runs</span></span><br><span class="line"><span class="attr">    processManagement:</span></span><br><span class="line"><span class="attr">    timeZoneInfo:</span> <span class="string">/usr/share/zoneinfo</span></span><br></pre></td></tr></table></figure><p>2、把 MongoDB 2.6的备份数据解压到$OLD_DATA_PATH</p><p>3、进入MongoDB 3.6的容器中执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it <span class="variable">$CONTAINER_NAME</span> /bin/bash <span class="comment">#进入docker并分配bash终端</span></span><br><span class="line">mongorestore data2/<span class="comment">#从data2目录中导入备份数据</span></span><br></pre></td></tr></table></figure><p>OK，接下来静候佳音即可。中间会有一段漫长的导入数据，转换引擎，重建索引的过程。</p><p>当然，你要是土豪，用固态硬盘也是极好的。</p><p>4、最后一步，查看一下数据引擎。运行db.serverStatus()命令,查询结果包含如下内容即可：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">"storageEngine" : &#123;</span><br><span class="line">"name" : "wiredTiger",</span><br><span class="line">"supportsCommittedReads" : true,</span><br><span class="line">"readOnly" : false,</span><br><span class="line">"persistent" : true</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> MongoDB,Docker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Docker运行MySQL并启用SSL</title>
      <link href="/2018/06/06/docker-mysql-ssl/"/>
      <url>/2018/06/06/docker-mysql-ssl/</url>
      <content type="html"><![CDATA[<h2 id="mysql1"><a href="#mysql1" class="headerlink" title="mysql1"></a>mysql1</h2>]]></content>
      
      
        <tags>
            
            <tag> MySQL,docker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/05/31/hello-world/"/>
      <url>/2018/05/31/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
</search>
